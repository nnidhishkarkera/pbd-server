{
	"info": {
		"_postman_id": "27851672-8e970e8e-e1a6-4055-b3ed-f22afe89d8a2",
		"name": "WB Rule API",
		"description": "# Introduction\n### API for WB Rule(s) information belonging to specific banks which is available in PBD system.\n### Exposes endpoints to enable clients to _add, remove & modify_ bank WB Rule information. These endpoints, however, are access restricted and client must have the neccessary privileges to utilize them.\n### _Bank code_ wherever applicable for WB Rule(s) being interacted with using the below endpoints, is grabbed from the _request header_ unless specifically requested in the input parameters.\n\n# API summary with common use cases\n## 1. _List bank WB Rule available in PBD System_.\nClients can get a list of all the available WB Rule present with PBD for the bank for which the request is being made.\nResponse will contain all WB Rule with their basic information along with the `totalSize` and `nextPageToken` details.<br>\nThis endpoint contains a `view` input to specify how much details is expected in the response. More info can is given in the input specification.\n\n---\n\n## 2. _Create a bank WB Rule._\nThis operation is used to create WB Rule.\nClients can create and add a new bank WB Rule to their list of existing WB Rule.<br>\nEndpoint responds back with the new bank WB Rule upon successful creation with its ETag value in the response header.\nThis endpoint is access restricted and requires the user to have the proper privileges to perform this operation.\n\n**User Inputs:**<br>\nBank WB Rule details as part of request body. Input will vary according to the user wishes to create the WB Rule in.<br>\nExamples of the inputs can be seen in the endpoint description below.\n\n* `wbRuleId*`: Describes the wb rule id of the WB Rule. <br/><br/>\n* `changeId*`: Describes the change id of the WB Rule. <br/><br/>\n* `isNewCreditorAccount*`: Describes if it is new creditor account or not of the WB Rule. <br/><br/>\n* `futureValueDate*`: Describes the future Value Date for WB Rule.<br /><br/>\n* `bicAndNationalIdValidate*`: Describe the bic And National Id Validate of WB Rule.<br /><br/>\n* `instructedCurrency*`: Describes the instructed Currency of WB Rule is applicable to. <br /><br/>\n* `wbRuleIdentification*`: Describes the wbRule Identification for the WB Rule is applicable to. <br/><br/>\n* `wbRuleType*`: Describes the wbRule Type for the WB Rule. <br/><br/>\n* `businessArea*`: Describes the business Area of WB Rule. <br/><br/>\n* `bicIndicator*`: Defines bic Indicator for WB Rule. <br/><br/>\n* `sanction`: Defines sanction for WB Rule.\n* `minimumAmount`: Describes the Minimum Amount for WB Rule.\n* `validForMarket`: valid For Market for WB Rule.\n* `chargeBearer`: Charge Bearer of WB Rule.\n* `paymentPriority`: Payment Priority of WB Rule.\n* `paymentMethod`: Payment Method of WB Rule.\n* `externalDescription`: External Description of WB Rule.\n* `customerName`: Customer Name of WB Rule.\n* `name`: Name of WB Rule.\n* `freeText`: Free Text of WB Rule.\n* `startDate*`: Start date of the WB Rule. This will be set to current date if no value is passed. <br/><br/>\n* `endDate*`: Expiry date of the WB Rule. <br/><br/>\n\n**Examples:**\n* **(POST) /wbrule** - create a bank wb rule<br>\n---\n\n## 3. _Update a bank WB Rule_\nClients can update an existing bank WB Rule record to change/edit information. Complete bank WB Rule record is expected along the with the modified fields. If not provided it may result in failure or setting of default/NULL values in missing fields.<br>\nResponse contains the updated bank WB Rule record with its ETag value in response header.<br>\nThis too is an access restricted endpoint and requires the user to have the proper privileges to perform the operation.\n\n**User Inputs:**<br>\nBank WB Rule details as part of request body. Complete bank WB Rule details are expected to be sent.<br>\nSimilar to the create endpoint, the input for this endpoint varies according to the input of the WB Rule being updated. Examples can be found in the endpoint description below.\n\nExamples of the inputs can be seen in the endpoint description below.\n\n* `wbRuleId*`: Describes the wb rule id of the WB Rule. <br/><br/>\n* `changeId*`: Describes the change id of the WB Rule. <br/><br/>\n* `isNewCreditorAccount*`: Describes if it is new creditor account or not of the WB Rule. <br/><br/>\n* `futureValueDate*`: Describes the future Value Date for WB Rule.<br /><br/>\n* `bicAndNationalIdValidate*`: Describe the bic And National Id Validate of WB Rule.<br /><br/>\n* `instructedCurrency*`: Describes the instructed Currency of WB Rule is applicable to. <br /><br/>\n* `wbRuleIdentification*`: Describes the wbRule Identification for the WB Rule is applicable to. <br/><br/>\n* `wbRuleType*`: Describes the wbRule Type for the WB Rule. <br/><br/>\n* `businessArea*`: Describes the business Area of WB Rule. <br/><br/>\n* `bicIndicator*`: Defines bic Indicator for WB Rule. <br/><br/>\n* `sanction`: Defines sanction for WB Rule.\n* `minimumAmount`: Describes the Minimum Amount for WB Rule.\n* `validForMarket`: valid For Market for WB Rule.\n* `chargeBearer`: Charge Bearer of WB Rule.\n* `paymentPriority`: Payment Priority of WB Rule.\n* `paymentMethod`: Payment Method of WB Rule.\n* `externalDescription`: External Description of WB Rule.\n* `customerName`: Customer Name of WB Rule.\n* `name`: Name of WB Rule.\n* `freeText`: Free Text of WB Rule.WbRuleInformation\n* `startDate*`: Start date of the WB Rule. This will be set to current date if no value is passed. <br/><br/>\n* `endDate*`: Expiry date of the WB Rule. <br/><br/>\n\n**Examples:**\n* **(PUT) /wbrule** - update a bank wb rule with input details.<br>\n---\n\n## 4. _Read information for a single bank WB Rule_\nInformation for a specific bank WB Rule can be accessed via this endpoint. Response contains the complete data just for the requested WB Rule along with the ETag value in the response header.<br>\n\n**User Inputs:** (mandatory are marked with asterix)\n* `pk*`: Describes the pk of the WB Rule as query parameter.\n\n**Examples:**\n* **(GET) /wbrule/10** - read a wb rule with ID = 10\n---\n\n## 5. _Close/Delete a bank WB Rule_\nThis operation is used to close/delete WB Rule by wb rule id.<br>\nThis endpoint can close/delete a WB Rule.\nSuccessful response will give complete information of WB Rule.<br>\n\n**User Inputs:** (mandatory are marked with asterix)\n* `pk*`:  Describes the pk of the wb rule as query parameter.\n* `version*`: Describes the versionn of wb rule.\n\n**Examples:**\n* **(DELETE) /wbrule/10** - deletes a bank wb rule of ID = 10\n---\n\n\n## 6. _Reference read operation is used to read the existing WB Rule at fifferent references_\nInformation for a specific bank WB Rule can be accessed via this endpoint. Response contains the complete data just for the requested WB Rule id along with the ETag value in the response header.<br>\n\n**Examples:**\n* **(GET) /wbrule/reference-id/1:reference-read\n---\n\n# Error response information\n```\n{\n  \"system\": \"PBD\",\n  \"code\": \"3700\",\n  \"message\": \"Input error.\",\n  \"params\": null,\n  \"applicationSpecific\": {\n    \"severity\": \"INPUT_ERROR\",\n    \"logref\": \"b85946f2-3044-11e9-b210-d663bd873d93\",\n    \"message\": \"Input error.\",\n    \"validationErrors\": [\n      {\n        errorCode: 3700\n          errorMessage: page-size maximum value should not exceed 500.\n      }\n    ],\n    \"cause\": \"string\"\n      \"strackTrace\": \"string\"\n  }\n}\n```\n\n<table>\n  <tr>\n    <th align=\"left\">Field</th>\n    <th align=\"left\">Description</th>\n  </tr>\n  <tr>\n    <td>system</td>\n    <td>The system short name. Always PBD.</td>\n  </tr>\n  <tr>\n    <td>code</td>\n    <td>Error code, identifies uniquely an error type.</td>\n  </tr>\n  <tr>\n    <td>message</td>\n    <td>Error message in English describing the error/information situation</td>\n  </tr>\n  <tr>\n    <td>params</td>\n    <td>Optional dynamic parameters - can be used to construct an error message in the client.</td>\n  </tr>\n  <tr>\n    <td>severity</td>\n    <td>Describes the system level severity of the exception.</td>\n  </tr>\n  <tr>\n    <td>logref</td>\n    <td>A log reference associated with the failed request that can be used by support personnel to filter server logs for diagnostic purpose.\n        The caller of the api should save this log reference with its own incident data so it can be part of an incident report.</td>\n  </tr>\n  <tr>\n    <td>message</td>\n    <td>Contains addition information about the response in case of an exception.</td>\n  </tr>\n  <tr>\n    <td>validationErrors</td>\n    <td>Optional, array of additional details for validation exceptions with errorCode and errorMessage objects.</td>\n  </tr>\n  <tr>\n    <td>cause</td>\n    <td>This is development mode property and won't be visible on live. Contains root cause for the exception.</td>\n  </tr>\n  <tr>\n    <td>stackTrace</td>\n    <td>This is development mode property and won't be visible on live. Contains the stack trace of the exception.</td>\n  </tr>\n</table>\n\n\n# Change log\n<table>\n    <tr>\n      <th align=\"left\">Version</th>\n      <th align=\"left\">Change Description</th>\n    </tr>\n    <tr>\n      <td>v4.0.0</td>\n      <td>First version created using OpenAPI specification</td>\n    </tr>\n</table>\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "wbrule",
			"item": [
				{
					"name": "{pk}",
					"item": [
						{
							"name": "Read WB Rule with its complete details.",
							"id": "27851672-6d565500-eeae-4c8a-b880-4f088f6bac61",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-EVRY-ESB-SECURITYTOKEN",
										"value": "{\"tokenType\": \"EvrySo\", \"token\": \"\"}",
										"type": "text"
									},
									{
										"key": "X-EVRY-ESB-USERSESSION",
										"value": "{\"bankOrgID\": \"2544\",\"userID\": \"e210782\",\"client\": {\"ip\":\"10.10.10.10\"} }",
										"type": "text"
									},
									{
										"key": "X-EVRY-ESB-CLIENTNAME",
										"value": "pen",
										"type": "text"
									},
									{
										"key": "X-EVRY-CLIENT-CLIENTNAME",
										"value": "pen",
										"type": "text"
									},
									{
										"key": "X-EVRY-CLIENT-REQUESTID",
										"value": "${=java.util.UUID.randomUUID().toString()}",
										"type": "text"
									},
									{
										"key": "content-language",
										"value": "en",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "eTag",
										"value": "2",
										"type": "text"
									}
								],
								"url": {
									"raw": "",
									"variable": [
										{
											"key": "pk",
											"value": "6674"
										}
									]
								},
								"description": "Endpoint to read WB Rule with its complete details for the given `pk`.<br>\nWB Rule belonging to the bank code present in the request context will be returned."
							},
							"response": [
								{
									"id": "27851672-3ee058f0-7164-4bcc-86ec-ab04f29e0ef7",
									"name": "OK - Successfully returns the WB Rule being read.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) Identifies the source sending the request. Used to separate different service consumers.\nName should identify customer (bank) and consumer 'application'. The format of the field is 'Organization name'-'Application name'.\n",
												"key": "X-EVRY-CLIENT-CLIENTNAME",
												"value": "<string>"
											},
											{
												"description": "(Required) Unique log reference, generated on the client, and must be unique across multiple sessions and days.",
												"key": "X-EVRY-CLIENT-REQUESTID",
												"value": "<string>"
											},
											{
												"description": "If request origins from a mobile device, this is set to TRUE, else FALSE or not present",
												"key": "X-EVRY-CLIENT-ISMOBILE",
												"value": "<string>"
											},
											{
												"description": "Defines the Signature in the request. Used in accordance with these [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/)\n",
												"key": "Signature",
												"value": "<string>"
											},
											{
												"description": "Defines the Digest in the request. Used in accordance with [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/Digest),\nand is mandatory for all requests containing body.\n",
												"key": "Digest",
												"value": "<string>"
											},
											{
												"description": "Identifies the organization, will in a banking context be the Financial Institution (Konsernnr) registered in the banking infrastructure..",
												"key": "X-EVRY-DATAOWNERORGID",
												"value": "<string>"
											},
											{
												"description": "Identifies the person or system initiating the request.\nNormally this field is set equally to customerid, but should be set to the id of Employee/Agent/Retail/System if request is initiated on behalf of the customerid.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: SSN (Social Security Number) of the user\n* Branch bank employee accessing data of a customer: Logonid of the bank employee\n",
												"key": "X-EVRY-USERID",
												"value": "<string>"
											},
											{
												"description": "Identifies the customer for which this request is initiated.\nShould be set equal to the SSN customer number 11 digits for private customers and the organization number 11 digits with leading zeroes for corporates.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: Organization Number (Foretaksnummer) of the corporate customer\n* Branch bank employee accessing data of a customer: SSN of the user if private customer, Organization Number (Foretaksnummer) if corporate customer\n",
												"key": "X-EVRY-CUSTOMERID",
												"value": "<string>"
											},
											{
												"description": "If the backend soap service is requiring TietoEVRY security object (SO), the field can be set automatic on the TietoEVRY Rest-ESB,\nor the the initiating system can set this field when not integrating through Rest-ESB.\nAn automatic setting of the SO on Rest-ESB is based on an original valid authentication/signing of the request.\n",
												"key": "X-EVRY-SO",
												"value": "<string>"
											},
											{
												"description": "Contains the Security Token used to authenticate the user when logging in to the REST ESB.\nThe REST ESB forwards the Security Token in that header on all requests to the REST Services. In the first version of the REST ESB, the Security Token is an EVRY SO.\nFor clients using IDP, this field is the ID Token (For clients that require SO, a claim within the ID Token contains an SO)",
												"key": "X-EVRY-ESB-SECURITYTOKEN",
												"value": "<string>"
											},
											{
												"description": "Hold the information about user like authentication level ,user Id,organisation ID",
												"key": "X-EVRY-ESB-USERSESSION",
												"value": "<string>"
											},
											{
												"description": "Client ip-address or dns-address from the machine sending the request. Used to separate requests from different physical machines.",
												"key": "X-EVRY-USER-IPADDRESS",
												"value": "<string>"
											},
											{
												"description": "Used to differentiate business logic based on which channel was the origin of the request.\nThe parameter should be set in selfservice use cases, and when a branch officer acts on behalf of the customer.\nValid values are:\n* INT = Online banking from Internet Bank\n* MOB = Online banking from Mobile Bank\n* WAP = Online banking from legacy WAP Mobile Bank\n* SMS = Online banking from SMS Bank\n* TLF = Online banking from Phone Bank\n* ITR = Online banking from office client\n* CEN = Online banking from Charge Engine\n* COR = Online banking from Core\n* BAX = Online banking from Bank Axess\n* BES = Online banking from Corporate Bank\n* OPB = Online banking from Open Banking Parties\n* PSD = Online banking from PSD2 Parties\n* SMW = Online banking from Smart Wealth\n* SPA = Online banking from Saving",
												"key": "X-EVRY-CHANNEL",
												"value": "TLF"
											},
											{
												"description": "Standard HTTP Accept Language. Can be used if textual information from the business systems should deviate from the default language for the organisation.\n",
												"key": "Accept-Language",
												"value": "<string>"
											},
											{
												"description": "Defines the Orgid that the X-EVRY-USERID belongs to.",
												"key": "X-EVRY-USERORGID",
												"value": "<string>"
											},
											{
												"description": "Contains the name of the Client JS Application stored on the user session. The REST ESB forwards the Client JS Application name in that header on all requests to the REST Services",
												"key": "X-EVRY-ESB-CLIENTNAME",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/wbrule/:pk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wbrule",
												":pk"
											],
											"variable": [
												{
													"key": "pk"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"disabled": false,
											"description": {
												"content": "Defines the ETag value of this record.",
												"type": "text/plain"
											},
											"key": "ETag",
											"value": "<string>"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"isNewCreditorAccount\": \"<boolean>\",\n  \"pk\": \"<long>\",\n  \"version\": \"<long>\",\n  \"wbRuleId\": \"<long>\",\n  \"changeId\": \"<long>\",\n  \"futureValueDate\": \"<boolean>\",\n  \"bicAndNationalIdValidate\": \"<boolean>\",\n  \"instructedCurrency\": \"<boolean>\",\n  \"wbRuleIdentification\": {\n    \"code\": \"BLOCKING\",\n    \"showForEndUser\": \"<boolean>\",\n    \"status\": \"INACTIVE\",\n    \"currencyCode\": \"ODV\",\n    \"countryUnionCode\": \"QS\",\n    \"internalDescription\": \"e.*=W*@@zdvjHRkR2cjzML_o+,L6RD%++AHS}gDbp,gb#+k_BR,i-{FO7`gDc7(l //JN7,(cL%CVi=F~gaHLw0.1K>gW[w}D)].\",\n    \"direction\": \"BTB\",\n    \"intermediaryBankPresent\": \"<boolean>\",\n    \"startDate\": \"<date>\",\n    \"name\": \"zhDot `P+(hnIsk`G`6,6KKG-Zo-+ZBtzj7<X1w4Fj]SV|w/L -W1$lUT YXnm8\\\"?HgOMzlDl|^p3\\\"M9RYA_1~;1/AMZq_2E\"\n  },\n  \"wbRuleType\": {\n    \"itemType\": \"BANK\",\n    \"itemValue\": \"9*`YD08oP*>db<JQDX<4&<:tl6=$toQv\"\n  },\n  \"businessArea\": \"CHEQUES\",\n  \"bicIndicator\": \"4\",\n  \"startDate\": \"<date>\",\n  \"endDate\": \"<date>\",\n  \"sanction\": \"<boolean>\",\n  \"minimumAmount\": \"<number>\",\n  \"validForMarket\": \"PM\",\n  \"chargeBearer\": \"SLEV\",\n  \"paymentPriority\": \"HIGH\",\n  \"paymentMethod\": \"COVER\",\n  \"externalDescription\": [\n    {\n      \"description\": \"`FC,uXm%5tR0W9Q`Ve@#a5;5 *kqd({SNpLU;_='^}Yq#t/G@DTzY)\",\n      \"language\": \"BM\"\n    },\n    {\n      \"description\": \"%B;dctp.}ew\",\n      \"language\": \"yVVb\"\n    }\n  ],\n  \"customerName\": \"<string>\",\n  \"name\": \"F,\\\\pyao$wi5Rf8r#ojy!(Q&]p@r@#t.^fWRj_{Nd1jNI1AtSz))S>j~P-t]21 2q9zR_ZBUs5b[UUPTcugG4v{CDNBjHa99}^_>[;zC;fa7)CY^iIw.s0Z}_$)\",\n  \"freeText\": \"W gFo37TI]<KEx1WehU#j'/gy9uZg\\\"=hB^a&VKwXbecwL@8aE^M6RN+&}\\\\5x59AaKlNtbplG@Pt1ll\"\n}"
								},
								{
									"id": "27851672-2effa4f2-6768-445f-80e7-6b8ca8e1f040",
									"name": "Bad Request - If missing or badly formed parameters",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) Identifies the source sending the request. Used to separate different service consumers.\nName should identify customer (bank) and consumer 'application'. The format of the field is 'Organization name'-'Application name'.\n",
												"key": "X-EVRY-CLIENT-CLIENTNAME",
												"value": "<string>"
											},
											{
												"description": "(Required) Unique log reference, generated on the client, and must be unique across multiple sessions and days.",
												"key": "X-EVRY-CLIENT-REQUESTID",
												"value": "<string>"
											},
											{
												"description": "If request origins from a mobile device, this is set to TRUE, else FALSE or not present",
												"key": "X-EVRY-CLIENT-ISMOBILE",
												"value": "<string>"
											},
											{
												"description": "Defines the Signature in the request. Used in accordance with these [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/)\n",
												"key": "Signature",
												"value": "<string>"
											},
											{
												"description": "Defines the Digest in the request. Used in accordance with [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/Digest),\nand is mandatory for all requests containing body.\n",
												"key": "Digest",
												"value": "<string>"
											},
											{
												"description": "Identifies the organization, will in a banking context be the Financial Institution (Konsernnr) registered in the banking infrastructure..",
												"key": "X-EVRY-DATAOWNERORGID",
												"value": "<string>"
											},
											{
												"description": "Identifies the person or system initiating the request.\nNormally this field is set equally to customerid, but should be set to the id of Employee/Agent/Retail/System if request is initiated on behalf of the customerid.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: SSN (Social Security Number) of the user\n* Branch bank employee accessing data of a customer: Logonid of the bank employee\n",
												"key": "X-EVRY-USERID",
												"value": "<string>"
											},
											{
												"description": "Identifies the customer for which this request is initiated.\nShould be set equal to the SSN customer number 11 digits for private customers and the organization number 11 digits with leading zeroes for corporates.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: Organization Number (Foretaksnummer) of the corporate customer\n* Branch bank employee accessing data of a customer: SSN of the user if private customer, Organization Number (Foretaksnummer) if corporate customer\n",
												"key": "X-EVRY-CUSTOMERID",
												"value": "<string>"
											},
											{
												"description": "If the backend soap service is requiring TietoEVRY security object (SO), the field can be set automatic on the TietoEVRY Rest-ESB,\nor the the initiating system can set this field when not integrating through Rest-ESB.\nAn automatic setting of the SO on Rest-ESB is based on an original valid authentication/signing of the request.\n",
												"key": "X-EVRY-SO",
												"value": "<string>"
											},
											{
												"description": "Contains the Security Token used to authenticate the user when logging in to the REST ESB.\nThe REST ESB forwards the Security Token in that header on all requests to the REST Services. In the first version of the REST ESB, the Security Token is an EVRY SO.\nFor clients using IDP, this field is the ID Token (For clients that require SO, a claim within the ID Token contains an SO)",
												"key": "X-EVRY-ESB-SECURITYTOKEN",
												"value": "<string>"
											},
											{
												"description": "Hold the information about user like authentication level ,user Id,organisation ID",
												"key": "X-EVRY-ESB-USERSESSION",
												"value": "<string>"
											},
											{
												"description": "Client ip-address or dns-address from the machine sending the request. Used to separate requests from different physical machines.",
												"key": "X-EVRY-USER-IPADDRESS",
												"value": "<string>"
											},
											{
												"description": "Used to differentiate business logic based on which channel was the origin of the request.\nThe parameter should be set in selfservice use cases, and when a branch officer acts on behalf of the customer.\nValid values are:\n* INT = Online banking from Internet Bank\n* MOB = Online banking from Mobile Bank\n* WAP = Online banking from legacy WAP Mobile Bank\n* SMS = Online banking from SMS Bank\n* TLF = Online banking from Phone Bank\n* ITR = Online banking from office client\n* CEN = Online banking from Charge Engine\n* COR = Online banking from Core\n* BAX = Online banking from Bank Axess\n* BES = Online banking from Corporate Bank\n* OPB = Online banking from Open Banking Parties\n* PSD = Online banking from PSD2 Parties\n* SMW = Online banking from Smart Wealth\n* SPA = Online banking from Saving",
												"key": "X-EVRY-CHANNEL",
												"value": "TLF"
											},
											{
												"description": "Standard HTTP Accept Language. Can be used if textual information from the business systems should deviate from the default language for the organisation.\n",
												"key": "Accept-Language",
												"value": "<string>"
											},
											{
												"description": "Defines the Orgid that the X-EVRY-USERID belongs to.",
												"key": "X-EVRY-USERORGID",
												"value": "<string>"
											},
											{
												"description": "Contains the name of the Client JS Application stored on the user session. The REST ESB forwards the Client JS Application name in that header on all requests to the REST Services",
												"key": "X-EVRY-ESB-CLIENTNAME",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/wbrule/:pk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wbrule",
												":pk"
											],
											"variable": [
												{
													"key": "pk"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"system\": \"<string>\",\n  \"code\": \"<string>\",\n  \"message\": \"<string>\",\n  \"params\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"applicationSpecific\": {\n    \"severity\": \"<string>\",\n    \"logref\": \"<string>\",\n    \"message\": \"<string>\",\n    \"validationErrors\": [\n      {\n        \"errorCode\": \"<string>\",\n        \"errorMessage\": \"<string>\"\n      },\n      {\n        \"errorCode\": \"<string>\",\n        \"errorMessage\": \"<string>\"\n      }\n    ],\n    \"cause\": \"<string>\",\n    \"stackTrace\": \"<string>\"\n  }\n}"
								},
								{
									"id": "27851672-25aa862f-0d5c-42cb-91f2-d4c39c6f89bd",
									"name": "Unauthorized - In case user not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) Identifies the source sending the request. Used to separate different service consumers.\nName should identify customer (bank) and consumer 'application'. The format of the field is 'Organization name'-'Application name'.\n",
												"key": "X-EVRY-CLIENT-CLIENTNAME",
												"value": "<string>"
											},
											{
												"description": "(Required) Unique log reference, generated on the client, and must be unique across multiple sessions and days.",
												"key": "X-EVRY-CLIENT-REQUESTID",
												"value": "<string>"
											},
											{
												"description": "If request origins from a mobile device, this is set to TRUE, else FALSE or not present",
												"key": "X-EVRY-CLIENT-ISMOBILE",
												"value": "<string>"
											},
											{
												"description": "Defines the Signature in the request. Used in accordance with these [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/)\n",
												"key": "Signature",
												"value": "<string>"
											},
											{
												"description": "Defines the Digest in the request. Used in accordance with [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/Digest),\nand is mandatory for all requests containing body.\n",
												"key": "Digest",
												"value": "<string>"
											},
											{
												"description": "Identifies the organization, will in a banking context be the Financial Institution (Konsernnr) registered in the banking infrastructure..",
												"key": "X-EVRY-DATAOWNERORGID",
												"value": "<string>"
											},
											{
												"description": "Identifies the person or system initiating the request.\nNormally this field is set equally to customerid, but should be set to the id of Employee/Agent/Retail/System if request is initiated on behalf of the customerid.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: SSN (Social Security Number) of the user\n* Branch bank employee accessing data of a customer: Logonid of the bank employee\n",
												"key": "X-EVRY-USERID",
												"value": "<string>"
											},
											{
												"description": "Identifies the customer for which this request is initiated.\nShould be set equal to the SSN customer number 11 digits for private customers and the organization number 11 digits with leading zeroes for corporates.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: Organization Number (Foretaksnummer) of the corporate customer\n* Branch bank employee accessing data of a customer: SSN of the user if private customer, Organization Number (Foretaksnummer) if corporate customer\n",
												"key": "X-EVRY-CUSTOMERID",
												"value": "<string>"
											},
											{
												"description": "If the backend soap service is requiring TietoEVRY security object (SO), the field can be set automatic on the TietoEVRY Rest-ESB,\nor the the initiating system can set this field when not integrating through Rest-ESB.\nAn automatic setting of the SO on Rest-ESB is based on an original valid authentication/signing of the request.\n",
												"key": "X-EVRY-SO",
												"value": "<string>"
											},
											{
												"description": "Contains the Security Token used to authenticate the user when logging in to the REST ESB.\nThe REST ESB forwards the Security Token in that header on all requests to the REST Services. In the first version of the REST ESB, the Security Token is an EVRY SO.\nFor clients using IDP, this field is the ID Token (For clients that require SO, a claim within the ID Token contains an SO)",
												"key": "X-EVRY-ESB-SECURITYTOKEN",
												"value": "<string>"
											},
											{
												"description": "Hold the information about user like authentication level ,user Id,organisation ID",
												"key": "X-EVRY-ESB-USERSESSION",
												"value": "<string>"
											},
											{
												"description": "Client ip-address or dns-address from the machine sending the request. Used to separate requests from different physical machines.",
												"key": "X-EVRY-USER-IPADDRESS",
												"value": "<string>"
											},
											{
												"description": "Used to differentiate business logic based on which channel was the origin of the request.\nThe parameter should be set in selfservice use cases, and when a branch officer acts on behalf of the customer.\nValid values are:\n* INT = Online banking from Internet Bank\n* MOB = Online banking from Mobile Bank\n* WAP = Online banking from legacy WAP Mobile Bank\n* SMS = Online banking from SMS Bank\n* TLF = Online banking from Phone Bank\n* ITR = Online banking from office client\n* CEN = Online banking from Charge Engine\n* COR = Online banking from Core\n* BAX = Online banking from Bank Axess\n* BES = Online banking from Corporate Bank\n* OPB = Online banking from Open Banking Parties\n* PSD = Online banking from PSD2 Parties\n* SMW = Online banking from Smart Wealth\n* SPA = Online banking from Saving",
												"key": "X-EVRY-CHANNEL",
												"value": "TLF"
											},
											{
												"description": "Standard HTTP Accept Language. Can be used if textual information from the business systems should deviate from the default language for the organisation.\n",
												"key": "Accept-Language",
												"value": "<string>"
											},
											{
												"description": "Defines the Orgid that the X-EVRY-USERID belongs to.",
												"key": "X-EVRY-USERORGID",
												"value": "<string>"
											},
											{
												"description": "Contains the name of the Client JS Application stored on the user session. The REST ESB forwards the Client JS Application name in that header on all requests to the REST Services",
												"key": "X-EVRY-ESB-CLIENTNAME",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/wbrule/:pk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wbrule",
												":pk"
											],
											"variable": [
												{
													"key": "pk"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "27851672-9c40b512-7153-4176-a88f-502ff335a647",
									"name": "Forbidden - In case user not authorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) Identifies the source sending the request. Used to separate different service consumers.\nName should identify customer (bank) and consumer 'application'. The format of the field is 'Organization name'-'Application name'.\n",
												"key": "X-EVRY-CLIENT-CLIENTNAME",
												"value": "<string>"
											},
											{
												"description": "(Required) Unique log reference, generated on the client, and must be unique across multiple sessions and days.",
												"key": "X-EVRY-CLIENT-REQUESTID",
												"value": "<string>"
											},
											{
												"description": "If request origins from a mobile device, this is set to TRUE, else FALSE or not present",
												"key": "X-EVRY-CLIENT-ISMOBILE",
												"value": "<string>"
											},
											{
												"description": "Defines the Signature in the request. Used in accordance with these [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/)\n",
												"key": "Signature",
												"value": "<string>"
											},
											{
												"description": "Defines the Digest in the request. Used in accordance with [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/Digest),\nand is mandatory for all requests containing body.\n",
												"key": "Digest",
												"value": "<string>"
											},
											{
												"description": "Identifies the organization, will in a banking context be the Financial Institution (Konsernnr) registered in the banking infrastructure..",
												"key": "X-EVRY-DATAOWNERORGID",
												"value": "<string>"
											},
											{
												"description": "Identifies the person or system initiating the request.\nNormally this field is set equally to customerid, but should be set to the id of Employee/Agent/Retail/System if request is initiated on behalf of the customerid.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: SSN (Social Security Number) of the user\n* Branch bank employee accessing data of a customer: Logonid of the bank employee\n",
												"key": "X-EVRY-USERID",
												"value": "<string>"
											},
											{
												"description": "Identifies the customer for which this request is initiated.\nShould be set equal to the SSN customer number 11 digits for private customers and the organization number 11 digits with leading zeroes for corporates.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: Organization Number (Foretaksnummer) of the corporate customer\n* Branch bank employee accessing data of a customer: SSN of the user if private customer, Organization Number (Foretaksnummer) if corporate customer\n",
												"key": "X-EVRY-CUSTOMERID",
												"value": "<string>"
											},
											{
												"description": "If the backend soap service is requiring TietoEVRY security object (SO), the field can be set automatic on the TietoEVRY Rest-ESB,\nor the the initiating system can set this field when not integrating through Rest-ESB.\nAn automatic setting of the SO on Rest-ESB is based on an original valid authentication/signing of the request.\n",
												"key": "X-EVRY-SO",
												"value": "<string>"
											},
											{
												"description": "Contains the Security Token used to authenticate the user when logging in to the REST ESB.\nThe REST ESB forwards the Security Token in that header on all requests to the REST Services. In the first version of the REST ESB, the Security Token is an EVRY SO.\nFor clients using IDP, this field is the ID Token (For clients that require SO, a claim within the ID Token contains an SO)",
												"key": "X-EVRY-ESB-SECURITYTOKEN",
												"value": "<string>"
											},
											{
												"description": "Hold the information about user like authentication level ,user Id,organisation ID",
												"key": "X-EVRY-ESB-USERSESSION",
												"value": "<string>"
											},
											{
												"description": "Client ip-address or dns-address from the machine sending the request. Used to separate requests from different physical machines.",
												"key": "X-EVRY-USER-IPADDRESS",
												"value": "<string>"
											},
											{
												"description": "Used to differentiate business logic based on which channel was the origin of the request.\nThe parameter should be set in selfservice use cases, and when a branch officer acts on behalf of the customer.\nValid values are:\n* INT = Online banking from Internet Bank\n* MOB = Online banking from Mobile Bank\n* WAP = Online banking from legacy WAP Mobile Bank\n* SMS = Online banking from SMS Bank\n* TLF = Online banking from Phone Bank\n* ITR = Online banking from office client\n* CEN = Online banking from Charge Engine\n* COR = Online banking from Core\n* BAX = Online banking from Bank Axess\n* BES = Online banking from Corporate Bank\n* OPB = Online banking from Open Banking Parties\n* PSD = Online banking from PSD2 Parties\n* SMW = Online banking from Smart Wealth\n* SPA = Online banking from Saving",
												"key": "X-EVRY-CHANNEL",
												"value": "TLF"
											},
											{
												"description": "Standard HTTP Accept Language. Can be used if textual information from the business systems should deviate from the default language for the organisation.\n",
												"key": "Accept-Language",
												"value": "<string>"
											},
											{
												"description": "Defines the Orgid that the X-EVRY-USERID belongs to.",
												"key": "X-EVRY-USERORGID",
												"value": "<string>"
											},
											{
												"description": "Contains the name of the Client JS Application stored on the user session. The REST ESB forwards the Client JS Application name in that header on all requests to the REST Services",
												"key": "X-EVRY-ESB-CLIENTNAME",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/wbrule/:pk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wbrule",
												":pk"
											],
											"variable": [
												{
													"key": "pk"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "27851672-f4ac99cc-39e6-4aed-a14e-68112b3d73d4",
									"name": "Not found - resource being requested is not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) Identifies the source sending the request. Used to separate different service consumers.\nName should identify customer (bank) and consumer 'application'. The format of the field is 'Organization name'-'Application name'.\n",
												"key": "X-EVRY-CLIENT-CLIENTNAME",
												"value": "<string>"
											},
											{
												"description": "(Required) Unique log reference, generated on the client, and must be unique across multiple sessions and days.",
												"key": "X-EVRY-CLIENT-REQUESTID",
												"value": "<string>"
											},
											{
												"description": "If request origins from a mobile device, this is set to TRUE, else FALSE or not present",
												"key": "X-EVRY-CLIENT-ISMOBILE",
												"value": "<string>"
											},
											{
												"description": "Defines the Signature in the request. Used in accordance with these [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/)\n",
												"key": "Signature",
												"value": "<string>"
											},
											{
												"description": "Defines the Digest in the request. Used in accordance with [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/Digest),\nand is mandatory for all requests containing body.\n",
												"key": "Digest",
												"value": "<string>"
											},
											{
												"description": "Identifies the organization, will in a banking context be the Financial Institution (Konsernnr) registered in the banking infrastructure..",
												"key": "X-EVRY-DATAOWNERORGID",
												"value": "<string>"
											},
											{
												"description": "Identifies the person or system initiating the request.\nNormally this field is set equally to customerid, but should be set to the id of Employee/Agent/Retail/System if request is initiated on behalf of the customerid.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: SSN (Social Security Number) of the user\n* Branch bank employee accessing data of a customer: Logonid of the bank employee\n",
												"key": "X-EVRY-USERID",
												"value": "<string>"
											},
											{
												"description": "Identifies the customer for which this request is initiated.\nShould be set equal to the SSN customer number 11 digits for private customers and the organization number 11 digits with leading zeroes for corporates.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: Organization Number (Foretaksnummer) of the corporate customer\n* Branch bank employee accessing data of a customer: SSN of the user if private customer, Organization Number (Foretaksnummer) if corporate customer\n",
												"key": "X-EVRY-CUSTOMERID",
												"value": "<string>"
											},
											{
												"description": "If the backend soap service is requiring TietoEVRY security object (SO), the field can be set automatic on the TietoEVRY Rest-ESB,\nor the the initiating system can set this field when not integrating through Rest-ESB.\nAn automatic setting of the SO on Rest-ESB is based on an original valid authentication/signing of the request.\n",
												"key": "X-EVRY-SO",
												"value": "<string>"
											},
											{
												"description": "Contains the Security Token used to authenticate the user when logging in to the REST ESB.\nThe REST ESB forwards the Security Token in that header on all requests to the REST Services. In the first version of the REST ESB, the Security Token is an EVRY SO.\nFor clients using IDP, this field is the ID Token (For clients that require SO, a claim within the ID Token contains an SO)",
												"key": "X-EVRY-ESB-SECURITYTOKEN",
												"value": "<string>"
											},
											{
												"description": "Hold the information about user like authentication level ,user Id,organisation ID",
												"key": "X-EVRY-ESB-USERSESSION",
												"value": "<string>"
											},
											{
												"description": "Client ip-address or dns-address from the machine sending the request. Used to separate requests from different physical machines.",
												"key": "X-EVRY-USER-IPADDRESS",
												"value": "<string>"
											},
											{
												"description": "Used to differentiate business logic based on which channel was the origin of the request.\nThe parameter should be set in selfservice use cases, and when a branch officer acts on behalf of the customer.\nValid values are:\n* INT = Online banking from Internet Bank\n* MOB = Online banking from Mobile Bank\n* WAP = Online banking from legacy WAP Mobile Bank\n* SMS = Online banking from SMS Bank\n* TLF = Online banking from Phone Bank\n* ITR = Online banking from office client\n* CEN = Online banking from Charge Engine\n* COR = Online banking from Core\n* BAX = Online banking from Bank Axess\n* BES = Online banking from Corporate Bank\n* OPB = Online banking from Open Banking Parties\n* PSD = Online banking from PSD2 Parties\n* SMW = Online banking from Smart Wealth\n* SPA = Online banking from Saving",
												"key": "X-EVRY-CHANNEL",
												"value": "TLF"
											},
											{
												"description": "Standard HTTP Accept Language. Can be used if textual information from the business systems should deviate from the default language for the organisation.\n",
												"key": "Accept-Language",
												"value": "<string>"
											},
											{
												"description": "Defines the Orgid that the X-EVRY-USERID belongs to.",
												"key": "X-EVRY-USERORGID",
												"value": "<string>"
											},
											{
												"description": "Contains the name of the Client JS Application stored on the user session. The REST ESB forwards the Client JS Application name in that header on all requests to the REST Services",
												"key": "X-EVRY-ESB-CLIENTNAME",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/wbrule/:pk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wbrule",
												":pk"
											],
											"variable": [
												{
													"key": "pk"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"system\": \"<string>\",\n  \"code\": \"<string>\",\n  \"message\": \"<string>\",\n  \"params\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"applicationSpecific\": {\n    \"severity\": \"<string>\",\n    \"logref\": \"<string>\",\n    \"message\": \"<string>\",\n    \"validationErrors\": [\n      {\n        \"errorCode\": \"<string>\",\n        \"errorMessage\": \"<string>\"\n      },\n      {\n        \"errorCode\": \"<string>\",\n        \"errorMessage\": \"<string>\"\n      }\n    ],\n    \"cause\": \"<string>\",\n    \"stackTrace\": \"<string>\"\n  }\n}"
								},
								{
									"id": "27851672-a40aee13-2298-4f54-adc9-82fbc0d7acc9",
									"name": "Internal server error - technical error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) Identifies the source sending the request. Used to separate different service consumers.\nName should identify customer (bank) and consumer 'application'. The format of the field is 'Organization name'-'Application name'.\n",
												"key": "X-EVRY-CLIENT-CLIENTNAME",
												"value": "<string>"
											},
											{
												"description": "(Required) Unique log reference, generated on the client, and must be unique across multiple sessions and days.",
												"key": "X-EVRY-CLIENT-REQUESTID",
												"value": "<string>"
											},
											{
												"description": "If request origins from a mobile device, this is set to TRUE, else FALSE or not present",
												"key": "X-EVRY-CLIENT-ISMOBILE",
												"value": "<string>"
											},
											{
												"description": "Defines the Signature in the request. Used in accordance with these [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/)\n",
												"key": "Signature",
												"value": "<string>"
											},
											{
												"description": "Defines the Digest in the request. Used in accordance with [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/Digest),\nand is mandatory for all requests containing body.\n",
												"key": "Digest",
												"value": "<string>"
											},
											{
												"description": "Identifies the organization, will in a banking context be the Financial Institution (Konsernnr) registered in the banking infrastructure..",
												"key": "X-EVRY-DATAOWNERORGID",
												"value": "<string>"
											},
											{
												"description": "Identifies the person or system initiating the request.\nNormally this field is set equally to customerid, but should be set to the id of Employee/Agent/Retail/System if request is initiated on behalf of the customerid.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: SSN (Social Security Number) of the user\n* Branch bank employee accessing data of a customer: Logonid of the bank employee\n",
												"key": "X-EVRY-USERID",
												"value": "<string>"
											},
											{
												"description": "Identifies the customer for which this request is initiated.\nShould be set equal to the SSN customer number 11 digits for private customers and the organization number 11 digits with leading zeroes for corporates.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: Organization Number (Foretaksnummer) of the corporate customer\n* Branch bank employee accessing data of a customer: SSN of the user if private customer, Organization Number (Foretaksnummer) if corporate customer\n",
												"key": "X-EVRY-CUSTOMERID",
												"value": "<string>"
											},
											{
												"description": "If the backend soap service is requiring TietoEVRY security object (SO), the field can be set automatic on the TietoEVRY Rest-ESB,\nor the the initiating system can set this field when not integrating through Rest-ESB.\nAn automatic setting of the SO on Rest-ESB is based on an original valid authentication/signing of the request.\n",
												"key": "X-EVRY-SO",
												"value": "<string>"
											},
											{
												"description": "Contains the Security Token used to authenticate the user when logging in to the REST ESB.\nThe REST ESB forwards the Security Token in that header on all requests to the REST Services. In the first version of the REST ESB, the Security Token is an EVRY SO.\nFor clients using IDP, this field is the ID Token (For clients that require SO, a claim within the ID Token contains an SO)",
												"key": "X-EVRY-ESB-SECURITYTOKEN",
												"value": "<string>"
											},
											{
												"description": "Hold the information about user like authentication level ,user Id,organisation ID",
												"key": "X-EVRY-ESB-USERSESSION",
												"value": "<string>"
											},
											{
												"description": "Client ip-address or dns-address from the machine sending the request. Used to separate requests from different physical machines.",
												"key": "X-EVRY-USER-IPADDRESS",
												"value": "<string>"
											},
											{
												"description": "Used to differentiate business logic based on which channel was the origin of the request.\nThe parameter should be set in selfservice use cases, and when a branch officer acts on behalf of the customer.\nValid values are:\n* INT = Online banking from Internet Bank\n* MOB = Online banking from Mobile Bank\n* WAP = Online banking from legacy WAP Mobile Bank\n* SMS = Online banking from SMS Bank\n* TLF = Online banking from Phone Bank\n* ITR = Online banking from office client\n* CEN = Online banking from Charge Engine\n* COR = Online banking from Core\n* BAX = Online banking from Bank Axess\n* BES = Online banking from Corporate Bank\n* OPB = Online banking from Open Banking Parties\n* PSD = Online banking from PSD2 Parties\n* SMW = Online banking from Smart Wealth\n* SPA = Online banking from Saving",
												"key": "X-EVRY-CHANNEL",
												"value": "TLF"
											},
											{
												"description": "Standard HTTP Accept Language. Can be used if textual information from the business systems should deviate from the default language for the organisation.\n",
												"key": "Accept-Language",
												"value": "<string>"
											},
											{
												"description": "Defines the Orgid that the X-EVRY-USERID belongs to.",
												"key": "X-EVRY-USERORGID",
												"value": "<string>"
											},
											{
												"description": "Contains the name of the Client JS Application stored on the user session. The REST ESB forwards the Client JS Application name in that header on all requests to the REST Services",
												"key": "X-EVRY-ESB-CLIENTNAME",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/wbrule/:pk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wbrule",
												":pk"
											],
											"variable": [
												{
													"key": "pk"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"system\": \"<string>\",\n  \"code\": \"<string>\",\n  \"message\": \"<string>\",\n  \"params\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"applicationSpecific\": {\n    \"severity\": \"<string>\",\n    \"logref\": \"<string>\",\n    \"message\": \"<string>\",\n    \"validationErrors\": [\n      {\n        \"errorCode\": \"<string>\",\n        \"errorMessage\": \"<string>\"\n      },\n      {\n        \"errorCode\": \"<string>\",\n        \"errorMessage\": \"<string>\"\n      }\n    ],\n    \"cause\": \"<string>\",\n    \"stackTrace\": \"<string>\"\n  }\n}"
								},
								{
									"id": "27851672-2e32a8e1-6f92-485b-978c-99b284ce9daf",
									"name": "Read WB Rule with its complete details.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-EVRY-DATAOWNERORGID",
												"value": "4201",
												"type": "text"
											},
											{
												"key": "x-evry-esb-usersession",
												"value": "{\"bankOrgID\": \"4201\",\"userID\": \"e220102\",\"client\": {\"ip\":\"10.10.10.10\"} }",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "x-evry-esb-securitytoken",
												"value": "{\"tokenType\": \"EvrySo\", \"token\": \"03111012010400425kglPboRi3h1Q0wGJvxDnjLEmmmyjbdrfsSaabKNt2t%2BCqK3eX2EphONTCSUcmn1BsSaabKNt2t%2BxJppso23a37EmmmyjbdrfyqVfESZ%2BvdaEdNM4lOx0RzgSxAz1%2B8eEsSaabKNt2t%2FXzlyjxYnxhcG46wcbIKp%2FsSaabKNt2t9wBUG0SyIoqFfig80Gq4uXVBtimDzTiu3EfQIWD5xMfk2jSY2FGfvV26qFHJXpC08%3DRScZIBaF5rVbaSQXdfjW7qpDd%2Fx6Uv7yZLZhCUf3MZQpUdJt1NcsZDOjPzj%2FxNUr4iwU0MZPvSc40rnfiJVGhX6lz1BFMma9XVgKg5SRUqBh2Vd0hQRhPCN3LcKOZ%2B4Q6Kstjdn9Jtnmh7ILkD4X%2BB0RNu8YM7rIAPdQI5SLqyM%3D\"}",
												"type": "text"
											},
											{
												"key": "X-EVRY-ESB-CLIENTNAME",
												"value": "pen",
												"type": "text"
											},
											{
												"key": "X-EVRY-CLIENT-CLIENTNAME",
												"value": "pen",
												"type": "text"
											},
											{
												"key": "X-EVRY-CLIENT-REQUESTID",
												"value": "${=java.util.UUID.randomUUID().toString()}",
												"type": "text"
											},
											{
												"key": "content-language",
												"value": "en",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "eTag",
												"value": "2",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/wbrule/:pk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wbrule",
												":pk"
											],
											"variable": [
												{
													"key": "pk",
													"value": "3124"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "ETag",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Date",
											"value": "Mon, 31 Jul 2023 06:52:53 GMT"
										},
										{
											"key": "X-sorp",
											"value": "e220102;4201;-;pen;http://10.246.89.245:10450/pbdsrv/api/v7;wbrule/-;-;${=java.util.UUID.randomUUID().toString()};-;-;false"
										},
										{
											"key": "Digest",
											"value": "SHA-256=EX6Z68X/S0xMP/UVgZbK+CJJtb2E5SZpAZ3TOhvwQWY="
										},
										{
											"key": "Signature",
											"value": "keyId=\"dc2ccd1e2341ebd5cb34f007d23defe9f0605b7602e0e87a29d32252a4e23fb6\",algorithm=\"ecdsa-sha256\",headers=\"etag x-sorp digest date content-type\",signature=\"MEUCIDPymy3O4/lv2/OcwOdy9sz8lfmLTAfIW2rZDpxm/qZhAiEA6jyqZV0GATjOeV3XydKurKWkKB5uuyJ3APJJP2TdU+M=\""
										},
										{
											"key": "Content-Length",
											"value": "983"
										},
										{
											"key": "Server",
											"value": "Jetty(9.4.44.v20210927)"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"pk\": 3124,\n    \"version\": 0,\n    \"wbRuleId\": 3124,\n    \"changeId\": 1213951,\n    \"isNewCreditorAccount\": true,\n    \"bicAndNationalIdValidate\": true,\n    \"instructedCurrency\": true,\n    \"wbRuleIdentification\": {\n        \"code\": \"BLOCKING\",\n        \"showForEndUser\": true,\n        \"status\": \"AWAITING_VERIFICATION\",\n        \"currencyCode\": \"EUR\",\n        \"countryUnionCode\": \"US\",\n        \"internalDescription\": \"Eb~U4BQ-qu%uZ4kp=7ODpITUbQE<8>L/:,8\",\n        \"direction\": \"OUTWARD\",\n        \"intermediaryBankPresent\": true\n    },\n    \"wbRuleType\": {\n        \"itemType\": \"BANK\",\n        \"itemValue\": \"SNOMSG\"\n    },\n    \"businessArea\": \"PAYMENTS\",\n    \"bicIndicator\": \"6\",\n    \"startDate\": \"2023-06-13\",\n    \"sanction\": false,\n    \"minimumAmount\": 1,\n    \"validForMarket\": \"PM\",\n    \"chargeBearer\": \"CRED\",\n    \"paymentPriority\": \"NORMAL\",\n    \"externalDescription\": [\n        {\n            \"language\": \"nb\",\n            \"description\": \"d:bzf9`7@\\\"G]n7K$\\\\_2<{?hV]6Qof;FZ`-;~_zBK%`Npo-`_ow4q\\\"}Qm+3 Z$XTE'bwk&|B0rv,\\\\H4Ij}]KrTP:NJQ VvNtg}y!aw$^G;!\"\n        }\n    ],\n    \"name\": \"hd,}2g:`\\\"&pi1Y+FK\\\"J/Tn55z%j'a7Q<jmwB96RerT1qSnz>}~l7@|8:NdxR\\\\<Y?b!h{.Rg*+DOpR:ka)6OH\",\n    \"freeText\": \"t/^p?;6G'mr&BghlA\\\\WzeWX=`^*D`Zt{M'Lg9'+e,:v]IwMZ&J-2R!#q'OEJ!OGxaYzJR7- \"\n}"
								}
							]
						},
						{
							"name": "Read WB Rule with its complete details. Copy",
							"id": "27851672-a60bcd8c-6957-41da-b269-0370a4d74112",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-EVRY-ESB-SECURITYTOKEN",
										"value": "{\"tokenType\": \"EvrySo\", \"token\": \"\"}",
										"type": "text"
									},
									{
										"key": "X-EVRY-ESB-USERSESSION",
										"value": "{\"bankOrgID\": \"2544\",\"userID\": \"e210782\",\"client\": {\"ip\":\"10.10.10.10\"} }",
										"type": "text"
									},
									{
										"key": "X-EVRY-ESB-CLIENTNAME",
										"value": "pen",
										"type": "text"
									},
									{
										"key": "X-EVRY-CLIENT-CLIENTNAME",
										"value": "pen",
										"type": "text"
									},
									{
										"key": "X-EVRY-CLIENT-REQUESTID",
										"value": "${=java.util.UUID.randomUUID().toString()}",
										"type": "text"
									},
									{
										"key": "content-language",
										"value": "en",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "eTag",
										"value": "2",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"changeId\": 39320,\r\n  \"wbRuleId\": 6143\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://10.246.89.103:20891/pbdsrv/api/v6/wbrule/wbruleread",
									"protocol": "http",
									"host": [
										"10",
										"246",
										"89",
										"103"
									],
									"port": "20891",
									"path": [
										"pbdsrv",
										"api",
										"v6",
										"wbrule",
										"wbruleread"
									]
								},
								"description": "Endpoint to read WB Rule with its complete details for the given `pk`.<br>\nWB Rule belonging to the bank code present in the request context will be returned."
							},
							"response": [
								{
									"id": "27851672-01e25b1d-3a3b-4865-833f-2db50ac20232",
									"name": "OK - Successfully returns the WB Rule being read.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) Identifies the source sending the request. Used to separate different service consumers.\nName should identify customer (bank) and consumer 'application'. The format of the field is 'Organization name'-'Application name'.\n",
												"key": "X-EVRY-CLIENT-CLIENTNAME",
												"value": "<string>"
											},
											{
												"description": "(Required) Unique log reference, generated on the client, and must be unique across multiple sessions and days.",
												"key": "X-EVRY-CLIENT-REQUESTID",
												"value": "<string>"
											},
											{
												"description": "If request origins from a mobile device, this is set to TRUE, else FALSE or not present",
												"key": "X-EVRY-CLIENT-ISMOBILE",
												"value": "<string>"
											},
											{
												"description": "Defines the Signature in the request. Used in accordance with these [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/)\n",
												"key": "Signature",
												"value": "<string>"
											},
											{
												"description": "Defines the Digest in the request. Used in accordance with [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/Digest),\nand is mandatory for all requests containing body.\n",
												"key": "Digest",
												"value": "<string>"
											},
											{
												"description": "Identifies the organization, will in a banking context be the Financial Institution (Konsernnr) registered in the banking infrastructure..",
												"key": "X-EVRY-DATAOWNERORGID",
												"value": "<string>"
											},
											{
												"description": "Identifies the person or system initiating the request.\nNormally this field is set equally to customerid, but should be set to the id of Employee/Agent/Retail/System if request is initiated on behalf of the customerid.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: SSN (Social Security Number) of the user\n* Branch bank employee accessing data of a customer: Logonid of the bank employee\n",
												"key": "X-EVRY-USERID",
												"value": "<string>"
											},
											{
												"description": "Identifies the customer for which this request is initiated.\nShould be set equal to the SSN customer number 11 digits for private customers and the organization number 11 digits with leading zeroes for corporates.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: Organization Number (Foretaksnummer) of the corporate customer\n* Branch bank employee accessing data of a customer: SSN of the user if private customer, Organization Number (Foretaksnummer) if corporate customer\n",
												"key": "X-EVRY-CUSTOMERID",
												"value": "<string>"
											},
											{
												"description": "If the backend soap service is requiring TietoEVRY security object (SO), the field can be set automatic on the TietoEVRY Rest-ESB,\nor the the initiating system can set this field when not integrating through Rest-ESB.\nAn automatic setting of the SO on Rest-ESB is based on an original valid authentication/signing of the request.\n",
												"key": "X-EVRY-SO",
												"value": "<string>"
											},
											{
												"description": "Contains the Security Token used to authenticate the user when logging in to the REST ESB.\nThe REST ESB forwards the Security Token in that header on all requests to the REST Services. In the first version of the REST ESB, the Security Token is an EVRY SO.\nFor clients using IDP, this field is the ID Token (For clients that require SO, a claim within the ID Token contains an SO)",
												"key": "X-EVRY-ESB-SECURITYTOKEN",
												"value": "<string>"
											},
											{
												"description": "Hold the information about user like authentication level ,user Id,organisation ID",
												"key": "X-EVRY-ESB-USERSESSION",
												"value": "<string>"
											},
											{
												"description": "Client ip-address or dns-address from the machine sending the request. Used to separate requests from different physical machines.",
												"key": "X-EVRY-USER-IPADDRESS",
												"value": "<string>"
											},
											{
												"description": "Used to differentiate business logic based on which channel was the origin of the request.\nThe parameter should be set in selfservice use cases, and when a branch officer acts on behalf of the customer.\nValid values are:\n* INT = Online banking from Internet Bank\n* MOB = Online banking from Mobile Bank\n* WAP = Online banking from legacy WAP Mobile Bank\n* SMS = Online banking from SMS Bank\n* TLF = Online banking from Phone Bank\n* ITR = Online banking from office client\n* CEN = Online banking from Charge Engine\n* COR = Online banking from Core\n* BAX = Online banking from Bank Axess\n* BES = Online banking from Corporate Bank\n* OPB = Online banking from Open Banking Parties\n* PSD = Online banking from PSD2 Parties\n* SMW = Online banking from Smart Wealth\n* SPA = Online banking from Saving",
												"key": "X-EVRY-CHANNEL",
												"value": "TLF"
											},
											{
												"description": "Standard HTTP Accept Language. Can be used if textual information from the business systems should deviate from the default language for the organisation.\n",
												"key": "Accept-Language",
												"value": "<string>"
											},
											{
												"description": "Defines the Orgid that the X-EVRY-USERID belongs to.",
												"key": "X-EVRY-USERORGID",
												"value": "<string>"
											},
											{
												"description": "Contains the name of the Client JS Application stored on the user session. The REST ESB forwards the Client JS Application name in that header on all requests to the REST Services",
												"key": "X-EVRY-ESB-CLIENTNAME",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/wbrule/:pk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wbrule",
												":pk"
											],
											"variable": [
												{
													"key": "pk"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"disabled": false,
											"description": {
												"content": "Defines the ETag value of this record.",
												"type": "text/plain"
											},
											"key": "ETag",
											"value": "<string>"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"isNewCreditorAccount\": \"<boolean>\",\n  \"pk\": \"<long>\",\n  \"version\": \"<long>\",\n  \"wbRuleId\": \"<long>\",\n  \"changeId\": \"<long>\",\n  \"futureValueDate\": \"<boolean>\",\n  \"bicAndNationalIdValidate\": \"<boolean>\",\n  \"instructedCurrency\": \"<boolean>\",\n  \"wbRuleIdentification\": {\n    \"code\": \"BLOCKING\",\n    \"showForEndUser\": \"<boolean>\",\n    \"status\": \"INACTIVE\",\n    \"currencyCode\": \"ODV\",\n    \"countryUnionCode\": \"QS\",\n    \"internalDescription\": \"e.*=W*@@zdvjHRkR2cjzML_o+,L6RD%++AHS}gDbp,gb#+k_BR,i-{FO7`gDc7(l //JN7,(cL%CVi=F~gaHLw0.1K>gW[w}D)].\",\n    \"direction\": \"BTB\",\n    \"intermediaryBankPresent\": \"<boolean>\",\n    \"startDate\": \"<date>\",\n    \"name\": \"zhDot `P+(hnIsk`G`6,6KKG-Zo-+ZBtzj7<X1w4Fj]SV|w/L -W1$lUT YXnm8\\\"?HgOMzlDl|^p3\\\"M9RYA_1~;1/AMZq_2E\"\n  },\n  \"wbRuleType\": {\n    \"itemType\": \"BANK\",\n    \"itemValue\": \"9*`YD08oP*>db<JQDX<4&<:tl6=$toQv\"\n  },\n  \"businessArea\": \"CHEQUES\",\n  \"bicIndicator\": \"4\",\n  \"startDate\": \"<date>\",\n  \"endDate\": \"<date>\",\n  \"sanction\": \"<boolean>\",\n  \"minimumAmount\": \"<number>\",\n  \"validForMarket\": \"PM\",\n  \"chargeBearer\": \"SLEV\",\n  \"paymentPriority\": \"HIGH\",\n  \"paymentMethod\": \"COVER\",\n  \"externalDescription\": [\n    {\n      \"description\": \"`FC,uXm%5tR0W9Q`Ve@#a5;5 *kqd({SNpLU;_='^}Yq#t/G@DTzY)\",\n      \"language\": \"BM\"\n    },\n    {\n      \"description\": \"%B;dctp.}ew\",\n      \"language\": \"yVVb\"\n    }\n  ],\n  \"customerName\": \"<string>\",\n  \"name\": \"F,\\\\pyao$wi5Rf8r#ojy!(Q&]p@r@#t.^fWRj_{Nd1jNI1AtSz))S>j~P-t]21 2q9zR_ZBUs5b[UUPTcugG4v{CDNBjHa99}^_>[;zC;fa7)CY^iIw.s0Z}_$)\",\n  \"freeText\": \"W gFo37TI]<KEx1WehU#j'/gy9uZg\\\"=hB^a&VKwXbecwL@8aE^M6RN+&}\\\\5x59AaKlNtbplG@Pt1ll\"\n}"
								},
								{
									"id": "27851672-111833d0-6cf4-42ec-b511-7a479e309dc4",
									"name": "Bad Request - If missing or badly formed parameters",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) Identifies the source sending the request. Used to separate different service consumers.\nName should identify customer (bank) and consumer 'application'. The format of the field is 'Organization name'-'Application name'.\n",
												"key": "X-EVRY-CLIENT-CLIENTNAME",
												"value": "<string>"
											},
											{
												"description": "(Required) Unique log reference, generated on the client, and must be unique across multiple sessions and days.",
												"key": "X-EVRY-CLIENT-REQUESTID",
												"value": "<string>"
											},
											{
												"description": "If request origins from a mobile device, this is set to TRUE, else FALSE or not present",
												"key": "X-EVRY-CLIENT-ISMOBILE",
												"value": "<string>"
											},
											{
												"description": "Defines the Signature in the request. Used in accordance with these [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/)\n",
												"key": "Signature",
												"value": "<string>"
											},
											{
												"description": "Defines the Digest in the request. Used in accordance with [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/Digest),\nand is mandatory for all requests containing body.\n",
												"key": "Digest",
												"value": "<string>"
											},
											{
												"description": "Identifies the organization, will in a banking context be the Financial Institution (Konsernnr) registered in the banking infrastructure..",
												"key": "X-EVRY-DATAOWNERORGID",
												"value": "<string>"
											},
											{
												"description": "Identifies the person or system initiating the request.\nNormally this field is set equally to customerid, but should be set to the id of Employee/Agent/Retail/System if request is initiated on behalf of the customerid.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: SSN (Social Security Number) of the user\n* Branch bank employee accessing data of a customer: Logonid of the bank employee\n",
												"key": "X-EVRY-USERID",
												"value": "<string>"
											},
											{
												"description": "Identifies the customer for which this request is initiated.\nShould be set equal to the SSN customer number 11 digits for private customers and the organization number 11 digits with leading zeroes for corporates.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: Organization Number (Foretaksnummer) of the corporate customer\n* Branch bank employee accessing data of a customer: SSN of the user if private customer, Organization Number (Foretaksnummer) if corporate customer\n",
												"key": "X-EVRY-CUSTOMERID",
												"value": "<string>"
											},
											{
												"description": "If the backend soap service is requiring TietoEVRY security object (SO), the field can be set automatic on the TietoEVRY Rest-ESB,\nor the the initiating system can set this field when not integrating through Rest-ESB.\nAn automatic setting of the SO on Rest-ESB is based on an original valid authentication/signing of the request.\n",
												"key": "X-EVRY-SO",
												"value": "<string>"
											},
											{
												"description": "Contains the Security Token used to authenticate the user when logging in to the REST ESB.\nThe REST ESB forwards the Security Token in that header on all requests to the REST Services. In the first version of the REST ESB, the Security Token is an EVRY SO.\nFor clients using IDP, this field is the ID Token (For clients that require SO, a claim within the ID Token contains an SO)",
												"key": "X-EVRY-ESB-SECURITYTOKEN",
												"value": "<string>"
											},
											{
												"description": "Hold the information about user like authentication level ,user Id,organisation ID",
												"key": "X-EVRY-ESB-USERSESSION",
												"value": "<string>"
											},
											{
												"description": "Client ip-address or dns-address from the machine sending the request. Used to separate requests from different physical machines.",
												"key": "X-EVRY-USER-IPADDRESS",
												"value": "<string>"
											},
											{
												"description": "Used to differentiate business logic based on which channel was the origin of the request.\nThe parameter should be set in selfservice use cases, and when a branch officer acts on behalf of the customer.\nValid values are:\n* INT = Online banking from Internet Bank\n* MOB = Online banking from Mobile Bank\n* WAP = Online banking from legacy WAP Mobile Bank\n* SMS = Online banking from SMS Bank\n* TLF = Online banking from Phone Bank\n* ITR = Online banking from office client\n* CEN = Online banking from Charge Engine\n* COR = Online banking from Core\n* BAX = Online banking from Bank Axess\n* BES = Online banking from Corporate Bank\n* OPB = Online banking from Open Banking Parties\n* PSD = Online banking from PSD2 Parties\n* SMW = Online banking from Smart Wealth\n* SPA = Online banking from Saving",
												"key": "X-EVRY-CHANNEL",
												"value": "TLF"
											},
											{
												"description": "Standard HTTP Accept Language. Can be used if textual information from the business systems should deviate from the default language for the organisation.\n",
												"key": "Accept-Language",
												"value": "<string>"
											},
											{
												"description": "Defines the Orgid that the X-EVRY-USERID belongs to.",
												"key": "X-EVRY-USERORGID",
												"value": "<string>"
											},
											{
												"description": "Contains the name of the Client JS Application stored on the user session. The REST ESB forwards the Client JS Application name in that header on all requests to the REST Services",
												"key": "X-EVRY-ESB-CLIENTNAME",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/wbrule/:pk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wbrule",
												":pk"
											],
											"variable": [
												{
													"key": "pk"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"system\": \"<string>\",\n  \"code\": \"<string>\",\n  \"message\": \"<string>\",\n  \"params\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"applicationSpecific\": {\n    \"severity\": \"<string>\",\n    \"logref\": \"<string>\",\n    \"message\": \"<string>\",\n    \"validationErrors\": [\n      {\n        \"errorCode\": \"<string>\",\n        \"errorMessage\": \"<string>\"\n      },\n      {\n        \"errorCode\": \"<string>\",\n        \"errorMessage\": \"<string>\"\n      }\n    ],\n    \"cause\": \"<string>\",\n    \"stackTrace\": \"<string>\"\n  }\n}"
								},
								{
									"id": "27851672-f4f6c7f9-79f3-47b5-841a-6e1149693d0a",
									"name": "Unauthorized - In case user not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) Identifies the source sending the request. Used to separate different service consumers.\nName should identify customer (bank) and consumer 'application'. The format of the field is 'Organization name'-'Application name'.\n",
												"key": "X-EVRY-CLIENT-CLIENTNAME",
												"value": "<string>"
											},
											{
												"description": "(Required) Unique log reference, generated on the client, and must be unique across multiple sessions and days.",
												"key": "X-EVRY-CLIENT-REQUESTID",
												"value": "<string>"
											},
											{
												"description": "If request origins from a mobile device, this is set to TRUE, else FALSE or not present",
												"key": "X-EVRY-CLIENT-ISMOBILE",
												"value": "<string>"
											},
											{
												"description": "Defines the Signature in the request. Used in accordance with these [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/)\n",
												"key": "Signature",
												"value": "<string>"
											},
											{
												"description": "Defines the Digest in the request. Used in accordance with [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/Digest),\nand is mandatory for all requests containing body.\n",
												"key": "Digest",
												"value": "<string>"
											},
											{
												"description": "Identifies the organization, will in a banking context be the Financial Institution (Konsernnr) registered in the banking infrastructure..",
												"key": "X-EVRY-DATAOWNERORGID",
												"value": "<string>"
											},
											{
												"description": "Identifies the person or system initiating the request.\nNormally this field is set equally to customerid, but should be set to the id of Employee/Agent/Retail/System if request is initiated on behalf of the customerid.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: SSN (Social Security Number) of the user\n* Branch bank employee accessing data of a customer: Logonid of the bank employee\n",
												"key": "X-EVRY-USERID",
												"value": "<string>"
											},
											{
												"description": "Identifies the customer for which this request is initiated.\nShould be set equal to the SSN customer number 11 digits for private customers and the organization number 11 digits with leading zeroes for corporates.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: Organization Number (Foretaksnummer) of the corporate customer\n* Branch bank employee accessing data of a customer: SSN of the user if private customer, Organization Number (Foretaksnummer) if corporate customer\n",
												"key": "X-EVRY-CUSTOMERID",
												"value": "<string>"
											},
											{
												"description": "If the backend soap service is requiring TietoEVRY security object (SO), the field can be set automatic on the TietoEVRY Rest-ESB,\nor the the initiating system can set this field when not integrating through Rest-ESB.\nAn automatic setting of the SO on Rest-ESB is based on an original valid authentication/signing of the request.\n",
												"key": "X-EVRY-SO",
												"value": "<string>"
											},
											{
												"description": "Contains the Security Token used to authenticate the user when logging in to the REST ESB.\nThe REST ESB forwards the Security Token in that header on all requests to the REST Services. In the first version of the REST ESB, the Security Token is an EVRY SO.\nFor clients using IDP, this field is the ID Token (For clients that require SO, a claim within the ID Token contains an SO)",
												"key": "X-EVRY-ESB-SECURITYTOKEN",
												"value": "<string>"
											},
											{
												"description": "Hold the information about user like authentication level ,user Id,organisation ID",
												"key": "X-EVRY-ESB-USERSESSION",
												"value": "<string>"
											},
											{
												"description": "Client ip-address or dns-address from the machine sending the request. Used to separate requests from different physical machines.",
												"key": "X-EVRY-USER-IPADDRESS",
												"value": "<string>"
											},
											{
												"description": "Used to differentiate business logic based on which channel was the origin of the request.\nThe parameter should be set in selfservice use cases, and when a branch officer acts on behalf of the customer.\nValid values are:\n* INT = Online banking from Internet Bank\n* MOB = Online banking from Mobile Bank\n* WAP = Online banking from legacy WAP Mobile Bank\n* SMS = Online banking from SMS Bank\n* TLF = Online banking from Phone Bank\n* ITR = Online banking from office client\n* CEN = Online banking from Charge Engine\n* COR = Online banking from Core\n* BAX = Online banking from Bank Axess\n* BES = Online banking from Corporate Bank\n* OPB = Online banking from Open Banking Parties\n* PSD = Online banking from PSD2 Parties\n* SMW = Online banking from Smart Wealth\n* SPA = Online banking from Saving",
												"key": "X-EVRY-CHANNEL",
												"value": "TLF"
											},
											{
												"description": "Standard HTTP Accept Language. Can be used if textual information from the business systems should deviate from the default language for the organisation.\n",
												"key": "Accept-Language",
												"value": "<string>"
											},
											{
												"description": "Defines the Orgid that the X-EVRY-USERID belongs to.",
												"key": "X-EVRY-USERORGID",
												"value": "<string>"
											},
											{
												"description": "Contains the name of the Client JS Application stored on the user session. The REST ESB forwards the Client JS Application name in that header on all requests to the REST Services",
												"key": "X-EVRY-ESB-CLIENTNAME",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/wbrule/:pk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wbrule",
												":pk"
											],
											"variable": [
												{
													"key": "pk"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "27851672-2abd2773-d26f-4828-a03b-bbeb61eb47cc",
									"name": "Forbidden - In case user not authorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) Identifies the source sending the request. Used to separate different service consumers.\nName should identify customer (bank) and consumer 'application'. The format of the field is 'Organization name'-'Application name'.\n",
												"key": "X-EVRY-CLIENT-CLIENTNAME",
												"value": "<string>"
											},
											{
												"description": "(Required) Unique log reference, generated on the client, and must be unique across multiple sessions and days.",
												"key": "X-EVRY-CLIENT-REQUESTID",
												"value": "<string>"
											},
											{
												"description": "If request origins from a mobile device, this is set to TRUE, else FALSE or not present",
												"key": "X-EVRY-CLIENT-ISMOBILE",
												"value": "<string>"
											},
											{
												"description": "Defines the Signature in the request. Used in accordance with these [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/)\n",
												"key": "Signature",
												"value": "<string>"
											},
											{
												"description": "Defines the Digest in the request. Used in accordance with [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/Digest),\nand is mandatory for all requests containing body.\n",
												"key": "Digest",
												"value": "<string>"
											},
											{
												"description": "Identifies the organization, will in a banking context be the Financial Institution (Konsernnr) registered in the banking infrastructure..",
												"key": "X-EVRY-DATAOWNERORGID",
												"value": "<string>"
											},
											{
												"description": "Identifies the person or system initiating the request.\nNormally this field is set equally to customerid, but should be set to the id of Employee/Agent/Retail/System if request is initiated on behalf of the customerid.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: SSN (Social Security Number) of the user\n* Branch bank employee accessing data of a customer: Logonid of the bank employee\n",
												"key": "X-EVRY-USERID",
												"value": "<string>"
											},
											{
												"description": "Identifies the customer for which this request is initiated.\nShould be set equal to the SSN customer number 11 digits for private customers and the organization number 11 digits with leading zeroes for corporates.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: Organization Number (Foretaksnummer) of the corporate customer\n* Branch bank employee accessing data of a customer: SSN of the user if private customer, Organization Number (Foretaksnummer) if corporate customer\n",
												"key": "X-EVRY-CUSTOMERID",
												"value": "<string>"
											},
											{
												"description": "If the backend soap service is requiring TietoEVRY security object (SO), the field can be set automatic on the TietoEVRY Rest-ESB,\nor the the initiating system can set this field when not integrating through Rest-ESB.\nAn automatic setting of the SO on Rest-ESB is based on an original valid authentication/signing of the request.\n",
												"key": "X-EVRY-SO",
												"value": "<string>"
											},
											{
												"description": "Contains the Security Token used to authenticate the user when logging in to the REST ESB.\nThe REST ESB forwards the Security Token in that header on all requests to the REST Services. In the first version of the REST ESB, the Security Token is an EVRY SO.\nFor clients using IDP, this field is the ID Token (For clients that require SO, a claim within the ID Token contains an SO)",
												"key": "X-EVRY-ESB-SECURITYTOKEN",
												"value": "<string>"
											},
											{
												"description": "Hold the information about user like authentication level ,user Id,organisation ID",
												"key": "X-EVRY-ESB-USERSESSION",
												"value": "<string>"
											},
											{
												"description": "Client ip-address or dns-address from the machine sending the request. Used to separate requests from different physical machines.",
												"key": "X-EVRY-USER-IPADDRESS",
												"value": "<string>"
											},
											{
												"description": "Used to differentiate business logic based on which channel was the origin of the request.\nThe parameter should be set in selfservice use cases, and when a branch officer acts on behalf of the customer.\nValid values are:\n* INT = Online banking from Internet Bank\n* MOB = Online banking from Mobile Bank\n* WAP = Online banking from legacy WAP Mobile Bank\n* SMS = Online banking from SMS Bank\n* TLF = Online banking from Phone Bank\n* ITR = Online banking from office client\n* CEN = Online banking from Charge Engine\n* COR = Online banking from Core\n* BAX = Online banking from Bank Axess\n* BES = Online banking from Corporate Bank\n* OPB = Online banking from Open Banking Parties\n* PSD = Online banking from PSD2 Parties\n* SMW = Online banking from Smart Wealth\n* SPA = Online banking from Saving",
												"key": "X-EVRY-CHANNEL",
												"value": "TLF"
											},
											{
												"description": "Standard HTTP Accept Language. Can be used if textual information from the business systems should deviate from the default language for the organisation.\n",
												"key": "Accept-Language",
												"value": "<string>"
											},
											{
												"description": "Defines the Orgid that the X-EVRY-USERID belongs to.",
												"key": "X-EVRY-USERORGID",
												"value": "<string>"
											},
											{
												"description": "Contains the name of the Client JS Application stored on the user session. The REST ESB forwards the Client JS Application name in that header on all requests to the REST Services",
												"key": "X-EVRY-ESB-CLIENTNAME",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/wbrule/:pk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wbrule",
												":pk"
											],
											"variable": [
												{
													"key": "pk"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "27851672-630d32c8-bf6d-4b2a-8a81-44c525d9be5c",
									"name": "Not found - resource being requested is not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) Identifies the source sending the request. Used to separate different service consumers.\nName should identify customer (bank) and consumer 'application'. The format of the field is 'Organization name'-'Application name'.\n",
												"key": "X-EVRY-CLIENT-CLIENTNAME",
												"value": "<string>"
											},
											{
												"description": "(Required) Unique log reference, generated on the client, and must be unique across multiple sessions and days.",
												"key": "X-EVRY-CLIENT-REQUESTID",
												"value": "<string>"
											},
											{
												"description": "If request origins from a mobile device, this is set to TRUE, else FALSE or not present",
												"key": "X-EVRY-CLIENT-ISMOBILE",
												"value": "<string>"
											},
											{
												"description": "Defines the Signature in the request. Used in accordance with these [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/)\n",
												"key": "Signature",
												"value": "<string>"
											},
											{
												"description": "Defines the Digest in the request. Used in accordance with [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/Digest),\nand is mandatory for all requests containing body.\n",
												"key": "Digest",
												"value": "<string>"
											},
											{
												"description": "Identifies the organization, will in a banking context be the Financial Institution (Konsernnr) registered in the banking infrastructure..",
												"key": "X-EVRY-DATAOWNERORGID",
												"value": "<string>"
											},
											{
												"description": "Identifies the person or system initiating the request.\nNormally this field is set equally to customerid, but should be set to the id of Employee/Agent/Retail/System if request is initiated on behalf of the customerid.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: SSN (Social Security Number) of the user\n* Branch bank employee accessing data of a customer: Logonid of the bank employee\n",
												"key": "X-EVRY-USERID",
												"value": "<string>"
											},
											{
												"description": "Identifies the customer for which this request is initiated.\nShould be set equal to the SSN customer number 11 digits for private customers and the organization number 11 digits with leading zeroes for corporates.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: Organization Number (Foretaksnummer) of the corporate customer\n* Branch bank employee accessing data of a customer: SSN of the user if private customer, Organization Number (Foretaksnummer) if corporate customer\n",
												"key": "X-EVRY-CUSTOMERID",
												"value": "<string>"
											},
											{
												"description": "If the backend soap service is requiring TietoEVRY security object (SO), the field can be set automatic on the TietoEVRY Rest-ESB,\nor the the initiating system can set this field when not integrating through Rest-ESB.\nAn automatic setting of the SO on Rest-ESB is based on an original valid authentication/signing of the request.\n",
												"key": "X-EVRY-SO",
												"value": "<string>"
											},
											{
												"description": "Contains the Security Token used to authenticate the user when logging in to the REST ESB.\nThe REST ESB forwards the Security Token in that header on all requests to the REST Services. In the first version of the REST ESB, the Security Token is an EVRY SO.\nFor clients using IDP, this field is the ID Token (For clients that require SO, a claim within the ID Token contains an SO)",
												"key": "X-EVRY-ESB-SECURITYTOKEN",
												"value": "<string>"
											},
											{
												"description": "Hold the information about user like authentication level ,user Id,organisation ID",
												"key": "X-EVRY-ESB-USERSESSION",
												"value": "<string>"
											},
											{
												"description": "Client ip-address or dns-address from the machine sending the request. Used to separate requests from different physical machines.",
												"key": "X-EVRY-USER-IPADDRESS",
												"value": "<string>"
											},
											{
												"description": "Used to differentiate business logic based on which channel was the origin of the request.\nThe parameter should be set in selfservice use cases, and when a branch officer acts on behalf of the customer.\nValid values are:\n* INT = Online banking from Internet Bank\n* MOB = Online banking from Mobile Bank\n* WAP = Online banking from legacy WAP Mobile Bank\n* SMS = Online banking from SMS Bank\n* TLF = Online banking from Phone Bank\n* ITR = Online banking from office client\n* CEN = Online banking from Charge Engine\n* COR = Online banking from Core\n* BAX = Online banking from Bank Axess\n* BES = Online banking from Corporate Bank\n* OPB = Online banking from Open Banking Parties\n* PSD = Online banking from PSD2 Parties\n* SMW = Online banking from Smart Wealth\n* SPA = Online banking from Saving",
												"key": "X-EVRY-CHANNEL",
												"value": "TLF"
											},
											{
												"description": "Standard HTTP Accept Language. Can be used if textual information from the business systems should deviate from the default language for the organisation.\n",
												"key": "Accept-Language",
												"value": "<string>"
											},
											{
												"description": "Defines the Orgid that the X-EVRY-USERID belongs to.",
												"key": "X-EVRY-USERORGID",
												"value": "<string>"
											},
											{
												"description": "Contains the name of the Client JS Application stored on the user session. The REST ESB forwards the Client JS Application name in that header on all requests to the REST Services",
												"key": "X-EVRY-ESB-CLIENTNAME",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/wbrule/:pk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wbrule",
												":pk"
											],
											"variable": [
												{
													"key": "pk"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"system\": \"<string>\",\n  \"code\": \"<string>\",\n  \"message\": \"<string>\",\n  \"params\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"applicationSpecific\": {\n    \"severity\": \"<string>\",\n    \"logref\": \"<string>\",\n    \"message\": \"<string>\",\n    \"validationErrors\": [\n      {\n        \"errorCode\": \"<string>\",\n        \"errorMessage\": \"<string>\"\n      },\n      {\n        \"errorCode\": \"<string>\",\n        \"errorMessage\": \"<string>\"\n      }\n    ],\n    \"cause\": \"<string>\",\n    \"stackTrace\": \"<string>\"\n  }\n}"
								},
								{
									"id": "27851672-1204b729-b2dd-4316-8d2f-cb2361e260f6",
									"name": "Internal server error - technical error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) Identifies the source sending the request. Used to separate different service consumers.\nName should identify customer (bank) and consumer 'application'. The format of the field is 'Organization name'-'Application name'.\n",
												"key": "X-EVRY-CLIENT-CLIENTNAME",
												"value": "<string>"
											},
											{
												"description": "(Required) Unique log reference, generated on the client, and must be unique across multiple sessions and days.",
												"key": "X-EVRY-CLIENT-REQUESTID",
												"value": "<string>"
											},
											{
												"description": "If request origins from a mobile device, this is set to TRUE, else FALSE or not present",
												"key": "X-EVRY-CLIENT-ISMOBILE",
												"value": "<string>"
											},
											{
												"description": "Defines the Signature in the request. Used in accordance with these [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/)\n",
												"key": "Signature",
												"value": "<string>"
											},
											{
												"description": "Defines the Digest in the request. Used in accordance with [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/Digest),\nand is mandatory for all requests containing body.\n",
												"key": "Digest",
												"value": "<string>"
											},
											{
												"description": "Identifies the organization, will in a banking context be the Financial Institution (Konsernnr) registered in the banking infrastructure..",
												"key": "X-EVRY-DATAOWNERORGID",
												"value": "<string>"
											},
											{
												"description": "Identifies the person or system initiating the request.\nNormally this field is set equally to customerid, but should be set to the id of Employee/Agent/Retail/System if request is initiated on behalf of the customerid.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: SSN (Social Security Number) of the user\n* Branch bank employee accessing data of a customer: Logonid of the bank employee\n",
												"key": "X-EVRY-USERID",
												"value": "<string>"
											},
											{
												"description": "Identifies the customer for which this request is initiated.\nShould be set equal to the SSN customer number 11 digits for private customers and the organization number 11 digits with leading zeroes for corporates.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: Organization Number (Foretaksnummer) of the corporate customer\n* Branch bank employee accessing data of a customer: SSN of the user if private customer, Organization Number (Foretaksnummer) if corporate customer\n",
												"key": "X-EVRY-CUSTOMERID",
												"value": "<string>"
											},
											{
												"description": "If the backend soap service is requiring TietoEVRY security object (SO), the field can be set automatic on the TietoEVRY Rest-ESB,\nor the the initiating system can set this field when not integrating through Rest-ESB.\nAn automatic setting of the SO on Rest-ESB is based on an original valid authentication/signing of the request.\n",
												"key": "X-EVRY-SO",
												"value": "<string>"
											},
											{
												"description": "Contains the Security Token used to authenticate the user when logging in to the REST ESB.\nThe REST ESB forwards the Security Token in that header on all requests to the REST Services. In the first version of the REST ESB, the Security Token is an EVRY SO.\nFor clients using IDP, this field is the ID Token (For clients that require SO, a claim within the ID Token contains an SO)",
												"key": "X-EVRY-ESB-SECURITYTOKEN",
												"value": "<string>"
											},
											{
												"description": "Hold the information about user like authentication level ,user Id,organisation ID",
												"key": "X-EVRY-ESB-USERSESSION",
												"value": "<string>"
											},
											{
												"description": "Client ip-address or dns-address from the machine sending the request. Used to separate requests from different physical machines.",
												"key": "X-EVRY-USER-IPADDRESS",
												"value": "<string>"
											},
											{
												"description": "Used to differentiate business logic based on which channel was the origin of the request.\nThe parameter should be set in selfservice use cases, and when a branch officer acts on behalf of the customer.\nValid values are:\n* INT = Online banking from Internet Bank\n* MOB = Online banking from Mobile Bank\n* WAP = Online banking from legacy WAP Mobile Bank\n* SMS = Online banking from SMS Bank\n* TLF = Online banking from Phone Bank\n* ITR = Online banking from office client\n* CEN = Online banking from Charge Engine\n* COR = Online banking from Core\n* BAX = Online banking from Bank Axess\n* BES = Online banking from Corporate Bank\n* OPB = Online banking from Open Banking Parties\n* PSD = Online banking from PSD2 Parties\n* SMW = Online banking from Smart Wealth\n* SPA = Online banking from Saving",
												"key": "X-EVRY-CHANNEL",
												"value": "TLF"
											},
											{
												"description": "Standard HTTP Accept Language. Can be used if textual information from the business systems should deviate from the default language for the organisation.\n",
												"key": "Accept-Language",
												"value": "<string>"
											},
											{
												"description": "Defines the Orgid that the X-EVRY-USERID belongs to.",
												"key": "X-EVRY-USERORGID",
												"value": "<string>"
											},
											{
												"description": "Contains the name of the Client JS Application stored on the user session. The REST ESB forwards the Client JS Application name in that header on all requests to the REST Services",
												"key": "X-EVRY-ESB-CLIENTNAME",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/wbrule/:pk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wbrule",
												":pk"
											],
											"variable": [
												{
													"key": "pk"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"system\": \"<string>\",\n  \"code\": \"<string>\",\n  \"message\": \"<string>\",\n  \"params\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"applicationSpecific\": {\n    \"severity\": \"<string>\",\n    \"logref\": \"<string>\",\n    \"message\": \"<string>\",\n    \"validationErrors\": [\n      {\n        \"errorCode\": \"<string>\",\n        \"errorMessage\": \"<string>\"\n      },\n      {\n        \"errorCode\": \"<string>\",\n        \"errorMessage\": \"<string>\"\n      }\n    ],\n    \"cause\": \"<string>\",\n    \"stackTrace\": \"<string>\"\n  }\n}"
								},
								{
									"id": "27851672-414da7f5-e014-4c60-b37e-0a850f41d1a8",
									"name": "Read WB Rule with its complete details.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-EVRY-DATAOWNERORGID",
												"value": "4201",
												"type": "text"
											},
											{
												"key": "x-evry-esb-usersession",
												"value": "{\"bankOrgID\": \"4201\",\"userID\": \"e220102\",\"client\": {\"ip\":\"10.10.10.10\"} }",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "x-evry-esb-securitytoken",
												"value": "{\"tokenType\": \"EvrySo\", \"token\": \"03111012010400425kglPboRi3h1Q0wGJvxDnjLEmmmyjbdrfsSaabKNt2t%2BCqK3eX2EphONTCSUcmn1BsSaabKNt2t%2BxJppso23a37EmmmyjbdrfyqVfESZ%2BvdaEdNM4lOx0RzgSxAz1%2B8eEsSaabKNt2t%2FXzlyjxYnxhcG46wcbIKp%2FsSaabKNt2t9wBUG0SyIoqFfig80Gq4uXVBtimDzTiu3EfQIWD5xMfk2jSY2FGfvV26qFHJXpC08%3DRScZIBaF5rVbaSQXdfjW7qpDd%2Fx6Uv7yZLZhCUf3MZQpUdJt1NcsZDOjPzj%2FxNUr4iwU0MZPvSc40rnfiJVGhX6lz1BFMma9XVgKg5SRUqBh2Vd0hQRhPCN3LcKOZ%2B4Q6Kstjdn9Jtnmh7ILkD4X%2BB0RNu8YM7rIAPdQI5SLqyM%3D\"}",
												"type": "text"
											},
											{
												"key": "X-EVRY-ESB-CLIENTNAME",
												"value": "pen",
												"type": "text"
											},
											{
												"key": "X-EVRY-CLIENT-CLIENTNAME",
												"value": "pen",
												"type": "text"
											},
											{
												"key": "X-EVRY-CLIENT-REQUESTID",
												"value": "${=java.util.UUID.randomUUID().toString()}",
												"type": "text"
											},
											{
												"key": "content-language",
												"value": "en",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "eTag",
												"value": "2",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/wbrule/:pk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wbrule",
												":pk"
											],
											"variable": [
												{
													"key": "pk",
													"value": "3124"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "ETag",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Date",
											"value": "Mon, 31 Jul 2023 06:52:53 GMT"
										},
										{
											"key": "X-sorp",
											"value": "e220102;4201;-;pen;http://10.246.89.245:10450/pbdsrv/api/v7;wbrule/-;-;${=java.util.UUID.randomUUID().toString()};-;-;false"
										},
										{
											"key": "Digest",
											"value": "SHA-256=EX6Z68X/S0xMP/UVgZbK+CJJtb2E5SZpAZ3TOhvwQWY="
										},
										{
											"key": "Signature",
											"value": "keyId=\"dc2ccd1e2341ebd5cb34f007d23defe9f0605b7602e0e87a29d32252a4e23fb6\",algorithm=\"ecdsa-sha256\",headers=\"etag x-sorp digest date content-type\",signature=\"MEUCIDPymy3O4/lv2/OcwOdy9sz8lfmLTAfIW2rZDpxm/qZhAiEA6jyqZV0GATjOeV3XydKurKWkKB5uuyJ3APJJP2TdU+M=\""
										},
										{
											"key": "Content-Length",
											"value": "983"
										},
										{
											"key": "Server",
											"value": "Jetty(9.4.44.v20210927)"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"pk\": 3124,\n    \"version\": 0,\n    \"wbRuleId\": 3124,\n    \"changeId\": 1213951,\n    \"isNewCreditorAccount\": true,\n    \"bicAndNationalIdValidate\": true,\n    \"instructedCurrency\": true,\n    \"wbRuleIdentification\": {\n        \"code\": \"BLOCKING\",\n        \"showForEndUser\": true,\n        \"status\": \"AWAITING_VERIFICATION\",\n        \"currencyCode\": \"EUR\",\n        \"countryUnionCode\": \"US\",\n        \"internalDescription\": \"Eb~U4BQ-qu%uZ4kp=7ODpITUbQE<8>L/:,8\",\n        \"direction\": \"OUTWARD\",\n        \"intermediaryBankPresent\": true\n    },\n    \"wbRuleType\": {\n        \"itemType\": \"BANK\",\n        \"itemValue\": \"SNOMSG\"\n    },\n    \"businessArea\": \"PAYMENTS\",\n    \"bicIndicator\": \"6\",\n    \"startDate\": \"2023-06-13\",\n    \"sanction\": false,\n    \"minimumAmount\": 1,\n    \"validForMarket\": \"PM\",\n    \"chargeBearer\": \"CRED\",\n    \"paymentPriority\": \"NORMAL\",\n    \"externalDescription\": [\n        {\n            \"language\": \"nb\",\n            \"description\": \"d:bzf9`7@\\\"G]n7K$\\\\_2<{?hV]6Qof;FZ`-;~_zBK%`Npo-`_ow4q\\\"}Qm+3 Z$XTE'bwk&|B0rv,\\\\H4Ij}]KrTP:NJQ VvNtg}y!aw$^G;!\"\n        }\n    ],\n    \"name\": \"hd,}2g:`\\\"&pi1Y+FK\\\"J/Tn55z%j'a7Q<jmwB96RerT1qSnz>}~l7@|8:NdxR\\\\<Y?b!h{.Rg*+DOpR:ka)6OH\",\n    \"freeText\": \"t/^p?;6G'mr&BghlA\\\\WzeWX=`^*D`Zt{M'Lg9'+e,:v]IwMZ&J-2R!#q'OEJ!OGxaYzJR7- \"\n}"
								}
							]
						},
						{
							"name": "Close/Delete WB Rule.",
							"id": "27851672-a01ff746-270e-4aa2-871f-a7af7dde063d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-EVRY-DATAOWNERORGID",
										"value": "4201",
										"type": "text"
									},
									{
										"key": "x-evry-esb-usersession",
										"value": "{\"bankOrgID\": \"4201\",\"userID\": \"e220102\",\"client\": {\"ip\":\"10.10.10.10\"} }",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-evry-esb-securitytoken",
										"value": "{\"tokenType\": \"EvrySo\", \"token\": \"03111012010400425kglPboRi3h1Q0wGJvxDnjLEmmmyjbdrfsSaabKNt2t%2BCqK3eX2EphONTCSUcmn1BsSaabKNt2t%2BxJppso23a37EmmmyjbdrfyqVfESZ%2BvdaEdNM4lOx0RzgSxAz1%2B8eEsSaabKNt2t%2FXzlyjxYnxhcG46wcbIKp%2FsSaabKNt2t9wBUG0SyIoqFfig80Gq4uXVBtimDzTiu3EfQIWD5xMfk2jSY2FGfvV26qFHJXpC08%3DRScZIBaF5rVbaSQXdfjW7qpDd%2Fx6Uv7yZLZhCUf3MZQpUdJt1NcsZDOjPzj%2FxNUr4iwU0MZPvSc40rnfiJVGhX6lz1BFMma9XVgKg5SRUqBh2Vd0hQRhPCN3LcKOZ%2B4Q6Kstjdn9Jtnmh7ILkD4X%2BB0RNu8YM7rIAPdQI5SLqyM%3D\"}",
										"type": "text"
									},
									{
										"key": "X-EVRY-ESB-CLIENTNAME",
										"value": "pen",
										"type": "text"
									},
									{
										"key": "X-EVRY-CLIENT-CLIENTNAME",
										"value": "pen",
										"type": "text"
									},
									{
										"key": "X-EVRY-CLIENT-REQUESTID",
										"value": "${=java.util.UUID.randomUUID().toString()}",
										"type": "text"
									},
									{
										"key": "content-language",
										"value": "en",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "eTag",
										"value": "3",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/wbrule/:pk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"wbrule",
										":pk"
									],
									"variable": [
										{
											"key": "pk",
											"value": "3137"
										}
									]
								},
								"description": "Endpoint to close/delete a WB Rule using the given `pk`.<br>\nThis operation is access restricted."
							},
							"response": [
								{
									"id": "27851672-f80ae580-24e3-47d7-aa16-1738e319df97",
									"name": "DELETED - successfully deleted the WB Rule",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "An entity-tag is an opaque validator for differentiating between multiple representations of the same resource,\nregardless of whether those multiple representations are due to resource state changes over time,\ncontent negotiation resulting in multiple representations being valid at the same time, or both.",
												"key": "ETag",
												"value": "<string>"
											},
											{
												"description": "(Required) Identifies the source sending the request. Used to separate different service consumers.\nName should identify customer (bank) and consumer 'application'. The format of the field is 'Organization name'-'Application name'.\n",
												"key": "X-EVRY-CLIENT-CLIENTNAME",
												"value": "<string>"
											},
											{
												"description": "(Required) Unique log reference, generated on the client, and must be unique across multiple sessions and days.",
												"key": "X-EVRY-CLIENT-REQUESTID",
												"value": "<string>"
											},
											{
												"description": "If request origins from a mobile device, this is set to TRUE, else FALSE or not present",
												"key": "X-EVRY-CLIENT-ISMOBILE",
												"value": "<string>"
											},
											{
												"description": "Defines the Signature in the request. Used in accordance with these [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/)\n",
												"key": "Signature",
												"value": "<string>"
											},
											{
												"description": "Defines the Digest in the request. Used in accordance with [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/Digest),\nand is mandatory for all requests containing body.\n",
												"key": "Digest",
												"value": "<string>"
											},
											{
												"description": "Identifies the organization, will in a banking context be the Financial Institution (Konsernnr) registered in the banking infrastructure..",
												"key": "X-EVRY-DATAOWNERORGID",
												"value": "<string>"
											},
											{
												"description": "Identifies the person or system initiating the request.\nNormally this field is set equally to customerid, but should be set to the id of Employee/Agent/Retail/System if request is initiated on behalf of the customerid.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: SSN (Social Security Number) of the user\n* Branch bank employee accessing data of a customer: Logonid of the bank employee\n",
												"key": "X-EVRY-USERID",
												"value": "<string>"
											},
											{
												"description": "Identifies the customer for which this request is initiated.\nShould be set equal to the SSN customer number 11 digits for private customers and the organization number 11 digits with leading zeroes for corporates.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: Organization Number (Foretaksnummer) of the corporate customer\n* Branch bank employee accessing data of a customer: SSN of the user if private customer, Organization Number (Foretaksnummer) if corporate customer\n",
												"key": "X-EVRY-CUSTOMERID",
												"value": "<string>"
											},
											{
												"description": "If the backend soap service is requiring TietoEVRY security object (SO), the field can be set automatic on the TietoEVRY Rest-ESB,\nor the the initiating system can set this field when not integrating through Rest-ESB.\nAn automatic setting of the SO on Rest-ESB is based on an original valid authentication/signing of the request.\n",
												"key": "X-EVRY-SO",
												"value": "<string>"
											},
											{
												"description": "Contains the Security Token used to authenticate the user when logging in to the REST ESB.\nThe REST ESB forwards the Security Token in that header on all requests to the REST Services. In the first version of the REST ESB, the Security Token is an EVRY SO.\nFor clients using IDP, this field is the ID Token (For clients that require SO, a claim within the ID Token contains an SO)",
												"key": "X-EVRY-ESB-SECURITYTOKEN",
												"value": "<string>"
											},
											{
												"description": "Hold the information about user like authentication level ,user Id,organisation ID",
												"key": "X-EVRY-ESB-USERSESSION",
												"value": "<string>"
											},
											{
												"description": "Client ip-address or dns-address from the machine sending the request. Used to separate requests from different physical machines.",
												"key": "X-EVRY-USER-IPADDRESS",
												"value": "<string>"
											},
											{
												"description": "Used to differentiate business logic based on which channel was the origin of the request.\nThe parameter should be set in selfservice use cases, and when a branch officer acts on behalf of the customer.\nValid values are:\n* INT = Online banking from Internet Bank\n* MOB = Online banking from Mobile Bank\n* WAP = Online banking from legacy WAP Mobile Bank\n* SMS = Online banking from SMS Bank\n* TLF = Online banking from Phone Bank\n* ITR = Online banking from office client\n* CEN = Online banking from Charge Engine\n* COR = Online banking from Core\n* BAX = Online banking from Bank Axess\n* BES = Online banking from Corporate Bank\n* OPB = Online banking from Open Banking Parties\n* PSD = Online banking from PSD2 Parties\n* SMW = Online banking from Smart Wealth\n* SPA = Online banking from Saving",
												"key": "X-EVRY-CHANNEL",
												"value": "TLF"
											},
											{
												"description": "Standard HTTP Accept Language. Can be used if textual information from the business systems should deviate from the default language for the organisation.\n",
												"key": "Accept-Language",
												"value": "<string>"
											},
											{
												"description": "Defines the Orgid that the X-EVRY-USERID belongs to.",
												"key": "X-EVRY-USERORGID",
												"value": "<string>"
											},
											{
												"description": "Contains the name of the Client JS Application stored on the user session. The REST ESB forwards the Client JS Application name in that header on all requests to the REST Services",
												"key": "X-EVRY-ESB-CLIENTNAME",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/wbrule/:pk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wbrule",
												":pk"
											],
											"variable": [
												{
													"key": "pk"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "27851672-360c660a-1a67-44fd-a0ad-67fdd0b3a79a",
									"name": "Bad Request - If missing or badly formed parameters",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "An entity-tag is an opaque validator for differentiating between multiple representations of the same resource,\nregardless of whether those multiple representations are due to resource state changes over time,\ncontent negotiation resulting in multiple representations being valid at the same time, or both.",
												"key": "ETag",
												"value": "<string>"
											},
											{
												"description": "(Required) Identifies the source sending the request. Used to separate different service consumers.\nName should identify customer (bank) and consumer 'application'. The format of the field is 'Organization name'-'Application name'.\n",
												"key": "X-EVRY-CLIENT-CLIENTNAME",
												"value": "<string>"
											},
											{
												"description": "(Required) Unique log reference, generated on the client, and must be unique across multiple sessions and days.",
												"key": "X-EVRY-CLIENT-REQUESTID",
												"value": "<string>"
											},
											{
												"description": "If request origins from a mobile device, this is set to TRUE, else FALSE or not present",
												"key": "X-EVRY-CLIENT-ISMOBILE",
												"value": "<string>"
											},
											{
												"description": "Defines the Signature in the request. Used in accordance with these [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/)\n",
												"key": "Signature",
												"value": "<string>"
											},
											{
												"description": "Defines the Digest in the request. Used in accordance with [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/Digest),\nand is mandatory for all requests containing body.\n",
												"key": "Digest",
												"value": "<string>"
											},
											{
												"description": "Identifies the organization, will in a banking context be the Financial Institution (Konsernnr) registered in the banking infrastructure..",
												"key": "X-EVRY-DATAOWNERORGID",
												"value": "<string>"
											},
											{
												"description": "Identifies the person or system initiating the request.\nNormally this field is set equally to customerid, but should be set to the id of Employee/Agent/Retail/System if request is initiated on behalf of the customerid.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: SSN (Social Security Number) of the user\n* Branch bank employee accessing data of a customer: Logonid of the bank employee\n",
												"key": "X-EVRY-USERID",
												"value": "<string>"
											},
											{
												"description": "Identifies the customer for which this request is initiated.\nShould be set equal to the SSN customer number 11 digits for private customers and the organization number 11 digits with leading zeroes for corporates.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: Organization Number (Foretaksnummer) of the corporate customer\n* Branch bank employee accessing data of a customer: SSN of the user if private customer, Organization Number (Foretaksnummer) if corporate customer\n",
												"key": "X-EVRY-CUSTOMERID",
												"value": "<string>"
											},
											{
												"description": "If the backend soap service is requiring TietoEVRY security object (SO), the field can be set automatic on the TietoEVRY Rest-ESB,\nor the the initiating system can set this field when not integrating through Rest-ESB.\nAn automatic setting of the SO on Rest-ESB is based on an original valid authentication/signing of the request.\n",
												"key": "X-EVRY-SO",
												"value": "<string>"
											},
											{
												"description": "Contains the Security Token used to authenticate the user when logging in to the REST ESB.\nThe REST ESB forwards the Security Token in that header on all requests to the REST Services. In the first version of the REST ESB, the Security Token is an EVRY SO.\nFor clients using IDP, this field is the ID Token (For clients that require SO, a claim within the ID Token contains an SO)",
												"key": "X-EVRY-ESB-SECURITYTOKEN",
												"value": "<string>"
											},
											{
												"description": "Hold the information about user like authentication level ,user Id,organisation ID",
												"key": "X-EVRY-ESB-USERSESSION",
												"value": "<string>"
											},
											{
												"description": "Client ip-address or dns-address from the machine sending the request. Used to separate requests from different physical machines.",
												"key": "X-EVRY-USER-IPADDRESS",
												"value": "<string>"
											},
											{
												"description": "Used to differentiate business logic based on which channel was the origin of the request.\nThe parameter should be set in selfservice use cases, and when a branch officer acts on behalf of the customer.\nValid values are:\n* INT = Online banking from Internet Bank\n* MOB = Online banking from Mobile Bank\n* WAP = Online banking from legacy WAP Mobile Bank\n* SMS = Online banking from SMS Bank\n* TLF = Online banking from Phone Bank\n* ITR = Online banking from office client\n* CEN = Online banking from Charge Engine\n* COR = Online banking from Core\n* BAX = Online banking from Bank Axess\n* BES = Online banking from Corporate Bank\n* OPB = Online banking from Open Banking Parties\n* PSD = Online banking from PSD2 Parties\n* SMW = Online banking from Smart Wealth\n* SPA = Online banking from Saving",
												"key": "X-EVRY-CHANNEL",
												"value": "TLF"
											},
											{
												"description": "Standard HTTP Accept Language. Can be used if textual information from the business systems should deviate from the default language for the organisation.\n",
												"key": "Accept-Language",
												"value": "<string>"
											},
											{
												"description": "Defines the Orgid that the X-EVRY-USERID belongs to.",
												"key": "X-EVRY-USERORGID",
												"value": "<string>"
											},
											{
												"description": "Contains the name of the Client JS Application stored on the user session. The REST ESB forwards the Client JS Application name in that header on all requests to the REST Services",
												"key": "X-EVRY-ESB-CLIENTNAME",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/wbrule/:pk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wbrule",
												":pk"
											],
											"variable": [
												{
													"key": "pk"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"system\": \"<string>\",\n  \"code\": \"<string>\",\n  \"message\": \"<string>\",\n  \"params\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"applicationSpecific\": {\n    \"severity\": \"<string>\",\n    \"logref\": \"<string>\",\n    \"message\": \"<string>\",\n    \"validationErrors\": [\n      {\n        \"errorCode\": \"<string>\",\n        \"errorMessage\": \"<string>\"\n      },\n      {\n        \"errorCode\": \"<string>\",\n        \"errorMessage\": \"<string>\"\n      }\n    ],\n    \"cause\": \"<string>\",\n    \"stackTrace\": \"<string>\"\n  }\n}"
								},
								{
									"id": "27851672-882da438-c379-47a1-b149-13aac3762cde",
									"name": "Unauthorized - In case user not authenticated",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "An entity-tag is an opaque validator for differentiating between multiple representations of the same resource,\nregardless of whether those multiple representations are due to resource state changes over time,\ncontent negotiation resulting in multiple representations being valid at the same time, or both.",
												"key": "ETag",
												"value": "<string>"
											},
											{
												"description": "(Required) Identifies the source sending the request. Used to separate different service consumers.\nName should identify customer (bank) and consumer 'application'. The format of the field is 'Organization name'-'Application name'.\n",
												"key": "X-EVRY-CLIENT-CLIENTNAME",
												"value": "<string>"
											},
											{
												"description": "(Required) Unique log reference, generated on the client, and must be unique across multiple sessions and days.",
												"key": "X-EVRY-CLIENT-REQUESTID",
												"value": "<string>"
											},
											{
												"description": "If request origins from a mobile device, this is set to TRUE, else FALSE or not present",
												"key": "X-EVRY-CLIENT-ISMOBILE",
												"value": "<string>"
											},
											{
												"description": "Defines the Signature in the request. Used in accordance with these [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/)\n",
												"key": "Signature",
												"value": "<string>"
											},
											{
												"description": "Defines the Digest in the request. Used in accordance with [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/Digest),\nand is mandatory for all requests containing body.\n",
												"key": "Digest",
												"value": "<string>"
											},
											{
												"description": "Identifies the organization, will in a banking context be the Financial Institution (Konsernnr) registered in the banking infrastructure..",
												"key": "X-EVRY-DATAOWNERORGID",
												"value": "<string>"
											},
											{
												"description": "Identifies the person or system initiating the request.\nNormally this field is set equally to customerid, but should be set to the id of Employee/Agent/Retail/System if request is initiated on behalf of the customerid.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: SSN (Social Security Number) of the user\n* Branch bank employee accessing data of a customer: Logonid of the bank employee\n",
												"key": "X-EVRY-USERID",
												"value": "<string>"
											},
											{
												"description": "Identifies the customer for which this request is initiated.\nShould be set equal to the SSN customer number 11 digits for private customers and the organization number 11 digits with leading zeroes for corporates.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: Organization Number (Foretaksnummer) of the corporate customer\n* Branch bank employee accessing data of a customer: SSN of the user if private customer, Organization Number (Foretaksnummer) if corporate customer\n",
												"key": "X-EVRY-CUSTOMERID",
												"value": "<string>"
											},
											{
												"description": "If the backend soap service is requiring TietoEVRY security object (SO), the field can be set automatic on the TietoEVRY Rest-ESB,\nor the the initiating system can set this field when not integrating through Rest-ESB.\nAn automatic setting of the SO on Rest-ESB is based on an original valid authentication/signing of the request.\n",
												"key": "X-EVRY-SO",
												"value": "<string>"
											},
											{
												"description": "Contains the Security Token used to authenticate the user when logging in to the REST ESB.\nThe REST ESB forwards the Security Token in that header on all requests to the REST Services. In the first version of the REST ESB, the Security Token is an EVRY SO.\nFor clients using IDP, this field is the ID Token (For clients that require SO, a claim within the ID Token contains an SO)",
												"key": "X-EVRY-ESB-SECURITYTOKEN",
												"value": "<string>"
											},
											{
												"description": "Hold the information about user like authentication level ,user Id,organisation ID",
												"key": "X-EVRY-ESB-USERSESSION",
												"value": "<string>"
											},
											{
												"description": "Client ip-address or dns-address from the machine sending the request. Used to separate requests from different physical machines.",
												"key": "X-EVRY-USER-IPADDRESS",
												"value": "<string>"
											},
											{
												"description": "Used to differentiate business logic based on which channel was the origin of the request.\nThe parameter should be set in selfservice use cases, and when a branch officer acts on behalf of the customer.\nValid values are:\n* INT = Online banking from Internet Bank\n* MOB = Online banking from Mobile Bank\n* WAP = Online banking from legacy WAP Mobile Bank\n* SMS = Online banking from SMS Bank\n* TLF = Online banking from Phone Bank\n* ITR = Online banking from office client\n* CEN = Online banking from Charge Engine\n* COR = Online banking from Core\n* BAX = Online banking from Bank Axess\n* BES = Online banking from Corporate Bank\n* OPB = Online banking from Open Banking Parties\n* PSD = Online banking from PSD2 Parties\n* SMW = Online banking from Smart Wealth\n* SPA = Online banking from Saving",
												"key": "X-EVRY-CHANNEL",
												"value": "TLF"
											},
											{
												"description": "Standard HTTP Accept Language. Can be used if textual information from the business systems should deviate from the default language for the organisation.\n",
												"key": "Accept-Language",
												"value": "<string>"
											},
											{
												"description": "Defines the Orgid that the X-EVRY-USERID belongs to.",
												"key": "X-EVRY-USERORGID",
												"value": "<string>"
											},
											{
												"description": "Contains the name of the Client JS Application stored on the user session. The REST ESB forwards the Client JS Application name in that header on all requests to the REST Services",
												"key": "X-EVRY-ESB-CLIENTNAME",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/wbrule/:pk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wbrule",
												":pk"
											],
											"variable": [
												{
													"key": "pk"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "27851672-b5979ff6-ed63-480d-8d36-cbb4afbcbc00",
									"name": "Forbidden - In case user not authorized",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "An entity-tag is an opaque validator for differentiating between multiple representations of the same resource,\nregardless of whether those multiple representations are due to resource state changes over time,\ncontent negotiation resulting in multiple representations being valid at the same time, or both.",
												"key": "ETag",
												"value": "<string>"
											},
											{
												"description": "(Required) Identifies the source sending the request. Used to separate different service consumers.\nName should identify customer (bank) and consumer 'application'. The format of the field is 'Organization name'-'Application name'.\n",
												"key": "X-EVRY-CLIENT-CLIENTNAME",
												"value": "<string>"
											},
											{
												"description": "(Required) Unique log reference, generated on the client, and must be unique across multiple sessions and days.",
												"key": "X-EVRY-CLIENT-REQUESTID",
												"value": "<string>"
											},
											{
												"description": "If request origins from a mobile device, this is set to TRUE, else FALSE or not present",
												"key": "X-EVRY-CLIENT-ISMOBILE",
												"value": "<string>"
											},
											{
												"description": "Defines the Signature in the request. Used in accordance with these [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/)\n",
												"key": "Signature",
												"value": "<string>"
											},
											{
												"description": "Defines the Digest in the request. Used in accordance with [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/Digest),\nand is mandatory for all requests containing body.\n",
												"key": "Digest",
												"value": "<string>"
											},
											{
												"description": "Identifies the organization, will in a banking context be the Financial Institution (Konsernnr) registered in the banking infrastructure..",
												"key": "X-EVRY-DATAOWNERORGID",
												"value": "<string>"
											},
											{
												"description": "Identifies the person or system initiating the request.\nNormally this field is set equally to customerid, but should be set to the id of Employee/Agent/Retail/System if request is initiated on behalf of the customerid.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: SSN (Social Security Number) of the user\n* Branch bank employee accessing data of a customer: Logonid of the bank employee\n",
												"key": "X-EVRY-USERID",
												"value": "<string>"
											},
											{
												"description": "Identifies the customer for which this request is initiated.\nShould be set equal to the SSN customer number 11 digits for private customers and the organization number 11 digits with leading zeroes for corporates.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: Organization Number (Foretaksnummer) of the corporate customer\n* Branch bank employee accessing data of a customer: SSN of the user if private customer, Organization Number (Foretaksnummer) if corporate customer\n",
												"key": "X-EVRY-CUSTOMERID",
												"value": "<string>"
											},
											{
												"description": "If the backend soap service is requiring TietoEVRY security object (SO), the field can be set automatic on the TietoEVRY Rest-ESB,\nor the the initiating system can set this field when not integrating through Rest-ESB.\nAn automatic setting of the SO on Rest-ESB is based on an original valid authentication/signing of the request.\n",
												"key": "X-EVRY-SO",
												"value": "<string>"
											},
											{
												"description": "Contains the Security Token used to authenticate the user when logging in to the REST ESB.\nThe REST ESB forwards the Security Token in that header on all requests to the REST Services. In the first version of the REST ESB, the Security Token is an EVRY SO.\nFor clients using IDP, this field is the ID Token (For clients that require SO, a claim within the ID Token contains an SO)",
												"key": "X-EVRY-ESB-SECURITYTOKEN",
												"value": "<string>"
											},
											{
												"description": "Hold the information about user like authentication level ,user Id,organisation ID",
												"key": "X-EVRY-ESB-USERSESSION",
												"value": "<string>"
											},
											{
												"description": "Client ip-address or dns-address from the machine sending the request. Used to separate requests from different physical machines.",
												"key": "X-EVRY-USER-IPADDRESS",
												"value": "<string>"
											},
											{
												"description": "Used to differentiate business logic based on which channel was the origin of the request.\nThe parameter should be set in selfservice use cases, and when a branch officer acts on behalf of the customer.\nValid values are:\n* INT = Online banking from Internet Bank\n* MOB = Online banking from Mobile Bank\n* WAP = Online banking from legacy WAP Mobile Bank\n* SMS = Online banking from SMS Bank\n* TLF = Online banking from Phone Bank\n* ITR = Online banking from office client\n* CEN = Online banking from Charge Engine\n* COR = Online banking from Core\n* BAX = Online banking from Bank Axess\n* BES = Online banking from Corporate Bank\n* OPB = Online banking from Open Banking Parties\n* PSD = Online banking from PSD2 Parties\n* SMW = Online banking from Smart Wealth\n* SPA = Online banking from Saving",
												"key": "X-EVRY-CHANNEL",
												"value": "TLF"
											},
											{
												"description": "Standard HTTP Accept Language. Can be used if textual information from the business systems should deviate from the default language for the organisation.\n",
												"key": "Accept-Language",
												"value": "<string>"
											},
											{
												"description": "Defines the Orgid that the X-EVRY-USERID belongs to.",
												"key": "X-EVRY-USERORGID",
												"value": "<string>"
											},
											{
												"description": "Contains the name of the Client JS Application stored on the user session. The REST ESB forwards the Client JS Application name in that header on all requests to the REST Services",
												"key": "X-EVRY-ESB-CLIENTNAME",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/wbrule/:pk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wbrule",
												":pk"
											],
											"variable": [
												{
													"key": "pk"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "27851672-a62fc775-1237-4707-aeda-4ac5ba500384",
									"name": "Not found - resource being deleted is not found.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "An entity-tag is an opaque validator for differentiating between multiple representations of the same resource,\nregardless of whether those multiple representations are due to resource state changes over time,\ncontent negotiation resulting in multiple representations being valid at the same time, or both.",
												"key": "ETag",
												"value": "<string>"
											},
											{
												"description": "(Required) Identifies the source sending the request. Used to separate different service consumers.\nName should identify customer (bank) and consumer 'application'. The format of the field is 'Organization name'-'Application name'.\n",
												"key": "X-EVRY-CLIENT-CLIENTNAME",
												"value": "<string>"
											},
											{
												"description": "(Required) Unique log reference, generated on the client, and must be unique across multiple sessions and days.",
												"key": "X-EVRY-CLIENT-REQUESTID",
												"value": "<string>"
											},
											{
												"description": "If request origins from a mobile device, this is set to TRUE, else FALSE or not present",
												"key": "X-EVRY-CLIENT-ISMOBILE",
												"value": "<string>"
											},
											{
												"description": "Defines the Signature in the request. Used in accordance with these [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/)\n",
												"key": "Signature",
												"value": "<string>"
											},
											{
												"description": "Defines the Digest in the request. Used in accordance with [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/Digest),\nand is mandatory for all requests containing body.\n",
												"key": "Digest",
												"value": "<string>"
											},
											{
												"description": "Identifies the organization, will in a banking context be the Financial Institution (Konsernnr) registered in the banking infrastructure..",
												"key": "X-EVRY-DATAOWNERORGID",
												"value": "<string>"
											},
											{
												"description": "Identifies the person or system initiating the request.\nNormally this field is set equally to customerid, but should be set to the id of Employee/Agent/Retail/System if request is initiated on behalf of the customerid.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: SSN (Social Security Number) of the user\n* Branch bank employee accessing data of a customer: Logonid of the bank employee\n",
												"key": "X-EVRY-USERID",
												"value": "<string>"
											},
											{
												"description": "Identifies the customer for which this request is initiated.\nShould be set equal to the SSN customer number 11 digits for private customers and the organization number 11 digits with leading zeroes for corporates.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: Organization Number (Foretaksnummer) of the corporate customer\n* Branch bank employee accessing data of a customer: SSN of the user if private customer, Organization Number (Foretaksnummer) if corporate customer\n",
												"key": "X-EVRY-CUSTOMERID",
												"value": "<string>"
											},
											{
												"description": "If the backend soap service is requiring TietoEVRY security object (SO), the field can be set automatic on the TietoEVRY Rest-ESB,\nor the the initiating system can set this field when not integrating through Rest-ESB.\nAn automatic setting of the SO on Rest-ESB is based on an original valid authentication/signing of the request.\n",
												"key": "X-EVRY-SO",
												"value": "<string>"
											},
											{
												"description": "Contains the Security Token used to authenticate the user when logging in to the REST ESB.\nThe REST ESB forwards the Security Token in that header on all requests to the REST Services. In the first version of the REST ESB, the Security Token is an EVRY SO.\nFor clients using IDP, this field is the ID Token (For clients that require SO, a claim within the ID Token contains an SO)",
												"key": "X-EVRY-ESB-SECURITYTOKEN",
												"value": "<string>"
											},
											{
												"description": "Hold the information about user like authentication level ,user Id,organisation ID",
												"key": "X-EVRY-ESB-USERSESSION",
												"value": "<string>"
											},
											{
												"description": "Client ip-address or dns-address from the machine sending the request. Used to separate requests from different physical machines.",
												"key": "X-EVRY-USER-IPADDRESS",
												"value": "<string>"
											},
											{
												"description": "Used to differentiate business logic based on which channel was the origin of the request.\nThe parameter should be set in selfservice use cases, and when a branch officer acts on behalf of the customer.\nValid values are:\n* INT = Online banking from Internet Bank\n* MOB = Online banking from Mobile Bank\n* WAP = Online banking from legacy WAP Mobile Bank\n* SMS = Online banking from SMS Bank\n* TLF = Online banking from Phone Bank\n* ITR = Online banking from office client\n* CEN = Online banking from Charge Engine\n* COR = Online banking from Core\n* BAX = Online banking from Bank Axess\n* BES = Online banking from Corporate Bank\n* OPB = Online banking from Open Banking Parties\n* PSD = Online banking from PSD2 Parties\n* SMW = Online banking from Smart Wealth\n* SPA = Online banking from Saving",
												"key": "X-EVRY-CHANNEL",
												"value": "TLF"
											},
											{
												"description": "Standard HTTP Accept Language. Can be used if textual information from the business systems should deviate from the default language for the organisation.\n",
												"key": "Accept-Language",
												"value": "<string>"
											},
											{
												"description": "Defines the Orgid that the X-EVRY-USERID belongs to.",
												"key": "X-EVRY-USERORGID",
												"value": "<string>"
											},
											{
												"description": "Contains the name of the Client JS Application stored on the user session. The REST ESB forwards the Client JS Application name in that header on all requests to the REST Services",
												"key": "X-EVRY-ESB-CLIENTNAME",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/wbrule/:pk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wbrule",
												":pk"
											],
											"variable": [
												{
													"key": "pk"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"system\": \"<string>\",\n  \"code\": \"<string>\",\n  \"message\": \"<string>\",\n  \"params\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"applicationSpecific\": {\n    \"severity\": \"<string>\",\n    \"logref\": \"<string>\",\n    \"message\": \"<string>\",\n    \"validationErrors\": [\n      {\n        \"errorCode\": \"<string>\",\n        \"errorMessage\": \"<string>\"\n      },\n      {\n        \"errorCode\": \"<string>\",\n        \"errorMessage\": \"<string>\"\n      }\n    ],\n    \"cause\": \"<string>\",\n    \"stackTrace\": \"<string>\"\n  }\n}"
								},
								{
									"id": "27851672-8472fd1a-b2f1-4bed-804e-7ea7459eb8c5",
									"name": "Internal server error - technical error",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "An entity-tag is an opaque validator for differentiating between multiple representations of the same resource,\nregardless of whether those multiple representations are due to resource state changes over time,\ncontent negotiation resulting in multiple representations being valid at the same time, or both.",
												"key": "ETag",
												"value": "<string>"
											},
											{
												"description": "(Required) Identifies the source sending the request. Used to separate different service consumers.\nName should identify customer (bank) and consumer 'application'. The format of the field is 'Organization name'-'Application name'.\n",
												"key": "X-EVRY-CLIENT-CLIENTNAME",
												"value": "<string>"
											},
											{
												"description": "(Required) Unique log reference, generated on the client, and must be unique across multiple sessions and days.",
												"key": "X-EVRY-CLIENT-REQUESTID",
												"value": "<string>"
											},
											{
												"description": "If request origins from a mobile device, this is set to TRUE, else FALSE or not present",
												"key": "X-EVRY-CLIENT-ISMOBILE",
												"value": "<string>"
											},
											{
												"description": "Defines the Signature in the request. Used in accordance with these [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/)\n",
												"key": "Signature",
												"value": "<string>"
											},
											{
												"description": "Defines the Digest in the request. Used in accordance with [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/Digest),\nand is mandatory for all requests containing body.\n",
												"key": "Digest",
												"value": "<string>"
											},
											{
												"description": "Identifies the organization, will in a banking context be the Financial Institution (Konsernnr) registered in the banking infrastructure..",
												"key": "X-EVRY-DATAOWNERORGID",
												"value": "<string>"
											},
											{
												"description": "Identifies the person or system initiating the request.\nNormally this field is set equally to customerid, but should be set to the id of Employee/Agent/Retail/System if request is initiated on behalf of the customerid.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: SSN (Social Security Number) of the user\n* Branch bank employee accessing data of a customer: Logonid of the bank employee\n",
												"key": "X-EVRY-USERID",
												"value": "<string>"
											},
											{
												"description": "Identifies the customer for which this request is initiated.\nShould be set equal to the SSN customer number 11 digits for private customers and the organization number 11 digits with leading zeroes for corporates.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: Organization Number (Foretaksnummer) of the corporate customer\n* Branch bank employee accessing data of a customer: SSN of the user if private customer, Organization Number (Foretaksnummer) if corporate customer\n",
												"key": "X-EVRY-CUSTOMERID",
												"value": "<string>"
											},
											{
												"description": "If the backend soap service is requiring TietoEVRY security object (SO), the field can be set automatic on the TietoEVRY Rest-ESB,\nor the the initiating system can set this field when not integrating through Rest-ESB.\nAn automatic setting of the SO on Rest-ESB is based on an original valid authentication/signing of the request.\n",
												"key": "X-EVRY-SO",
												"value": "<string>"
											},
											{
												"description": "Contains the Security Token used to authenticate the user when logging in to the REST ESB.\nThe REST ESB forwards the Security Token in that header on all requests to the REST Services. In the first version of the REST ESB, the Security Token is an EVRY SO.\nFor clients using IDP, this field is the ID Token (For clients that require SO, a claim within the ID Token contains an SO)",
												"key": "X-EVRY-ESB-SECURITYTOKEN",
												"value": "<string>"
											},
											{
												"description": "Hold the information about user like authentication level ,user Id,organisation ID",
												"key": "X-EVRY-ESB-USERSESSION",
												"value": "<string>"
											},
											{
												"description": "Client ip-address or dns-address from the machine sending the request. Used to separate requests from different physical machines.",
												"key": "X-EVRY-USER-IPADDRESS",
												"value": "<string>"
											},
											{
												"description": "Used to differentiate business logic based on which channel was the origin of the request.\nThe parameter should be set in selfservice use cases, and when a branch officer acts on behalf of the customer.\nValid values are:\n* INT = Online banking from Internet Bank\n* MOB = Online banking from Mobile Bank\n* WAP = Online banking from legacy WAP Mobile Bank\n* SMS = Online banking from SMS Bank\n* TLF = Online banking from Phone Bank\n* ITR = Online banking from office client\n* CEN = Online banking from Charge Engine\n* COR = Online banking from Core\n* BAX = Online banking from Bank Axess\n* BES = Online banking from Corporate Bank\n* OPB = Online banking from Open Banking Parties\n* PSD = Online banking from PSD2 Parties\n* SMW = Online banking from Smart Wealth\n* SPA = Online banking from Saving",
												"key": "X-EVRY-CHANNEL",
												"value": "TLF"
											},
											{
												"description": "Standard HTTP Accept Language. Can be used if textual information from the business systems should deviate from the default language for the organisation.\n",
												"key": "Accept-Language",
												"value": "<string>"
											},
											{
												"description": "Defines the Orgid that the X-EVRY-USERID belongs to.",
												"key": "X-EVRY-USERORGID",
												"value": "<string>"
											},
											{
												"description": "Contains the name of the Client JS Application stored on the user session. The REST ESB forwards the Client JS Application name in that header on all requests to the REST Services",
												"key": "X-EVRY-ESB-CLIENTNAME",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/wbrule/:pk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wbrule",
												":pk"
											],
											"variable": [
												{
													"key": "pk"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"system\": \"<string>\",\n  \"code\": \"<string>\",\n  \"message\": \"<string>\",\n  \"params\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"applicationSpecific\": {\n    \"severity\": \"<string>\",\n    \"logref\": \"<string>\",\n    \"message\": \"<string>\",\n    \"validationErrors\": [\n      {\n        \"errorCode\": \"<string>\",\n        \"errorMessage\": \"<string>\"\n      },\n      {\n        \"errorCode\": \"<string>\",\n        \"errorMessage\": \"<string>\"\n      }\n    ],\n    \"cause\": \"<string>\",\n    \"stackTrace\": \"<string>\"\n  }\n}"
								},
								{
									"id": "27851672-43ea4e7a-7ac5-4562-a12f-462d4aef02d4",
									"name": "Close/Delete WB Rule.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-EVRY-DATAOWNERORGID",
												"value": "4201",
												"type": "text"
											},
											{
												"key": "x-evry-esb-usersession",
												"value": "{\"bankOrgID\": \"4201\",\"userID\": \"e220102\",\"client\": {\"ip\":\"10.10.10.10\"} }",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "x-evry-esb-securitytoken",
												"value": "{\"tokenType\": \"EvrySo\", \"token\": \"03111012010400425kglPboRi3h1Q0wGJvxDnjLEmmmyjbdrfsSaabKNt2t%2BCqK3eX2EphONTCSUcmn1BsSaabKNt2t%2BxJppso23a37EmmmyjbdrfyqVfESZ%2BvdaEdNM4lOx0RzgSxAz1%2B8eEsSaabKNt2t%2FXzlyjxYnxhcG46wcbIKp%2FsSaabKNt2t9wBUG0SyIoqFfig80Gq4uXVBtimDzTiu3EfQIWD5xMfk2jSY2FGfvV26qFHJXpC08%3DRScZIBaF5rVbaSQXdfjW7qpDd%2Fx6Uv7yZLZhCUf3MZQpUdJt1NcsZDOjPzj%2FxNUr4iwU0MZPvSc40rnfiJVGhX6lz1BFMma9XVgKg5SRUqBh2Vd0hQRhPCN3LcKOZ%2B4Q6Kstjdn9Jtnmh7ILkD4X%2BB0RNu8YM7rIAPdQI5SLqyM%3D\"}",
												"type": "text"
											},
											{
												"key": "X-EVRY-ESB-CLIENTNAME",
												"value": "pen",
												"type": "text"
											},
											{
												"key": "X-EVRY-CLIENT-CLIENTNAME",
												"value": "pen",
												"type": "text"
											},
											{
												"key": "X-EVRY-CLIENT-REQUESTID",
												"value": "${=java.util.UUID.randomUUID().toString()}",
												"type": "text"
											},
											{
												"key": "content-language",
												"value": "en",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "eTag",
												"value": "10",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/wbrule/:pk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wbrule",
												":pk"
											],
											"variable": [
												{
													"key": "pk",
													"value": "3159"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "Date",
											"value": "Mon, 31 Jul 2023 07:03:37 GMT"
										},
										{
											"key": "X-sorp",
											"value": "e220102;4201;-;pen;http://10.246.89.245:10450/pbdsrv/api/v7;wbrule/-;-;${=java.util.UUID.randomUUID().toString()};-;-;false"
										},
										{
											"key": "Signature",
											"value": "keyId=\"dc2ccd1e2341ebd5cb34f007d23defe9f0605b7602e0e87a29d32252a4e23fb6\",algorithm=\"ecdsa-sha256\",headers=\"x-sorp date\",signature=\"MEQCIGwWwGHgn8QbcVwQr1cERmf4AoT5+IYAOai8fK/yFUgxAiAuFY4G9Fah96mHgOsVy12UUZyvTktHSP3BtDmZhS+u7w==\""
										},
										{
											"key": "Server",
											"value": "Jetty(9.4.44.v20210927)"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": null
								}
							]
						}
					],
					"id": "27851672-55cba8d4-118a-4a7a-ac79-1fb21d89e59c"
				},
				{
					"name": "{ref-key}",
					"item": [
						{
							"name": "{ref-value}:reference-read",
							"item": [
								{
									"name": "Read WB Rule(s) and all its references.",
									"id": "27851672-b8fab20b-50b8-46b9-9ced-8ae95200a55f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "X-EVRY-DATAOWNERORGID",
												"value": "4201",
												"type": "text"
											},
											{
												"key": "x-evry-esb-usersession",
												"value": "{\"bankOrgID\": \"4201\",\"userID\": \"e220102\",\"client\": {\"ip\":\"10.10.10.10\"} }",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "x-evry-esb-securitytoken",
												"value": "{\"tokenType\": \"EvrySo\", \"token\": \"03111012010400425kglPboRi3h1Q0wGJvxDnjLEmmmyjbdrfsSaabKNt2t%2BCqK3eX2EphONTCSUcmn1BsSaabKNt2t%2BxJppso23a37EmmmyjbdrfyqVfESZ%2BvdaEdNM4lOx0RzgSxAz1%2B8eEsSaabKNt2t%2FXzlyjxYnxhcG46wcbIKp%2FsSaabKNt2t9wBUG0SyIoqFfig80Gq4uXVBtimDzTiu3EfQIWD5xMfk2jSY2FGfvV26qFHJXpC08%3DRScZIBaF5rVbaSQXdfjW7qpDd%2Fx6Uv7yZLZhCUf3MZQpUdJt1NcsZDOjPzj%2FxNUr4iwU0MZPvSc40rnfiJVGhX6lz1BFMma9XVgKg5SRUqBh2Vd0hQRhPCN3LcKOZ%2B4Q6Kstjdn9Jtnmh7ILkD4X%2BB0RNu8YM7rIAPdQI5SLqyM%3D\"}",
												"type": "text"
											},
											{
												"key": "X-EVRY-ESB-CLIENTNAME",
												"value": "pen",
												"type": "text"
											},
											{
												"key": "X-EVRY-CLIENT-CLIENTNAME",
												"value": "pen",
												"type": "text"
											},
											{
												"key": "X-EVRY-CLIENT-REQUESTID",
												"value": "${=java.util.UUID.randomUUID().toString()}",
												"type": "text"
											},
											{
												"key": "content-language",
												"value": "en",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "eTag",
												"value": "2",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/wbrule/:ref-key/2760:reference-read",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wbrule",
												":ref-key",
												"2760:reference-read"
											],
											"variable": [
												{
													"id": "b15ccfee-ad63-4011-bae2-2063aee218f8",
													"key": "ref-key",
													"value": "reference-id"
												}
											]
										},
										"description": "This endpoint returns a list of WB Rule(s) which share the same reference as passed in the request.<br>\nIts bound to return all the available copies of the WB Rule.<br>\n`ref-key` is an enum with following values:\n* **reference-id**: Reference ID of the record to read"
									},
									"response": [
										{
											"id": "27851672-c12c4ca7-6f11-4b27-8f34-f1a2021b97e6",
											"name": "OK - Successfully listed the wb rule information for the input.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) Identifies the source sending the request. Used to separate different service consumers.\nName should identify customer (bank) and consumer 'application'. The format of the field is 'Organization name'-'Application name'.\n",
														"key": "X-EVRY-CLIENT-CLIENTNAME",
														"value": "<string>"
													},
													{
														"description": "(Required) Unique log reference, generated on the client, and must be unique across multiple sessions and days.",
														"key": "X-EVRY-CLIENT-REQUESTID",
														"value": "<string>"
													},
													{
														"description": "If request origins from a mobile device, this is set to TRUE, else FALSE or not present",
														"key": "X-EVRY-CLIENT-ISMOBILE",
														"value": "<string>"
													},
													{
														"description": "Defines the Signature in the request. Used in accordance with these [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/)\n",
														"key": "Signature",
														"value": "<string>"
													},
													{
														"description": "Defines the Digest in the request. Used in accordance with [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/Digest),\nand is mandatory for all requests containing body.\n",
														"key": "Digest",
														"value": "<string>"
													},
													{
														"description": "Identifies the organization, will in a banking context be the Financial Institution (Konsernnr) registered in the banking infrastructure..",
														"key": "X-EVRY-DATAOWNERORGID",
														"value": "<string>"
													},
													{
														"description": "Identifies the person or system initiating the request.\nNormally this field is set equally to customerid, but should be set to the id of Employee/Agent/Retail/System if request is initiated on behalf of the customerid.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: SSN (Social Security Number) of the user\n* Branch bank employee accessing data of a customer: Logonid of the bank employee\n",
														"key": "X-EVRY-USERID",
														"value": "<string>"
													},
													{
														"description": "Identifies the customer for which this request is initiated.\nShould be set equal to the SSN customer number 11 digits for private customers and the organization number 11 digits with leading zeroes for corporates.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: Organization Number (Foretaksnummer) of the corporate customer\n* Branch bank employee accessing data of a customer: SSN of the user if private customer, Organization Number (Foretaksnummer) if corporate customer\n",
														"key": "X-EVRY-CUSTOMERID",
														"value": "<string>"
													},
													{
														"description": "If the backend soap service is requiring TietoEVRY security object (SO), the field can be set automatic on the TietoEVRY Rest-ESB,\nor the the initiating system can set this field when not integrating through Rest-ESB.\nAn automatic setting of the SO on Rest-ESB is based on an original valid authentication/signing of the request.\n",
														"key": "X-EVRY-SO",
														"value": "<string>"
													},
													{
														"description": "Contains the Security Token used to authenticate the user when logging in to the REST ESB.\nThe REST ESB forwards the Security Token in that header on all requests to the REST Services. In the first version of the REST ESB, the Security Token is an EVRY SO.\nFor clients using IDP, this field is the ID Token (For clients that require SO, a claim within the ID Token contains an SO)",
														"key": "X-EVRY-ESB-SECURITYTOKEN",
														"value": "<string>"
													},
													{
														"description": "Hold the information about user like authentication level ,user Id,organisation ID",
														"key": "X-EVRY-ESB-USERSESSION",
														"value": "<string>"
													},
													{
														"description": "Client ip-address or dns-address from the machine sending the request. Used to separate requests from different physical machines.",
														"key": "X-EVRY-USER-IPADDRESS",
														"value": "<string>"
													},
													{
														"description": "Used to differentiate business logic based on which channel was the origin of the request.\nThe parameter should be set in selfservice use cases, and when a branch officer acts on behalf of the customer.\nValid values are:\n* INT = Online banking from Internet Bank\n* MOB = Online banking from Mobile Bank\n* WAP = Online banking from legacy WAP Mobile Bank\n* SMS = Online banking from SMS Bank\n* TLF = Online banking from Phone Bank\n* ITR = Online banking from office client\n* CEN = Online banking from Charge Engine\n* COR = Online banking from Core\n* BAX = Online banking from Bank Axess\n* BES = Online banking from Corporate Bank\n* OPB = Online banking from Open Banking Parties\n* PSD = Online banking from PSD2 Parties\n* SMW = Online banking from Smart Wealth\n* SPA = Online banking from Saving",
														"key": "X-EVRY-CHANNEL",
														"value": "TLF"
													},
													{
														"description": "Standard HTTP Accept Language. Can be used if textual information from the business systems should deviate from the default language for the organisation.\n",
														"key": "Accept-Language",
														"value": "<string>"
													},
													{
														"description": "Defines the Orgid that the X-EVRY-USERID belongs to.",
														"key": "X-EVRY-USERORGID",
														"value": "<string>"
													},
													{
														"description": "Contains the name of the Client JS Application stored on the user session. The REST ESB forwards the Client JS Application name in that header on all requests to the REST Services",
														"key": "X-EVRY-ESB-CLIENTNAME",
														"value": "<string>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/wbrule/:ref-key/{{ref-value}}:reference-read",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wbrule",
														":ref-key",
														"{{ref-value}}:reference-read"
													],
													"variable": [
														{
															"key": "ref-key"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "[\n  {\n    \"isNewCreditorAccount\": \"<boolean>\",\n    \"pk\": \"<long>\",\n    \"version\": \"<long>\",\n    \"wbRuleId\": \"<long>\",\n    \"changeId\": \"<long>\",\n    \"futureValueDate\": \"<boolean>\",\n    \"bicAndNationalIdValidate\": \"<boolean>\",\n    \"instructedCurrency\": \"<boolean>\",\n    \"wbRuleIdentification\": {\n      \"code\": \"WARNING\",\n      \"showForEndUser\": \"<boolean>\",\n      \"status\": \"AWAITING_VERIFICATION\",\n      \"currencyCode\": \"XPP\",\n      \"countryUnionCode\": \"VO\",\n      \"internalDescription\": \"VQ>VGU>w!TZ(rIUF?1zH6@R+\\\"nWYm63?V\\\"-i9}dZ5we+Hg4/4yx;ImZj@5_>rK(+Xo:V\\\"(V5(H/YX`q#b,,!NbpqR]E9ig@^YD{\\\")JFsUE9yS3zA;zDU!u=:Bas}<_1%:}')mf[j GY`tSu>\\\"` ,>py03@Ss;P`;,$hI}X~8H907^od+/znweSHgK+?8[fJF`xgc,1CUtOhud`W-p{r}\\\\3\",\n      \"direction\": \"BTB\",\n      \"intermediaryBankPresent\": \"<boolean>\",\n      \"startDate\": \"<date>\",\n      \"name\": \"52mx=Oqe.O>SH+d}jM5t')M#.^Hw*Dyk3_%p@>:4w>sd:LG(j\"\n    },\n    \"wbRuleType\": {\n      \"itemType\": \"ACCOUNT\",\n      \"itemValue\": \"V'}w|+k.\"\n    },\n    \"businessArea\": \"CHEQUES\",\n    \"bicIndicator\": \"4\",\n    \"startDate\": \"<date>\",\n    \"endDate\": \"<date>\",\n    \"sanction\": \"<boolean>\",\n    \"minimumAmount\": \"<number>\",\n    \"validForMarket\": \"BM\",\n    \"chargeBearer\": \"SLEV\",\n    \"paymentPriority\": \"NORMAL\",\n    \"paymentMethod\": \"COVER\",\n    \"externalDescription\": [\n      {\n        \"description\": \"J&VTon~+lG=@G1kA'=#|n0$vzr/n}L{oPHo@&F;\",\n        \"language\": \"nlNr\"\n      },\n      {\n        \"description\": \"Oq}g_#-Jy)U*)zW,#}'\",\n        \"language\": \"grH\"\n      }\n    ],\n    \"customerName\": \"<string>\",\n    \"name\": \"*oqRy~ccXIux=C%lQpKI.ksx'GLwl3@P16<-mp'Oy\\\"{8^W#NHW`s1>$KoC'~w^@jCQnZ-TKoZJaA?VDnUZ%/]&U$vI,1hZ|Jf`y7gZqm]C-=j_KnoJ<P\",\n    \"freeText\": \"uFZ9nea#&h2v-pw/|_I!`+yx&;qm4|iP\\\"Z}#<R.f-64!,DDX+>#_000'k]xK[kvR$rIRJ{o\\\\jmfE\"\n  },\n  {\n    \"isNewCreditorAccount\": \"<boolean>\",\n    \"pk\": \"<long>\",\n    \"version\": \"<long>\",\n    \"wbRuleId\": \"<long>\",\n    \"changeId\": \"<long>\",\n    \"futureValueDate\": \"<boolean>\",\n    \"bicAndNationalIdValidate\": \"<boolean>\",\n    \"instructedCurrency\": \"<boolean>\",\n    \"wbRuleIdentification\": {\n      \"code\": \"BLOCKING\",\n      \"showForEndUser\": \"<boolean>\",\n      \"status\": \"INACTIVE\",\n      \"currencyCode\": \"MQG\",\n      \"countryUnionCode\": \"HM\",\n      \"internalDescription\": \"py:;V{Tc+\\\\#rd$~kL_LqNIz!|D]Km2T5=[\\\\(d\\\"$_Yn-y?z[ro}kRjYX&Uz-IG=-$Og*O3M/[(>J9ZXGHDk5H_UNBuTJHwzgW[R,1Txzbo@S@(RPxM\\\\W6@S IWt9D|)x\",\n      \"direction\": \"OUTWARD\",\n      \"intermediaryBankPresent\": \"<boolean>\",\n      \"startDate\": \"<date>\",\n      \"name\": \"Yy_>FB^kr?U%f9;viMG$>{,psEh41&9`5xAn^D%w4OU@`iv|\\\"eGZA)`)v5<$$>7SC]W2;+`W\"\n    },\n    \"wbRuleType\": {\n      \"itemType\": \"BANK\",\n      \"itemValue\": \"-NO'Oo\"\n    },\n    \"businessArea\": \"CHEQUES\",\n    \"bicIndicator\": \"4\",\n    \"startDate\": \"<date>\",\n    \"endDate\": \"<date>\",\n    \"sanction\": \"<boolean>\",\n    \"minimumAmount\": \"<number>\",\n    \"validForMarket\": \"ALL\",\n    \"chargeBearer\": \"SHAR\",\n    \"paymentPriority\": \"HIGH\",\n    \"paymentMethod\": \"SERIAL\",\n    \"externalDescription\": [\n      {\n        \"description\": \"N},ycJR\",\n        \"language\": \"Pqaud\"\n      },\n      {\n        \"description\": \"_dO|dcjOfe['|JYykm*qUFrA%>8j]^lp||46inZQZSmxG*`j.B)K*PKgPq?rXGWZ[ }4QK\\\"$`Rh+gRm4[;*2h`.n.)I'3F1[4/N%rVXs8:F\\\\_4N^TE5VkN^o2\",\n        \"language\": \"Vpzr\"\n      }\n    ],\n    \"customerName\": \"<string>\",\n    \"name\": \"v{0bZw!wYR]lZgvEOqYh\",\n    \"freeText\": \"o)sRoS{4_.w&0Kv3i#e@K.,YPx5{qKf=ecX]L_oZdagf6tG[6D/3S[oHR?D+vpw}x]YN71zhBj\\\\\"\n  }\n]"
										},
										{
											"id": "27851672-e907852d-f6fc-4b43-8ff4-f70eca5edb44",
											"name": "Bad Request - If missing or badly formed parameters",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) Identifies the source sending the request. Used to separate different service consumers.\nName should identify customer (bank) and consumer 'application'. The format of the field is 'Organization name'-'Application name'.\n",
														"key": "X-EVRY-CLIENT-CLIENTNAME",
														"value": "<string>"
													},
													{
														"description": "(Required) Unique log reference, generated on the client, and must be unique across multiple sessions and days.",
														"key": "X-EVRY-CLIENT-REQUESTID",
														"value": "<string>"
													},
													{
														"description": "If request origins from a mobile device, this is set to TRUE, else FALSE or not present",
														"key": "X-EVRY-CLIENT-ISMOBILE",
														"value": "<string>"
													},
													{
														"description": "Defines the Signature in the request. Used in accordance with these [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/)\n",
														"key": "Signature",
														"value": "<string>"
													},
													{
														"description": "Defines the Digest in the request. Used in accordance with [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/Digest),\nand is mandatory for all requests containing body.\n",
														"key": "Digest",
														"value": "<string>"
													},
													{
														"description": "Identifies the organization, will in a banking context be the Financial Institution (Konsernnr) registered in the banking infrastructure..",
														"key": "X-EVRY-DATAOWNERORGID",
														"value": "<string>"
													},
													{
														"description": "Identifies the person or system initiating the request.\nNormally this field is set equally to customerid, but should be set to the id of Employee/Agent/Retail/System if request is initiated on behalf of the customerid.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: SSN (Social Security Number) of the user\n* Branch bank employee accessing data of a customer: Logonid of the bank employee\n",
														"key": "X-EVRY-USERID",
														"value": "<string>"
													},
													{
														"description": "Identifies the customer for which this request is initiated.\nShould be set equal to the SSN customer number 11 digits for private customers and the organization number 11 digits with leading zeroes for corporates.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: Organization Number (Foretaksnummer) of the corporate customer\n* Branch bank employee accessing data of a customer: SSN of the user if private customer, Organization Number (Foretaksnummer) if corporate customer\n",
														"key": "X-EVRY-CUSTOMERID",
														"value": "<string>"
													},
													{
														"description": "If the backend soap service is requiring TietoEVRY security object (SO), the field can be set automatic on the TietoEVRY Rest-ESB,\nor the the initiating system can set this field when not integrating through Rest-ESB.\nAn automatic setting of the SO on Rest-ESB is based on an original valid authentication/signing of the request.\n",
														"key": "X-EVRY-SO",
														"value": "<string>"
													},
													{
														"description": "Contains the Security Token used to authenticate the user when logging in to the REST ESB.\nThe REST ESB forwards the Security Token in that header on all requests to the REST Services. In the first version of the REST ESB, the Security Token is an EVRY SO.\nFor clients using IDP, this field is the ID Token (For clients that require SO, a claim within the ID Token contains an SO)",
														"key": "X-EVRY-ESB-SECURITYTOKEN",
														"value": "<string>"
													},
													{
														"description": "Hold the information about user like authentication level ,user Id,organisation ID",
														"key": "X-EVRY-ESB-USERSESSION",
														"value": "<string>"
													},
													{
														"description": "Client ip-address or dns-address from the machine sending the request. Used to separate requests from different physical machines.",
														"key": "X-EVRY-USER-IPADDRESS",
														"value": "<string>"
													},
													{
														"description": "Used to differentiate business logic based on which channel was the origin of the request.\nThe parameter should be set in selfservice use cases, and when a branch officer acts on behalf of the customer.\nValid values are:\n* INT = Online banking from Internet Bank\n* MOB = Online banking from Mobile Bank\n* WAP = Online banking from legacy WAP Mobile Bank\n* SMS = Online banking from SMS Bank\n* TLF = Online banking from Phone Bank\n* ITR = Online banking from office client\n* CEN = Online banking from Charge Engine\n* COR = Online banking from Core\n* BAX = Online banking from Bank Axess\n* BES = Online banking from Corporate Bank\n* OPB = Online banking from Open Banking Parties\n* PSD = Online banking from PSD2 Parties\n* SMW = Online banking from Smart Wealth\n* SPA = Online banking from Saving",
														"key": "X-EVRY-CHANNEL",
														"value": "TLF"
													},
													{
														"description": "Standard HTTP Accept Language. Can be used if textual information from the business systems should deviate from the default language for the organisation.\n",
														"key": "Accept-Language",
														"value": "<string>"
													},
													{
														"description": "Defines the Orgid that the X-EVRY-USERID belongs to.",
														"key": "X-EVRY-USERORGID",
														"value": "<string>"
													},
													{
														"description": "Contains the name of the Client JS Application stored on the user session. The REST ESB forwards the Client JS Application name in that header on all requests to the REST Services",
														"key": "X-EVRY-ESB-CLIENTNAME",
														"value": "<string>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/wbrule/:ref-key/{{ref-value}}:reference-read",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wbrule",
														":ref-key",
														"{{ref-value}}:reference-read"
													],
													"variable": [
														{
															"key": "ref-key"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"system\": \"<string>\",\n  \"code\": \"<string>\",\n  \"message\": \"<string>\",\n  \"params\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"applicationSpecific\": {\n    \"severity\": \"<string>\",\n    \"logref\": \"<string>\",\n    \"message\": \"<string>\",\n    \"validationErrors\": [\n      {\n        \"errorCode\": \"<string>\",\n        \"errorMessage\": \"<string>\"\n      },\n      {\n        \"errorCode\": \"<string>\",\n        \"errorMessage\": \"<string>\"\n      }\n    ],\n    \"cause\": \"<string>\",\n    \"stackTrace\": \"<string>\"\n  }\n}"
										},
										{
											"id": "27851672-114eebb0-0ad5-4d9e-b6f3-6c66d0e0c33e",
											"name": "Unauthorized - In case user not authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) Identifies the source sending the request. Used to separate different service consumers.\nName should identify customer (bank) and consumer 'application'. The format of the field is 'Organization name'-'Application name'.\n",
														"key": "X-EVRY-CLIENT-CLIENTNAME",
														"value": "<string>"
													},
													{
														"description": "(Required) Unique log reference, generated on the client, and must be unique across multiple sessions and days.",
														"key": "X-EVRY-CLIENT-REQUESTID",
														"value": "<string>"
													},
													{
														"description": "If request origins from a mobile device, this is set to TRUE, else FALSE or not present",
														"key": "X-EVRY-CLIENT-ISMOBILE",
														"value": "<string>"
													},
													{
														"description": "Defines the Signature in the request. Used in accordance with these [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/)\n",
														"key": "Signature",
														"value": "<string>"
													},
													{
														"description": "Defines the Digest in the request. Used in accordance with [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/Digest),\nand is mandatory for all requests containing body.\n",
														"key": "Digest",
														"value": "<string>"
													},
													{
														"description": "Identifies the organization, will in a banking context be the Financial Institution (Konsernnr) registered in the banking infrastructure..",
														"key": "X-EVRY-DATAOWNERORGID",
														"value": "<string>"
													},
													{
														"description": "Identifies the person or system initiating the request.\nNormally this field is set equally to customerid, but should be set to the id of Employee/Agent/Retail/System if request is initiated on behalf of the customerid.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: SSN (Social Security Number) of the user\n* Branch bank employee accessing data of a customer: Logonid of the bank employee\n",
														"key": "X-EVRY-USERID",
														"value": "<string>"
													},
													{
														"description": "Identifies the customer for which this request is initiated.\nShould be set equal to the SSN customer number 11 digits for private customers and the organization number 11 digits with leading zeroes for corporates.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: Organization Number (Foretaksnummer) of the corporate customer\n* Branch bank employee accessing data of a customer: SSN of the user if private customer, Organization Number (Foretaksnummer) if corporate customer\n",
														"key": "X-EVRY-CUSTOMERID",
														"value": "<string>"
													},
													{
														"description": "If the backend soap service is requiring TietoEVRY security object (SO), the field can be set automatic on the TietoEVRY Rest-ESB,\nor the the initiating system can set this field when not integrating through Rest-ESB.\nAn automatic setting of the SO on Rest-ESB is based on an original valid authentication/signing of the request.\n",
														"key": "X-EVRY-SO",
														"value": "<string>"
													},
													{
														"description": "Contains the Security Token used to authenticate the user when logging in to the REST ESB.\nThe REST ESB forwards the Security Token in that header on all requests to the REST Services. In the first version of the REST ESB, the Security Token is an EVRY SO.\nFor clients using IDP, this field is the ID Token (For clients that require SO, a claim within the ID Token contains an SO)",
														"key": "X-EVRY-ESB-SECURITYTOKEN",
														"value": "<string>"
													},
													{
														"description": "Hold the information about user like authentication level ,user Id,organisation ID",
														"key": "X-EVRY-ESB-USERSESSION",
														"value": "<string>"
													},
													{
														"description": "Client ip-address or dns-address from the machine sending the request. Used to separate requests from different physical machines.",
														"key": "X-EVRY-USER-IPADDRESS",
														"value": "<string>"
													},
													{
														"description": "Used to differentiate business logic based on which channel was the origin of the request.\nThe parameter should be set in selfservice use cases, and when a branch officer acts on behalf of the customer.\nValid values are:\n* INT = Online banking from Internet Bank\n* MOB = Online banking from Mobile Bank\n* WAP = Online banking from legacy WAP Mobile Bank\n* SMS = Online banking from SMS Bank\n* TLF = Online banking from Phone Bank\n* ITR = Online banking from office client\n* CEN = Online banking from Charge Engine\n* COR = Online banking from Core\n* BAX = Online banking from Bank Axess\n* BES = Online banking from Corporate Bank\n* OPB = Online banking from Open Banking Parties\n* PSD = Online banking from PSD2 Parties\n* SMW = Online banking from Smart Wealth\n* SPA = Online banking from Saving",
														"key": "X-EVRY-CHANNEL",
														"value": "TLF"
													},
													{
														"description": "Standard HTTP Accept Language. Can be used if textual information from the business systems should deviate from the default language for the organisation.\n",
														"key": "Accept-Language",
														"value": "<string>"
													},
													{
														"description": "Defines the Orgid that the X-EVRY-USERID belongs to.",
														"key": "X-EVRY-USERORGID",
														"value": "<string>"
													},
													{
														"description": "Contains the name of the Client JS Application stored on the user session. The REST ESB forwards the Client JS Application name in that header on all requests to the REST Services",
														"key": "X-EVRY-ESB-CLIENTNAME",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/wbrule/:ref-key/{{ref-value}}:reference-read",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wbrule",
														":ref-key",
														"{{ref-value}}:reference-read"
													],
													"variable": [
														{
															"key": "ref-key"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "27851672-bcd355ad-641d-4c52-8727-bbce40fb2ca5",
											"name": "Forbidden - In case user not authorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) Identifies the source sending the request. Used to separate different service consumers.\nName should identify customer (bank) and consumer 'application'. The format of the field is 'Organization name'-'Application name'.\n",
														"key": "X-EVRY-CLIENT-CLIENTNAME",
														"value": "<string>"
													},
													{
														"description": "(Required) Unique log reference, generated on the client, and must be unique across multiple sessions and days.",
														"key": "X-EVRY-CLIENT-REQUESTID",
														"value": "<string>"
													},
													{
														"description": "If request origins from a mobile device, this is set to TRUE, else FALSE or not present",
														"key": "X-EVRY-CLIENT-ISMOBILE",
														"value": "<string>"
													},
													{
														"description": "Defines the Signature in the request. Used in accordance with these [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/)\n",
														"key": "Signature",
														"value": "<string>"
													},
													{
														"description": "Defines the Digest in the request. Used in accordance with [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/Digest),\nand is mandatory for all requests containing body.\n",
														"key": "Digest",
														"value": "<string>"
													},
													{
														"description": "Identifies the organization, will in a banking context be the Financial Institution (Konsernnr) registered in the banking infrastructure..",
														"key": "X-EVRY-DATAOWNERORGID",
														"value": "<string>"
													},
													{
														"description": "Identifies the person or system initiating the request.\nNormally this field is set equally to customerid, but should be set to the id of Employee/Agent/Retail/System if request is initiated on behalf of the customerid.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: SSN (Social Security Number) of the user\n* Branch bank employee accessing data of a customer: Logonid of the bank employee\n",
														"key": "X-EVRY-USERID",
														"value": "<string>"
													},
													{
														"description": "Identifies the customer for which this request is initiated.\nShould be set equal to the SSN customer number 11 digits for private customers and the organization number 11 digits with leading zeroes for corporates.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: Organization Number (Foretaksnummer) of the corporate customer\n* Branch bank employee accessing data of a customer: SSN of the user if private customer, Organization Number (Foretaksnummer) if corporate customer\n",
														"key": "X-EVRY-CUSTOMERID",
														"value": "<string>"
													},
													{
														"description": "If the backend soap service is requiring TietoEVRY security object (SO), the field can be set automatic on the TietoEVRY Rest-ESB,\nor the the initiating system can set this field when not integrating through Rest-ESB.\nAn automatic setting of the SO on Rest-ESB is based on an original valid authentication/signing of the request.\n",
														"key": "X-EVRY-SO",
														"value": "<string>"
													},
													{
														"description": "Contains the Security Token used to authenticate the user when logging in to the REST ESB.\nThe REST ESB forwards the Security Token in that header on all requests to the REST Services. In the first version of the REST ESB, the Security Token is an EVRY SO.\nFor clients using IDP, this field is the ID Token (For clients that require SO, a claim within the ID Token contains an SO)",
														"key": "X-EVRY-ESB-SECURITYTOKEN",
														"value": "<string>"
													},
													{
														"description": "Hold the information about user like authentication level ,user Id,organisation ID",
														"key": "X-EVRY-ESB-USERSESSION",
														"value": "<string>"
													},
													{
														"description": "Client ip-address or dns-address from the machine sending the request. Used to separate requests from different physical machines.",
														"key": "X-EVRY-USER-IPADDRESS",
														"value": "<string>"
													},
													{
														"description": "Used to differentiate business logic based on which channel was the origin of the request.\nThe parameter should be set in selfservice use cases, and when a branch officer acts on behalf of the customer.\nValid values are:\n* INT = Online banking from Internet Bank\n* MOB = Online banking from Mobile Bank\n* WAP = Online banking from legacy WAP Mobile Bank\n* SMS = Online banking from SMS Bank\n* TLF = Online banking from Phone Bank\n* ITR = Online banking from office client\n* CEN = Online banking from Charge Engine\n* COR = Online banking from Core\n* BAX = Online banking from Bank Axess\n* BES = Online banking from Corporate Bank\n* OPB = Online banking from Open Banking Parties\n* PSD = Online banking from PSD2 Parties\n* SMW = Online banking from Smart Wealth\n* SPA = Online banking from Saving",
														"key": "X-EVRY-CHANNEL",
														"value": "TLF"
													},
													{
														"description": "Standard HTTP Accept Language. Can be used if textual information from the business systems should deviate from the default language for the organisation.\n",
														"key": "Accept-Language",
														"value": "<string>"
													},
													{
														"description": "Defines the Orgid that the X-EVRY-USERID belongs to.",
														"key": "X-EVRY-USERORGID",
														"value": "<string>"
													},
													{
														"description": "Contains the name of the Client JS Application stored on the user session. The REST ESB forwards the Client JS Application name in that header on all requests to the REST Services",
														"key": "X-EVRY-ESB-CLIENTNAME",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/wbrule/:ref-key/{{ref-value}}:reference-read",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wbrule",
														":ref-key",
														"{{ref-value}}:reference-read"
													],
													"variable": [
														{
															"key": "ref-key"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "27851672-63b1c191-46a7-4504-ba72-841b01c7b59d",
											"name": "Not found - resource being requested is not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) Identifies the source sending the request. Used to separate different service consumers.\nName should identify customer (bank) and consumer 'application'. The format of the field is 'Organization name'-'Application name'.\n",
														"key": "X-EVRY-CLIENT-CLIENTNAME",
														"value": "<string>"
													},
													{
														"description": "(Required) Unique log reference, generated on the client, and must be unique across multiple sessions and days.",
														"key": "X-EVRY-CLIENT-REQUESTID",
														"value": "<string>"
													},
													{
														"description": "If request origins from a mobile device, this is set to TRUE, else FALSE or not present",
														"key": "X-EVRY-CLIENT-ISMOBILE",
														"value": "<string>"
													},
													{
														"description": "Defines the Signature in the request. Used in accordance with these [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/)\n",
														"key": "Signature",
														"value": "<string>"
													},
													{
														"description": "Defines the Digest in the request. Used in accordance with [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/Digest),\nand is mandatory for all requests containing body.\n",
														"key": "Digest",
														"value": "<string>"
													},
													{
														"description": "Identifies the organization, will in a banking context be the Financial Institution (Konsernnr) registered in the banking infrastructure..",
														"key": "X-EVRY-DATAOWNERORGID",
														"value": "<string>"
													},
													{
														"description": "Identifies the person or system initiating the request.\nNormally this field is set equally to customerid, but should be set to the id of Employee/Agent/Retail/System if request is initiated on behalf of the customerid.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: SSN (Social Security Number) of the user\n* Branch bank employee accessing data of a customer: Logonid of the bank employee\n",
														"key": "X-EVRY-USERID",
														"value": "<string>"
													},
													{
														"description": "Identifies the customer for which this request is initiated.\nShould be set equal to the SSN customer number 11 digits for private customers and the organization number 11 digits with leading zeroes for corporates.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: Organization Number (Foretaksnummer) of the corporate customer\n* Branch bank employee accessing data of a customer: SSN of the user if private customer, Organization Number (Foretaksnummer) if corporate customer\n",
														"key": "X-EVRY-CUSTOMERID",
														"value": "<string>"
													},
													{
														"description": "If the backend soap service is requiring TietoEVRY security object (SO), the field can be set automatic on the TietoEVRY Rest-ESB,\nor the the initiating system can set this field when not integrating through Rest-ESB.\nAn automatic setting of the SO on Rest-ESB is based on an original valid authentication/signing of the request.\n",
														"key": "X-EVRY-SO",
														"value": "<string>"
													},
													{
														"description": "Contains the Security Token used to authenticate the user when logging in to the REST ESB.\nThe REST ESB forwards the Security Token in that header on all requests to the REST Services. In the first version of the REST ESB, the Security Token is an EVRY SO.\nFor clients using IDP, this field is the ID Token (For clients that require SO, a claim within the ID Token contains an SO)",
														"key": "X-EVRY-ESB-SECURITYTOKEN",
														"value": "<string>"
													},
													{
														"description": "Hold the information about user like authentication level ,user Id,organisation ID",
														"key": "X-EVRY-ESB-USERSESSION",
														"value": "<string>"
													},
													{
														"description": "Client ip-address or dns-address from the machine sending the request. Used to separate requests from different physical machines.",
														"key": "X-EVRY-USER-IPADDRESS",
														"value": "<string>"
													},
													{
														"description": "Used to differentiate business logic based on which channel was the origin of the request.\nThe parameter should be set in selfservice use cases, and when a branch officer acts on behalf of the customer.\nValid values are:\n* INT = Online banking from Internet Bank\n* MOB = Online banking from Mobile Bank\n* WAP = Online banking from legacy WAP Mobile Bank\n* SMS = Online banking from SMS Bank\n* TLF = Online banking from Phone Bank\n* ITR = Online banking from office client\n* CEN = Online banking from Charge Engine\n* COR = Online banking from Core\n* BAX = Online banking from Bank Axess\n* BES = Online banking from Corporate Bank\n* OPB = Online banking from Open Banking Parties\n* PSD = Online banking from PSD2 Parties\n* SMW = Online banking from Smart Wealth\n* SPA = Online banking from Saving",
														"key": "X-EVRY-CHANNEL",
														"value": "TLF"
													},
													{
														"description": "Standard HTTP Accept Language. Can be used if textual information from the business systems should deviate from the default language for the organisation.\n",
														"key": "Accept-Language",
														"value": "<string>"
													},
													{
														"description": "Defines the Orgid that the X-EVRY-USERID belongs to.",
														"key": "X-EVRY-USERORGID",
														"value": "<string>"
													},
													{
														"description": "Contains the name of the Client JS Application stored on the user session. The REST ESB forwards the Client JS Application name in that header on all requests to the REST Services",
														"key": "X-EVRY-ESB-CLIENTNAME",
														"value": "<string>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/wbrule/:ref-key/{{ref-value}}:reference-read",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wbrule",
														":ref-key",
														"{{ref-value}}:reference-read"
													],
													"variable": [
														{
															"key": "ref-key"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"system\": \"<string>\",\n  \"code\": \"<string>\",\n  \"message\": \"<string>\",\n  \"params\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"applicationSpecific\": {\n    \"severity\": \"<string>\",\n    \"logref\": \"<string>\",\n    \"message\": \"<string>\",\n    \"validationErrors\": [\n      {\n        \"errorCode\": \"<string>\",\n        \"errorMessage\": \"<string>\"\n      },\n      {\n        \"errorCode\": \"<string>\",\n        \"errorMessage\": \"<string>\"\n      }\n    ],\n    \"cause\": \"<string>\",\n    \"stackTrace\": \"<string>\"\n  }\n}"
										},
										{
											"id": "27851672-d1dbfd6c-b40d-4581-ab8b-1d599da7fa19",
											"name": "Internal server error - technical error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "(Required) Identifies the source sending the request. Used to separate different service consumers.\nName should identify customer (bank) and consumer 'application'. The format of the field is 'Organization name'-'Application name'.\n",
														"key": "X-EVRY-CLIENT-CLIENTNAME",
														"value": "<string>"
													},
													{
														"description": "(Required) Unique log reference, generated on the client, and must be unique across multiple sessions and days.",
														"key": "X-EVRY-CLIENT-REQUESTID",
														"value": "<string>"
													},
													{
														"description": "If request origins from a mobile device, this is set to TRUE, else FALSE or not present",
														"key": "X-EVRY-CLIENT-ISMOBILE",
														"value": "<string>"
													},
													{
														"description": "Defines the Signature in the request. Used in accordance with these [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/)\n",
														"key": "Signature",
														"value": "<string>"
													},
													{
														"description": "Defines the Digest in the request. Used in accordance with [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/Digest),\nand is mandatory for all requests containing body.\n",
														"key": "Digest",
														"value": "<string>"
													},
													{
														"description": "Identifies the organization, will in a banking context be the Financial Institution (Konsernnr) registered in the banking infrastructure..",
														"key": "X-EVRY-DATAOWNERORGID",
														"value": "<string>"
													},
													{
														"description": "Identifies the person or system initiating the request.\nNormally this field is set equally to customerid, but should be set to the id of Employee/Agent/Retail/System if request is initiated on behalf of the customerid.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: SSN (Social Security Number) of the user\n* Branch bank employee accessing data of a customer: Logonid of the bank employee\n",
														"key": "X-EVRY-USERID",
														"value": "<string>"
													},
													{
														"description": "Identifies the customer for which this request is initiated.\nShould be set equal to the SSN customer number 11 digits for private customers and the organization number 11 digits with leading zeroes for corporates.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: Organization Number (Foretaksnummer) of the corporate customer\n* Branch bank employee accessing data of a customer: SSN of the user if private customer, Organization Number (Foretaksnummer) if corporate customer\n",
														"key": "X-EVRY-CUSTOMERID",
														"value": "<string>"
													},
													{
														"description": "If the backend soap service is requiring TietoEVRY security object (SO), the field can be set automatic on the TietoEVRY Rest-ESB,\nor the the initiating system can set this field when not integrating through Rest-ESB.\nAn automatic setting of the SO on Rest-ESB is based on an original valid authentication/signing of the request.\n",
														"key": "X-EVRY-SO",
														"value": "<string>"
													},
													{
														"description": "Contains the Security Token used to authenticate the user when logging in to the REST ESB.\nThe REST ESB forwards the Security Token in that header on all requests to the REST Services. In the first version of the REST ESB, the Security Token is an EVRY SO.\nFor clients using IDP, this field is the ID Token (For clients that require SO, a claim within the ID Token contains an SO)",
														"key": "X-EVRY-ESB-SECURITYTOKEN",
														"value": "<string>"
													},
													{
														"description": "Hold the information about user like authentication level ,user Id,organisation ID",
														"key": "X-EVRY-ESB-USERSESSION",
														"value": "<string>"
													},
													{
														"description": "Client ip-address or dns-address from the machine sending the request. Used to separate requests from different physical machines.",
														"key": "X-EVRY-USER-IPADDRESS",
														"value": "<string>"
													},
													{
														"description": "Used to differentiate business logic based on which channel was the origin of the request.\nThe parameter should be set in selfservice use cases, and when a branch officer acts on behalf of the customer.\nValid values are:\n* INT = Online banking from Internet Bank\n* MOB = Online banking from Mobile Bank\n* WAP = Online banking from legacy WAP Mobile Bank\n* SMS = Online banking from SMS Bank\n* TLF = Online banking from Phone Bank\n* ITR = Online banking from office client\n* CEN = Online banking from Charge Engine\n* COR = Online banking from Core\n* BAX = Online banking from Bank Axess\n* BES = Online banking from Corporate Bank\n* OPB = Online banking from Open Banking Parties\n* PSD = Online banking from PSD2 Parties\n* SMW = Online banking from Smart Wealth\n* SPA = Online banking from Saving",
														"key": "X-EVRY-CHANNEL",
														"value": "TLF"
													},
													{
														"description": "Standard HTTP Accept Language. Can be used if textual information from the business systems should deviate from the default language for the organisation.\n",
														"key": "Accept-Language",
														"value": "<string>"
													},
													{
														"description": "Defines the Orgid that the X-EVRY-USERID belongs to.",
														"key": "X-EVRY-USERORGID",
														"value": "<string>"
													},
													{
														"description": "Contains the name of the Client JS Application stored on the user session. The REST ESB forwards the Client JS Application name in that header on all requests to the REST Services",
														"key": "X-EVRY-ESB-CLIENTNAME",
														"value": "<string>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/wbrule/:ref-key/{{ref-value}}:reference-read",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wbrule",
														":ref-key",
														"{{ref-value}}:reference-read"
													],
													"variable": [
														{
															"key": "ref-key"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"system\": \"<string>\",\n  \"code\": \"<string>\",\n  \"message\": \"<string>\",\n  \"params\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"applicationSpecific\": {\n    \"severity\": \"<string>\",\n    \"logref\": \"<string>\",\n    \"message\": \"<string>\",\n    \"validationErrors\": [\n      {\n        \"errorCode\": \"<string>\",\n        \"errorMessage\": \"<string>\"\n      },\n      {\n        \"errorCode\": \"<string>\",\n        \"errorMessage\": \"<string>\"\n      }\n    ],\n    \"cause\": \"<string>\",\n    \"stackTrace\": \"<string>\"\n  }\n}"
										},
										{
											"id": "27851672-30d293ed-2229-4aa5-b6d0-aac8d0054106",
											"name": "Read WB Rule(s) and all its references.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-EVRY-DATAOWNERORGID",
														"value": "4201",
														"type": "text"
													},
													{
														"key": "x-evry-esb-usersession",
														"value": "{\"bankOrgID\": \"4201\",\"userID\": \"e220102\",\"client\": {\"ip\":\"10.10.10.10\"} }",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-evry-esb-securitytoken",
														"value": "{\"tokenType\": \"EvrySo\", \"token\": \"03111012010400425kglPboRi3h1Q0wGJvxDnjLEmmmyjbdrfsSaabKNt2t%2BCqK3eX2EphONTCSUcmn1BsSaabKNt2t%2BxJppso23a37EmmmyjbdrfyqVfESZ%2BvdaEdNM4lOx0RzgSxAz1%2B8eEsSaabKNt2t%2FXzlyjxYnxhcG46wcbIKp%2FsSaabKNt2t9wBUG0SyIoqFfig80Gq4uXVBtimDzTiu3EfQIWD5xMfk2jSY2FGfvV26qFHJXpC08%3DRScZIBaF5rVbaSQXdfjW7qpDd%2Fx6Uv7yZLZhCUf3MZQpUdJt1NcsZDOjPzj%2FxNUr4iwU0MZPvSc40rnfiJVGhX6lz1BFMma9XVgKg5SRUqBh2Vd0hQRhPCN3LcKOZ%2B4Q6Kstjdn9Jtnmh7ILkD4X%2BB0RNu8YM7rIAPdQI5SLqyM%3D\"}",
														"type": "text"
													},
													{
														"key": "X-EVRY-ESB-CLIENTNAME",
														"value": "pen",
														"type": "text"
													},
													{
														"key": "X-EVRY-CLIENT-CLIENTNAME",
														"value": "pen",
														"type": "text"
													},
													{
														"key": "X-EVRY-CLIENT-REQUESTID",
														"value": "${=java.util.UUID.randomUUID().toString()}",
														"type": "text"
													},
													{
														"key": "content-language",
														"value": "en",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "eTag",
														"value": "2",
														"type": "text",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/wbrule/:ref-key/2760:reference-read",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wbrule",
														":ref-key",
														"2760:reference-read"
													],
													"variable": [
														{
															"id": "b15ccfee-ad63-4011-bae2-2063aee218f8",
															"key": "ref-key",
															"value": "reference-id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Connection",
													"value": "close"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Date",
													"value": "Mon, 31 Jul 2023 07:02:22 GMT"
												},
												{
													"key": "X-sorp",
													"value": "e220102;4201;-;pen;http://10.246.89.245:10450/pbdsrv/api/v7;wbrule/-/-:reference-read;-;${=java.util.UUID.randomUUID().toString()};-;-;false"
												},
												{
													"key": "Digest",
													"value": "SHA-256=9FSqhx0WOLz3U8la/nqlovFnntjFCPJqwFYtSZysTv4="
												},
												{
													"key": "Signature",
													"value": "keyId=\"dc2ccd1e2341ebd5cb34f007d23defe9f0605b7602e0e87a29d32252a4e23fb6\",algorithm=\"ecdsa-sha256\",headers=\"x-sorp digest date content-type\",signature=\"MEUCIQDs1+Ms0ytwsuSsNoHoeD9bgxd/AX1ypenBcDD6TVgaVwIgXiChOla/p3qVGbfomqSUv7EWnUH80Y8M33/ymB5qsv0=\""
												},
												{
													"key": "Content-Length",
													"value": "1288"
												},
												{
													"key": "Server",
													"value": "Jetty(9.4.44.v20210927)"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "[\n    {\n        \"pk\": 3158,\n        \"version\": 9,\n        \"wbRuleId\": 2760,\n        \"changeId\": 1214822,\n        \"isNewCreditorAccount\": false,\n        \"wbRuleIdentification\": {\n            \"code\": \"BLOCKING\",\n            \"showForEndUser\": true,\n            \"status\": \"ACTIVE\",\n            \"currencyCode\": \"BYN\",\n            \"internalDescription\": \"For ALL Countries\",\n            \"direction\": \"INWARD\",\n            \"intermediaryBankPresent\": true\n        },\n        \"wbRuleType\": {\n            \"itemType\": \"BANK\",\n            \"itemValue\": \"SNOMSG\"\n        },\n        \"businessArea\": \"PAYMENTS\",\n        \"bicIndicator\": \"6\",\n        \"startDate\": \"2023-07-31\",\n        \"sanction\": false,\n        \"minimumAmount\": 5,\n        \"validForMarket\": \"BM\",\n        \"chargeBearer\": \"DEBT\",\n        \"paymentPriority\": \"NORMAL\",\n        \"externalDescription\": [\n            {\n                \"language\": \"nb\",\n                \"description\": \"hiii\"\n            },\n            {\n                \"language\": \"en_GB\",\n                \"description\": \"Hi\"\n            }\n        ],\n        \"freeText\": \"Test Demo\"\n    },\n    {\n        \"pk\": 3159,\n        \"version\": 10,\n        \"wbRuleId\": 2760,\n        \"changeId\": 1214824,\n        \"isNewCreditorAccount\": false,\n        \"wbRuleIdentification\": {\n            \"code\": \"BLOCKING\",\n            \"showForEndUser\": true,\n            \"status\": \"VERIFIED\",\n            \"currencyCode\": \"BYN\",\n            \"internalDescription\": \"For ALL Countries\",\n            \"direction\": \"INWARD\",\n            \"intermediaryBankPresent\": true\n        },\n        \"wbRuleType\": {\n            \"itemType\": \"BANK\",\n            \"itemValue\": \"SNOMSG\"\n        },\n        \"businessArea\": \"PAYMENTS\",\n        \"bicIndicator\": \"6\",\n        \"startDate\": \"2023-08-01\",\n        \"sanction\": false,\n        \"minimumAmount\": 5,\n        \"validForMarket\": \"BM\",\n        \"chargeBearer\": \"DEBT\",\n        \"paymentPriority\": \"NORMAL\",\n        \"externalDescription\": [\n            {\n                \"language\": \"nb\",\n                \"description\": \"hiii\"\n            },\n            {\n                \"language\": \"en_GB\",\n                \"description\": \"Hi\"\n            }\n        ],\n        \"freeText\": \"Test Demo\"\n    }\n]"
										}
									]
								}
							],
							"id": "27851672-4331cc18-a395-4aeb-b75f-71669e60b43e"
						}
					],
					"id": "27851672-f7c52745-9875-41be-a21e-150fde5d9f69"
				},
				{
					"name": "List the WB Rule created in PBD.",
					"id": "27851672-8279a6d2-ed79-464e-8119-b9b4e93732e2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-EVRY-DATAOWNERORGID",
								"value": "4201",
								"description": "(Required) Identifies the source sending the request. Used to separate different service consumers.\nName should identify customer (bank) and consumer 'application'. The format of the field is 'Organization name'-'Application name'.\n",
								"type": "text"
							},
							{
								"key": "x-evry-esb-usersession",
								"value": "{\"bankOrgID\": \"4201\",\"userID\": \"e220102\",\"client\": {\"ip\":\"10.10.10.10\"} }",
								"description": "(Required) Unique log reference, generated on the client, and must be unique across multiple sessions and days.",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "If request origins from a mobile device, this is set to TRUE, else FALSE or not present",
								"type": "text"
							},
							{
								"key": "x-evry-esb-securitytoken",
								"value": "{\"tokenType\": \"EvrySo\", \"token\": \"03111012010400425kglPboRi3h1Q0wGJvxDnjLEmmmyjbdrfsSaabKNt2t%2BCqK3eX2EphONTCSUcmn1BsSaabKNt2t%2BxJppso23a37EmmmyjbdrfyqVfESZ%2BvdaEdNM4lOx0RzgSxAz1%2B8eEsSaabKNt2t%2FXzlyjxYnxhcG46wcbIKp%2FsSaabKNt2t9wBUG0SyIoqFfig80Gq4uXVBtimDzTiu3EfQIWD5xMfk2jSY2FGfvV26qFHJXpC08%3DRScZIBaF5rVbaSQXdfjW7qpDd%2Fx6Uv7yZLZhCUf3MZQpUdJt1NcsZDOjPzj%2FxNUr4iwU0MZPvSc40rnfiJVGhX6lz1BFMma9XVgKg5SRUqBh2Vd0hQRhPCN3LcKOZ%2B4Q6Kstjdn9Jtnmh7ILkD4X%2BB0RNu8YM7rIAPdQI5SLqyM%3D\"}",
								"description": "Defines the Signature in the request. Used in accordance with these [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/)\n",
								"type": "text"
							},
							{
								"key": "X-EVRY-ESB-CLIENTNAME",
								"value": "pen",
								"description": "Defines the Digest in the request. Used in accordance with [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/Digest),\nand is mandatory for all requests containing body.\n",
								"type": "text"
							},
							{
								"key": "X-EVRY-CLIENT-CLIENTNAME",
								"value": "pen",
								"description": "Identifies the organization, will in a banking context be the Financial Institution (Konsernnr) registered in the banking infrastructure..",
								"type": "text"
							},
							{
								"key": "X-EVRY-CLIENT-REQUESTID",
								"value": "${=java.util.UUID.randomUUID().toString()}",
								"description": "Identifies the person or system initiating the request.\nNormally this field is set equally to customerid, but should be set to the id of Employee/Agent/Retail/System if request is initiated on behalf of the customerid.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: SSN (Social Security Number) of the user\n* Branch bank employee accessing data of a customer: Logonid of the bank employee\n",
								"type": "text"
							},
							{
								"key": "content-language",
								"value": "en",
								"description": "Identifies the customer for which this request is initiated.\nShould be set equal to the SSN customer number 11 digits for private customers and the organization number 11 digits with leading zeroes for corporates.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: Organization Number (Foretaksnummer) of the corporate customer\n* Branch bank employee accessing data of a customer: SSN of the user if private customer, Organization Number (Foretaksnummer) if corporate customer\n",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "If the backend soap service is requiring TietoEVRY security object (SO), the field can be set automatic on the TietoEVRY Rest-ESB,\nor the the initiating system can set this field when not integrating through Rest-ESB.\nAn automatic setting of the SO on Rest-ESB is based on an original valid authentication/signing of the request.\n",
								"type": "text"
							},
							{
								"key": "eTag",
								"value": "2",
								"description": "Contains the Security Token used to authenticate the user when logging in to the REST ESB.\nThe REST ESB forwards the Security Token in that header on all requests to the REST Services. In the first version of the REST ESB, the Security Token is an EVRY SO.\nFor clients using IDP, this field is the ID Token (For clients that require SO, a claim within the ID Token contains an SO)",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrl}}/wbrule?page-token=1&page-size=500&order-by=START_DATE&order-in=asc&direction=INWARD",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"wbrule"
							],
							"query": [
								{
									"key": "page-token",
									"value": "1"
								},
								{
									"key": "page-size",
									"value": "500"
								},
								{
									"key": "order-by",
									"value": "START_DATE"
								},
								{
									"key": "order-in",
									"value": "asc"
								},
								{
									"key": "code",
									"value": "WARNING",
									"disabled": true
								},
								{
									"key": "status",
									"value": "INACTIVE",
									"disabled": true
								},
								{
									"key": "currencyCode",
									"value": "NOK",
									"disabled": true
								},
								{
									"key": "countryUnionCode",
									"value": "NO",
									"disabled": true
								},
								{
									"key": "direction",
									"value": "INWARD"
								},
								{
									"key": "intermediaryBankPresent",
									"value": "true",
									"disabled": true
								}
							]
						},
						"description": "Endpoint to list all the WB Rule created in PBD. Multiple filters are available to narrow down the list of results.<br>"
					},
					"response": [
						{
							"id": "27851672-32840d33-3185-4fee-b441-83b3956e55be",
							"name": "OK - Successful response with list of WB Rule",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) Identifies the source sending the request. Used to separate different service consumers.\nName should identify customer (bank) and consumer 'application'. The format of the field is 'Organization name'-'Application name'.\n",
										"key": "X-EVRY-CLIENT-CLIENTNAME",
										"value": "<string>"
									},
									{
										"description": "(Required) Unique log reference, generated on the client, and must be unique across multiple sessions and days.",
										"key": "X-EVRY-CLIENT-REQUESTID",
										"value": "<string>"
									},
									{
										"description": "If request origins from a mobile device, this is set to TRUE, else FALSE or not present",
										"key": "X-EVRY-CLIENT-ISMOBILE",
										"value": "<string>"
									},
									{
										"description": "Defines the Signature in the request. Used in accordance with these [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/)\n",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "Defines the Digest in the request. Used in accordance with [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/Digest),\nand is mandatory for all requests containing body.\n",
										"key": "Digest",
										"value": "<string>"
									},
									{
										"description": "Identifies the organization, will in a banking context be the Financial Institution (Konsernnr) registered in the banking infrastructure..",
										"key": "X-EVRY-DATAOWNERORGID",
										"value": "<string>"
									},
									{
										"description": "Identifies the person or system initiating the request.\nNormally this field is set equally to customerid, but should be set to the id of Employee/Agent/Retail/System if request is initiated on behalf of the customerid.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: SSN (Social Security Number) of the user\n* Branch bank employee accessing data of a customer: Logonid of the bank employee\n",
										"key": "X-EVRY-USERID",
										"value": "<string>"
									},
									{
										"description": "Identifies the customer for which this request is initiated.\nShould be set equal to the SSN customer number 11 digits for private customers and the organization number 11 digits with leading zeroes for corporates.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: Organization Number (Foretaksnummer) of the corporate customer\n* Branch bank employee accessing data of a customer: SSN of the user if private customer, Organization Number (Foretaksnummer) if corporate customer\n",
										"key": "X-EVRY-CUSTOMERID",
										"value": "<string>"
									},
									{
										"description": "If the backend soap service is requiring TietoEVRY security object (SO), the field can be set automatic on the TietoEVRY Rest-ESB,\nor the the initiating system can set this field when not integrating through Rest-ESB.\nAn automatic setting of the SO on Rest-ESB is based on an original valid authentication/signing of the request.\n",
										"key": "X-EVRY-SO",
										"value": "<string>"
									},
									{
										"description": "Contains the Security Token used to authenticate the user when logging in to the REST ESB.\nThe REST ESB forwards the Security Token in that header on all requests to the REST Services. In the first version of the REST ESB, the Security Token is an EVRY SO.\nFor clients using IDP, this field is the ID Token (For clients that require SO, a claim within the ID Token contains an SO)",
										"key": "X-EVRY-ESB-SECURITYTOKEN",
										"value": "<string>"
									},
									{
										"description": "Hold the information about user like authentication level ,user Id,organisation ID",
										"key": "X-EVRY-ESB-USERSESSION",
										"value": "<string>"
									},
									{
										"description": "Client ip-address or dns-address from the machine sending the request. Used to separate requests from different physical machines.",
										"key": "X-EVRY-USER-IPADDRESS",
										"value": "<string>"
									},
									{
										"description": "Used to differentiate business logic based on which channel was the origin of the request.\nThe parameter should be set in selfservice use cases, and when a branch officer acts on behalf of the customer.\nValid values are:\n* INT = Online banking from Internet Bank\n* MOB = Online banking from Mobile Bank\n* WAP = Online banking from legacy WAP Mobile Bank\n* SMS = Online banking from SMS Bank\n* TLF = Online banking from Phone Bank\n* ITR = Online banking from office client\n* CEN = Online banking from Charge Engine\n* COR = Online banking from Core\n* BAX = Online banking from Bank Axess\n* BES = Online banking from Corporate Bank\n* OPB = Online banking from Open Banking Parties\n* PSD = Online banking from PSD2 Parties\n* SMW = Online banking from Smart Wealth\n* SPA = Online banking from Saving",
										"key": "X-EVRY-CHANNEL",
										"value": "TLF"
									},
									{
										"description": "Standard HTTP Accept Language. Can be used if textual information from the business systems should deviate from the default language for the organisation.\n",
										"key": "Accept-Language",
										"value": "<string>"
									},
									{
										"description": "Defines the Orgid that the X-EVRY-USERID belongs to.",
										"key": "X-EVRY-USERORGID",
										"value": "<string>"
									},
									{
										"description": "Contains the name of the Client JS Application stored on the user session. The REST ESB forwards the Client JS Application name in that header on all requests to the REST Services",
										"key": "X-EVRY-ESB-CLIENTNAME",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/wbrule?code=WARNING&itemValue=<string>&status=ACTIVE&currencyCode=WXI&countryUnionCode=PW&internalDescription=CkCG%Fs@!OoXra0m@o7oB}}%26^78!\\JtbQm9)0(!,SJMBVWld&direction=OUTWARD&intermediaryBankPresent=<boolean>&startDate=<date>&name=a\\3^d[i]1 zE`0ShAJ_o'x_:RxIl)>F}&page-token=1&page-size=500&order-by=START_DATE&order-in=asc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"wbrule"
									],
									"query": [
										{
											"key": "code",
											"value": "WARNING"
										},
										{
											"key": "itemValue",
											"value": "<string>"
										},
										{
											"key": "status",
											"value": "ACTIVE"
										},
										{
											"key": "currencyCode",
											"value": "WXI"
										},
										{
											"key": "countryUnionCode",
											"value": "PW"
										},
										{
											"key": "internalDescription",
											"value": "CkCG%Fs@!OoXra0m@o7oB}}&^78!\\JtbQm9)0(!,SJMBVWld"
										},
										{
											"key": "direction",
											"value": "OUTWARD"
										},
										{
											"key": "intermediaryBankPresent",
											"value": "<boolean>"
										},
										{
											"key": "startDate",
											"value": "<date>"
										},
										{
											"key": "name",
											"value": "a\\3^d[i]1 zE`0ShAJ_o'x_:RxIl)>F}"
										},
										{
											"description": "Describes the page number to give the records from. Default value is 1",
											"key": "page-token",
											"value": "1"
										},
										{
											"description": "Page size for the list of resources. Default value is 500. If zero (0) is passed default value is considered.",
											"key": "page-size",
											"value": "500"
										},
										{
											"description": "Name of the field to order the list to.",
											"key": "order-by",
											"value": "START_DATE"
										},
										{
											"description": "Direction for the sorting order of the list",
											"key": "order-in",
											"value": "asc"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"totalSize\": \"<integer>\",\n  \"nextPageToken\": \"<string>\",\n  \"wbRuleList\": [\n    {\n      \"isNewCreditorAccount\": \"<boolean>\",\n      \"pk\": \"<long>\",\n      \"version\": \"<long>\",\n      \"wbRuleId\": \"<long>\",\n      \"changeId\": \"<long>\",\n      \"futureValueDate\": \"<boolean>\",\n      \"bicAndNationalIdValidate\": \"<boolean>\",\n      \"instructedCurrency\": \"<boolean>\",\n      \"wbRuleIdentification\": {\n        \"code\": \"WARNING\",\n        \"showForEndUser\": \"<boolean>\",\n        \"status\": \"AWAITING_VERIFICATION\",\n        \"currencyCode\": \"EBV\",\n        \"countryUnionCode\": \"YR\",\n        \"internalDescription\": \"V643n@4XIg;7A'F<B.&z$e#ZG^A&@f4\\\"gP;wysx|NzO}H2e-@.&kAS$Rwe=?h&BXY:8\\\\H{6`kNe#?R'z&e85@qQK? []{C\\\"}5=jK(So/?b.ppcWYgBU!l3p]I#>}Vptph=t\\\";on$}4S!D.zET0T{$$pMuZwJe9+Lr6uC,M:W`]Tuc'nkr}V@ 1<k\\\\bYhT-{mF~38%Z/dSxbv]R:xJGLo&,v2J*]iQEsbiBX_) }IDOp*n$3;$@{h\",\n        \"direction\": \"BTB\",\n        \"intermediaryBankPresent\": \"<boolean>\",\n        \"startDate\": \"<date>\",\n        \"name\": \"Y{wJ:A)ZYssRsOb)R9Q!}p|}=tyN$dTJlK9J^9[R@Q Wdgxb||7WRE8I{A2KD@z\\\\KDls&kdVE\\\"U$b}{6\\\\WMS@\"\n      },\n      \"wbRuleType\": {\n        \"itemType\": \"BANK\",\n        \"itemValue\": \"z+x>x#%@?IY 9w.Be[dp.P!81Q\"\n      },\n      \"businessArea\": \"CHEQUES\",\n      \"bicIndicator\": \"8\",\n      \"startDate\": \"<date>\",\n      \"endDate\": \"<date>\",\n      \"sanction\": \"<boolean>\",\n      \"minimumAmount\": \"<number>\",\n      \"validForMarket\": \"PM\",\n      \"chargeBearer\": \"SLEV\",\n      \"paymentPriority\": \"NORMAL\",\n      \"paymentMethod\": \"SERIAL\",\n      \"externalDescription\": [\n        {\n          \"description\": \"+}HykI(+vKiILY&uS1{9!W$&>z!nN_hS%He8tb+Hk5@M`oM6rsHs@LR2?jIcTcO,,8^6p:if@,A2_7IT >@KYa3!uXdS9s-Z)zHV.ok:C]l=Jpl$qQ.)P9Z?^{D}3!m/5ei3'h'z\",\n          \"language\": \"xp\"\n        },\n        {\n          \"description\": \")f </e?v_Q=s5N`Q4+W^VO*N}M76A9.88n0V]$$I<pp>{dy0:N!J2:g.}h}_h8#GyT|GDG^/TWi~ne|Yi$)I<g\",\n          \"language\": \"Lhg\"\n        }\n      ],\n      \"customerName\": \"<string>\",\n      \"name\": \"{\\\\>DkqfQ>zrym#po.S\\\"}#5I{sU=6^t~)0[\\\"S2mb3oEZ\",\n      \"freeText\": \"TUn'H YmDN{UmzXd!-U-YzZ~y!M^CeP&]1xl@c&]IdHD QW`3RLFOUB_Ur=\\\"$HA:D`zA=|uzG!HhWZe_Q\"\n    },\n    {\n      \"isNewCreditorAccount\": \"<boolean>\",\n      \"pk\": \"<long>\",\n      \"version\": \"<long>\",\n      \"wbRuleId\": \"<long>\",\n      \"changeId\": \"<long>\",\n      \"futureValueDate\": \"<boolean>\",\n      \"bicAndNationalIdValidate\": \"<boolean>\",\n      \"instructedCurrency\": \"<boolean>\",\n      \"wbRuleIdentification\": {\n        \"code\": \"WARNING\",\n        \"showForEndUser\": \"<boolean>\",\n        \"status\": \"INACTIVE\",\n        \"currencyCode\": \"BCZ\",\n        \"countryUnionCode\": \"LI\",\n        \"internalDescription\": \"$9d198W#H`MR_>+ tn<jK_/^[c,_7>y*F+q&mgMMd+3PC)\\\\+j&WgfL&i|a9i4Uc5(EjqFe4vl?yC=z=CMN6bu{Cy}9N?JgkQ1Py 4!Li_!7q.rQGJ:wX_ kM~}hb`v81q6@_:mR$9V.W>&?>R-@]+' -8\\\"z'|whs\",\n        \"direction\": \"INWARD\",\n        \"intermediaryBankPresent\": \"<boolean>\",\n        \"startDate\": \"<date>\",\n        \"name\": \"Iff`rvL&xnV6JJf5\\\"4Q7b~6Al[?p#K(?A;p=Y7<vy!-LB5Kp]E\\\"8\\\"?'Rjsyu3Q>+\\\\m3~_@`a95;VEs//6BSC&b'_;J:sd#E'l<RI<\\\\Ma(mt!N\\\"Np@EmO4jI3RBthYt'\"\n      },\n      \"wbRuleType\": {\n        \"itemType\": \"ACCOUNT\",\n        \"itemValue\": \":KigZDC9vhNZ?H&j}uJU^m\\\\[70%Iv4\"\n      },\n      \"businessArea\": \"CHEQUES\",\n      \"bicIndicator\": \"11\",\n      \"startDate\": \"<date>\",\n      \"endDate\": \"<date>\",\n      \"sanction\": \"<boolean>\",\n      \"minimumAmount\": \"<number>\",\n      \"validForMarket\": \"BM\",\n      \"chargeBearer\": \"CRED\",\n      \"paymentPriority\": \"HIGH\",\n      \"paymentMethod\": \"COVER\",\n      \"externalDescription\": [\n        {\n          \"description\": \"_VW:sV9e9!xcP5,I[k:S%d!}y[jbRnydG3VN+3A,X<IY^Du07?hWF=_mSi^ GpPAM:?g 8:%hKJKDwkui @yE=37(}\\\\M!&\\\"-$gOA\\\\BjXK)8r1s;r(Y*=~b)02IXe~GDf\",\n          \"language\": \"qXYa\"\n        },\n        {\n          \"description\": \"`y&(daHsUp_cPOB(\\\\^gs}6Yt_y[Et|Wo.h$jc| )K D3:R$T0?\\\\IGy\",\n          \"language\": \"YuAX\"\n        }\n      ],\n      \"customerName\": \"<string>\",\n      \"name\": \"aCJW=RTj{ >;Z83dx>g&#3`r-Ef=;9#wiuz,d+]EE\\\"K9$t^--Tna7VaZ*(@{Lia-0~2tuN\\\"X6^OG@=jAX{iLg~.2~~:(;^q^6_Zq~K%B!ZQ[|U<\\\"wi'rW@z;A$}NyL@LcSB\",\n      \"freeText\": \"$7Hw&yD2Ma(!wa$s;0/B-.L,7c^0dH|Hw`O#q}\\\\)r\\\\`:_<!^y'gV32sB6~/OG;cmF2d.D`39TPBJ[]LmwQ<{%ji,[8&a,x\"\n    }\n  ]\n}"
						},
						{
							"id": "27851672-4d320a82-3d7c-49af-9cb6-60f9fdd7490c",
							"name": "Bad Request - If missing or badly formed parameters",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) Identifies the source sending the request. Used to separate different service consumers.\nName should identify customer (bank) and consumer 'application'. The format of the field is 'Organization name'-'Application name'.\n",
										"key": "X-EVRY-CLIENT-CLIENTNAME",
										"value": "<string>"
									},
									{
										"description": "(Required) Unique log reference, generated on the client, and must be unique across multiple sessions and days.",
										"key": "X-EVRY-CLIENT-REQUESTID",
										"value": "<string>"
									},
									{
										"description": "If request origins from a mobile device, this is set to TRUE, else FALSE or not present",
										"key": "X-EVRY-CLIENT-ISMOBILE",
										"value": "<string>"
									},
									{
										"description": "Defines the Signature in the request. Used in accordance with these [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/)\n",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "Defines the Digest in the request. Used in accordance with [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/Digest),\nand is mandatory for all requests containing body.\n",
										"key": "Digest",
										"value": "<string>"
									},
									{
										"description": "Identifies the organization, will in a banking context be the Financial Institution (Konsernnr) registered in the banking infrastructure..",
										"key": "X-EVRY-DATAOWNERORGID",
										"value": "<string>"
									},
									{
										"description": "Identifies the person or system initiating the request.\nNormally this field is set equally to customerid, but should be set to the id of Employee/Agent/Retail/System if request is initiated on behalf of the customerid.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: SSN (Social Security Number) of the user\n* Branch bank employee accessing data of a customer: Logonid of the bank employee\n",
										"key": "X-EVRY-USERID",
										"value": "<string>"
									},
									{
										"description": "Identifies the customer for which this request is initiated.\nShould be set equal to the SSN customer number 11 digits for private customers and the organization number 11 digits with leading zeroes for corporates.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: Organization Number (Foretaksnummer) of the corporate customer\n* Branch bank employee accessing data of a customer: SSN of the user if private customer, Organization Number (Foretaksnummer) if corporate customer\n",
										"key": "X-EVRY-CUSTOMERID",
										"value": "<string>"
									},
									{
										"description": "If the backend soap service is requiring TietoEVRY security object (SO), the field can be set automatic on the TietoEVRY Rest-ESB,\nor the the initiating system can set this field when not integrating through Rest-ESB.\nAn automatic setting of the SO on Rest-ESB is based on an original valid authentication/signing of the request.\n",
										"key": "X-EVRY-SO",
										"value": "<string>"
									},
									{
										"description": "Contains the Security Token used to authenticate the user when logging in to the REST ESB.\nThe REST ESB forwards the Security Token in that header on all requests to the REST Services. In the first version of the REST ESB, the Security Token is an EVRY SO.\nFor clients using IDP, this field is the ID Token (For clients that require SO, a claim within the ID Token contains an SO)",
										"key": "X-EVRY-ESB-SECURITYTOKEN",
										"value": "<string>"
									},
									{
										"description": "Hold the information about user like authentication level ,user Id,organisation ID",
										"key": "X-EVRY-ESB-USERSESSION",
										"value": "<string>"
									},
									{
										"description": "Client ip-address or dns-address from the machine sending the request. Used to separate requests from different physical machines.",
										"key": "X-EVRY-USER-IPADDRESS",
										"value": "<string>"
									},
									{
										"description": "Used to differentiate business logic based on which channel was the origin of the request.\nThe parameter should be set in selfservice use cases, and when a branch officer acts on behalf of the customer.\nValid values are:\n* INT = Online banking from Internet Bank\n* MOB = Online banking from Mobile Bank\n* WAP = Online banking from legacy WAP Mobile Bank\n* SMS = Online banking from SMS Bank\n* TLF = Online banking from Phone Bank\n* ITR = Online banking from office client\n* CEN = Online banking from Charge Engine\n* COR = Online banking from Core\n* BAX = Online banking from Bank Axess\n* BES = Online banking from Corporate Bank\n* OPB = Online banking from Open Banking Parties\n* PSD = Online banking from PSD2 Parties\n* SMW = Online banking from Smart Wealth\n* SPA = Online banking from Saving",
										"key": "X-EVRY-CHANNEL",
										"value": "TLF"
									},
									{
										"description": "Standard HTTP Accept Language. Can be used if textual information from the business systems should deviate from the default language for the organisation.\n",
										"key": "Accept-Language",
										"value": "<string>"
									},
									{
										"description": "Defines the Orgid that the X-EVRY-USERID belongs to.",
										"key": "X-EVRY-USERORGID",
										"value": "<string>"
									},
									{
										"description": "Contains the name of the Client JS Application stored on the user session. The REST ESB forwards the Client JS Application name in that header on all requests to the REST Services",
										"key": "X-EVRY-ESB-CLIENTNAME",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/wbrule?code=WARNING&itemValue=<string>&status=ACTIVE&currencyCode=WXI&countryUnionCode=PW&internalDescription=CkCG%Fs@!OoXra0m@o7oB}}%26^78!\\JtbQm9)0(!,SJMBVWld&direction=OUTWARD&intermediaryBankPresent=<boolean>&startDate=<date>&name=a\\3^d[i]1 zE`0ShAJ_o'x_:RxIl)>F}&page-token=1&page-size=500&order-by=START_DATE&order-in=asc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"wbrule"
									],
									"query": [
										{
											"key": "code",
											"value": "WARNING"
										},
										{
											"key": "itemValue",
											"value": "<string>"
										},
										{
											"key": "status",
											"value": "ACTIVE"
										},
										{
											"key": "currencyCode",
											"value": "WXI"
										},
										{
											"key": "countryUnionCode",
											"value": "PW"
										},
										{
											"key": "internalDescription",
											"value": "CkCG%Fs@!OoXra0m@o7oB}}&^78!\\JtbQm9)0(!,SJMBVWld"
										},
										{
											"key": "direction",
											"value": "OUTWARD"
										},
										{
											"key": "intermediaryBankPresent",
											"value": "<boolean>"
										},
										{
											"key": "startDate",
											"value": "<date>"
										},
										{
											"key": "name",
											"value": "a\\3^d[i]1 zE`0ShAJ_o'x_:RxIl)>F}"
										},
										{
											"description": "Describes the page number to give the records from. Default value is 1",
											"key": "page-token",
											"value": "1"
										},
										{
											"description": "Page size for the list of resources. Default value is 500. If zero (0) is passed default value is considered.",
											"key": "page-size",
											"value": "500"
										},
										{
											"description": "Name of the field to order the list to.",
											"key": "order-by",
											"value": "START_DATE"
										},
										{
											"description": "Direction for the sorting order of the list",
											"key": "order-in",
											"value": "asc"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"system\": \"<string>\",\n  \"code\": \"<string>\",\n  \"message\": \"<string>\",\n  \"params\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"applicationSpecific\": {\n    \"severity\": \"<string>\",\n    \"logref\": \"<string>\",\n    \"message\": \"<string>\",\n    \"validationErrors\": [\n      {\n        \"errorCode\": \"<string>\",\n        \"errorMessage\": \"<string>\"\n      },\n      {\n        \"errorCode\": \"<string>\",\n        \"errorMessage\": \"<string>\"\n      }\n    ],\n    \"cause\": \"<string>\",\n    \"stackTrace\": \"<string>\"\n  }\n}"
						},
						{
							"id": "27851672-75b057c5-6f75-4698-8bad-d9fd847c7d54",
							"name": "Unauthorized - In case user not authenticated",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) Identifies the source sending the request. Used to separate different service consumers.\nName should identify customer (bank) and consumer 'application'. The format of the field is 'Organization name'-'Application name'.\n",
										"key": "X-EVRY-CLIENT-CLIENTNAME",
										"value": "<string>"
									},
									{
										"description": "(Required) Unique log reference, generated on the client, and must be unique across multiple sessions and days.",
										"key": "X-EVRY-CLIENT-REQUESTID",
										"value": "<string>"
									},
									{
										"description": "If request origins from a mobile device, this is set to TRUE, else FALSE or not present",
										"key": "X-EVRY-CLIENT-ISMOBILE",
										"value": "<string>"
									},
									{
										"description": "Defines the Signature in the request. Used in accordance with these [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/)\n",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "Defines the Digest in the request. Used in accordance with [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/Digest),\nand is mandatory for all requests containing body.\n",
										"key": "Digest",
										"value": "<string>"
									},
									{
										"description": "Identifies the organization, will in a banking context be the Financial Institution (Konsernnr) registered in the banking infrastructure..",
										"key": "X-EVRY-DATAOWNERORGID",
										"value": "<string>"
									},
									{
										"description": "Identifies the person or system initiating the request.\nNormally this field is set equally to customerid, but should be set to the id of Employee/Agent/Retail/System if request is initiated on behalf of the customerid.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: SSN (Social Security Number) of the user\n* Branch bank employee accessing data of a customer: Logonid of the bank employee\n",
										"key": "X-EVRY-USERID",
										"value": "<string>"
									},
									{
										"description": "Identifies the customer for which this request is initiated.\nShould be set equal to the SSN customer number 11 digits for private customers and the organization number 11 digits with leading zeroes for corporates.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: Organization Number (Foretaksnummer) of the corporate customer\n* Branch bank employee accessing data of a customer: SSN of the user if private customer, Organization Number (Foretaksnummer) if corporate customer\n",
										"key": "X-EVRY-CUSTOMERID",
										"value": "<string>"
									},
									{
										"description": "If the backend soap service is requiring TietoEVRY security object (SO), the field can be set automatic on the TietoEVRY Rest-ESB,\nor the the initiating system can set this field when not integrating through Rest-ESB.\nAn automatic setting of the SO on Rest-ESB is based on an original valid authentication/signing of the request.\n",
										"key": "X-EVRY-SO",
										"value": "<string>"
									},
									{
										"description": "Contains the Security Token used to authenticate the user when logging in to the REST ESB.\nThe REST ESB forwards the Security Token in that header on all requests to the REST Services. In the first version of the REST ESB, the Security Token is an EVRY SO.\nFor clients using IDP, this field is the ID Token (For clients that require SO, a claim within the ID Token contains an SO)",
										"key": "X-EVRY-ESB-SECURITYTOKEN",
										"value": "<string>"
									},
									{
										"description": "Hold the information about user like authentication level ,user Id,organisation ID",
										"key": "X-EVRY-ESB-USERSESSION",
										"value": "<string>"
									},
									{
										"description": "Client ip-address or dns-address from the machine sending the request. Used to separate requests from different physical machines.",
										"key": "X-EVRY-USER-IPADDRESS",
										"value": "<string>"
									},
									{
										"description": "Used to differentiate business logic based on which channel was the origin of the request.\nThe parameter should be set in selfservice use cases, and when a branch officer acts on behalf of the customer.\nValid values are:\n* INT = Online banking from Internet Bank\n* MOB = Online banking from Mobile Bank\n* WAP = Online banking from legacy WAP Mobile Bank\n* SMS = Online banking from SMS Bank\n* TLF = Online banking from Phone Bank\n* ITR = Online banking from office client\n* CEN = Online banking from Charge Engine\n* COR = Online banking from Core\n* BAX = Online banking from Bank Axess\n* BES = Online banking from Corporate Bank\n* OPB = Online banking from Open Banking Parties\n* PSD = Online banking from PSD2 Parties\n* SMW = Online banking from Smart Wealth\n* SPA = Online banking from Saving",
										"key": "X-EVRY-CHANNEL",
										"value": "TLF"
									},
									{
										"description": "Standard HTTP Accept Language. Can be used if textual information from the business systems should deviate from the default language for the organisation.\n",
										"key": "Accept-Language",
										"value": "<string>"
									},
									{
										"description": "Defines the Orgid that the X-EVRY-USERID belongs to.",
										"key": "X-EVRY-USERORGID",
										"value": "<string>"
									},
									{
										"description": "Contains the name of the Client JS Application stored on the user session. The REST ESB forwards the Client JS Application name in that header on all requests to the REST Services",
										"key": "X-EVRY-ESB-CLIENTNAME",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/wbrule?code=WARNING&itemValue=<string>&status=ACTIVE&currencyCode=WXI&countryUnionCode=PW&internalDescription=CkCG%Fs@!OoXra0m@o7oB}}%26^78!\\JtbQm9)0(!,SJMBVWld&direction=OUTWARD&intermediaryBankPresent=<boolean>&startDate=<date>&name=a\\3^d[i]1 zE`0ShAJ_o'x_:RxIl)>F}&page-token=1&page-size=500&order-by=START_DATE&order-in=asc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"wbrule"
									],
									"query": [
										{
											"key": "code",
											"value": "WARNING"
										},
										{
											"key": "itemValue",
											"value": "<string>"
										},
										{
											"key": "status",
											"value": "ACTIVE"
										},
										{
											"key": "currencyCode",
											"value": "WXI"
										},
										{
											"key": "countryUnionCode",
											"value": "PW"
										},
										{
											"key": "internalDescription",
											"value": "CkCG%Fs@!OoXra0m@o7oB}}&^78!\\JtbQm9)0(!,SJMBVWld"
										},
										{
											"key": "direction",
											"value": "OUTWARD"
										},
										{
											"key": "intermediaryBankPresent",
											"value": "<boolean>"
										},
										{
											"key": "startDate",
											"value": "<date>"
										},
										{
											"key": "name",
											"value": "a\\3^d[i]1 zE`0ShAJ_o'x_:RxIl)>F}"
										},
										{
											"description": "Describes the page number to give the records from. Default value is 1",
											"key": "page-token",
											"value": "1"
										},
										{
											"description": "Page size for the list of resources. Default value is 500. If zero (0) is passed default value is considered.",
											"key": "page-size",
											"value": "500"
										},
										{
											"description": "Name of the field to order the list to.",
											"key": "order-by",
											"value": "START_DATE"
										},
										{
											"description": "Direction for the sorting order of the list",
											"key": "order-in",
											"value": "asc"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"responseTime": null,
							"body": ""
						},
						{
							"id": "27851672-73937522-42e1-4238-b0f5-f57636420f55",
							"name": "Forbidden - In case user not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) Identifies the source sending the request. Used to separate different service consumers.\nName should identify customer (bank) and consumer 'application'. The format of the field is 'Organization name'-'Application name'.\n",
										"key": "X-EVRY-CLIENT-CLIENTNAME",
										"value": "<string>"
									},
									{
										"description": "(Required) Unique log reference, generated on the client, and must be unique across multiple sessions and days.",
										"key": "X-EVRY-CLIENT-REQUESTID",
										"value": "<string>"
									},
									{
										"description": "If request origins from a mobile device, this is set to TRUE, else FALSE or not present",
										"key": "X-EVRY-CLIENT-ISMOBILE",
										"value": "<string>"
									},
									{
										"description": "Defines the Signature in the request. Used in accordance with these [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/)\n",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "Defines the Digest in the request. Used in accordance with [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/Digest),\nand is mandatory for all requests containing body.\n",
										"key": "Digest",
										"value": "<string>"
									},
									{
										"description": "Identifies the organization, will in a banking context be the Financial Institution (Konsernnr) registered in the banking infrastructure..",
										"key": "X-EVRY-DATAOWNERORGID",
										"value": "<string>"
									},
									{
										"description": "Identifies the person or system initiating the request.\nNormally this field is set equally to customerid, but should be set to the id of Employee/Agent/Retail/System if request is initiated on behalf of the customerid.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: SSN (Social Security Number) of the user\n* Branch bank employee accessing data of a customer: Logonid of the bank employee\n",
										"key": "X-EVRY-USERID",
										"value": "<string>"
									},
									{
										"description": "Identifies the customer for which this request is initiated.\nShould be set equal to the SSN customer number 11 digits for private customers and the organization number 11 digits with leading zeroes for corporates.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: Organization Number (Foretaksnummer) of the corporate customer\n* Branch bank employee accessing data of a customer: SSN of the user if private customer, Organization Number (Foretaksnummer) if corporate customer\n",
										"key": "X-EVRY-CUSTOMERID",
										"value": "<string>"
									},
									{
										"description": "If the backend soap service is requiring TietoEVRY security object (SO), the field can be set automatic on the TietoEVRY Rest-ESB,\nor the the initiating system can set this field when not integrating through Rest-ESB.\nAn automatic setting of the SO on Rest-ESB is based on an original valid authentication/signing of the request.\n",
										"key": "X-EVRY-SO",
										"value": "<string>"
									},
									{
										"description": "Contains the Security Token used to authenticate the user when logging in to the REST ESB.\nThe REST ESB forwards the Security Token in that header on all requests to the REST Services. In the first version of the REST ESB, the Security Token is an EVRY SO.\nFor clients using IDP, this field is the ID Token (For clients that require SO, a claim within the ID Token contains an SO)",
										"key": "X-EVRY-ESB-SECURITYTOKEN",
										"value": "<string>"
									},
									{
										"description": "Hold the information about user like authentication level ,user Id,organisation ID",
										"key": "X-EVRY-ESB-USERSESSION",
										"value": "<string>"
									},
									{
										"description": "Client ip-address or dns-address from the machine sending the request. Used to separate requests from different physical machines.",
										"key": "X-EVRY-USER-IPADDRESS",
										"value": "<string>"
									},
									{
										"description": "Used to differentiate business logic based on which channel was the origin of the request.\nThe parameter should be set in selfservice use cases, and when a branch officer acts on behalf of the customer.\nValid values are:\n* INT = Online banking from Internet Bank\n* MOB = Online banking from Mobile Bank\n* WAP = Online banking from legacy WAP Mobile Bank\n* SMS = Online banking from SMS Bank\n* TLF = Online banking from Phone Bank\n* ITR = Online banking from office client\n* CEN = Online banking from Charge Engine\n* COR = Online banking from Core\n* BAX = Online banking from Bank Axess\n* BES = Online banking from Corporate Bank\n* OPB = Online banking from Open Banking Parties\n* PSD = Online banking from PSD2 Parties\n* SMW = Online banking from Smart Wealth\n* SPA = Online banking from Saving",
										"key": "X-EVRY-CHANNEL",
										"value": "TLF"
									},
									{
										"description": "Standard HTTP Accept Language. Can be used if textual information from the business systems should deviate from the default language for the organisation.\n",
										"key": "Accept-Language",
										"value": "<string>"
									},
									{
										"description": "Defines the Orgid that the X-EVRY-USERID belongs to.",
										"key": "X-EVRY-USERORGID",
										"value": "<string>"
									},
									{
										"description": "Contains the name of the Client JS Application stored on the user session. The REST ESB forwards the Client JS Application name in that header on all requests to the REST Services",
										"key": "X-EVRY-ESB-CLIENTNAME",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/wbrule?code=WARNING&itemValue=<string>&status=ACTIVE&currencyCode=WXI&countryUnionCode=PW&internalDescription=CkCG%Fs@!OoXra0m@o7oB}}%26^78!\\JtbQm9)0(!,SJMBVWld&direction=OUTWARD&intermediaryBankPresent=<boolean>&startDate=<date>&name=a\\3^d[i]1 zE`0ShAJ_o'x_:RxIl)>F}&page-token=1&page-size=500&order-by=START_DATE&order-in=asc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"wbrule"
									],
									"query": [
										{
											"key": "code",
											"value": "WARNING"
										},
										{
											"key": "itemValue",
											"value": "<string>"
										},
										{
											"key": "status",
											"value": "ACTIVE"
										},
										{
											"key": "currencyCode",
											"value": "WXI"
										},
										{
											"key": "countryUnionCode",
											"value": "PW"
										},
										{
											"key": "internalDescription",
											"value": "CkCG%Fs@!OoXra0m@o7oB}}&^78!\\JtbQm9)0(!,SJMBVWld"
										},
										{
											"key": "direction",
											"value": "OUTWARD"
										},
										{
											"key": "intermediaryBankPresent",
											"value": "<boolean>"
										},
										{
											"key": "startDate",
											"value": "<date>"
										},
										{
											"key": "name",
											"value": "a\\3^d[i]1 zE`0ShAJ_o'x_:RxIl)>F}"
										},
										{
											"description": "Describes the page number to give the records from. Default value is 1",
											"key": "page-token",
											"value": "1"
										},
										{
											"description": "Page size for the list of resources. Default value is 500. If zero (0) is passed default value is considered.",
											"key": "page-size",
											"value": "500"
										},
										{
											"description": "Name of the field to order the list to.",
											"key": "order-by",
											"value": "START_DATE"
										},
										{
											"description": "Direction for the sorting order of the list",
											"key": "order-in",
											"value": "asc"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"responseTime": null,
							"body": ""
						},
						{
							"id": "27851672-ec7c8cc3-8e8a-4b1c-a18d-9f8f8cacba0d",
							"name": "Internal server error - technical error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) Identifies the source sending the request. Used to separate different service consumers.\nName should identify customer (bank) and consumer 'application'. The format of the field is 'Organization name'-'Application name'.\n",
										"key": "X-EVRY-CLIENT-CLIENTNAME",
										"value": "<string>"
									},
									{
										"description": "(Required) Unique log reference, generated on the client, and must be unique across multiple sessions and days.",
										"key": "X-EVRY-CLIENT-REQUESTID",
										"value": "<string>"
									},
									{
										"description": "If request origins from a mobile device, this is set to TRUE, else FALSE or not present",
										"key": "X-EVRY-CLIENT-ISMOBILE",
										"value": "<string>"
									},
									{
										"description": "Defines the Signature in the request. Used in accordance with these [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/)\n",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "Defines the Digest in the request. Used in accordance with [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/Digest),\nand is mandatory for all requests containing body.\n",
										"key": "Digest",
										"value": "<string>"
									},
									{
										"description": "Identifies the organization, will in a banking context be the Financial Institution (Konsernnr) registered in the banking infrastructure..",
										"key": "X-EVRY-DATAOWNERORGID",
										"value": "<string>"
									},
									{
										"description": "Identifies the person or system initiating the request.\nNormally this field is set equally to customerid, but should be set to the id of Employee/Agent/Retail/System if request is initiated on behalf of the customerid.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: SSN (Social Security Number) of the user\n* Branch bank employee accessing data of a customer: Logonid of the bank employee\n",
										"key": "X-EVRY-USERID",
										"value": "<string>"
									},
									{
										"description": "Identifies the customer for which this request is initiated.\nShould be set equal to the SSN customer number 11 digits for private customers and the organization number 11 digits with leading zeroes for corporates.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: Organization Number (Foretaksnummer) of the corporate customer\n* Branch bank employee accessing data of a customer: SSN of the user if private customer, Organization Number (Foretaksnummer) if corporate customer\n",
										"key": "X-EVRY-CUSTOMERID",
										"value": "<string>"
									},
									{
										"description": "If the backend soap service is requiring TietoEVRY security object (SO), the field can be set automatic on the TietoEVRY Rest-ESB,\nor the the initiating system can set this field when not integrating through Rest-ESB.\nAn automatic setting of the SO on Rest-ESB is based on an original valid authentication/signing of the request.\n",
										"key": "X-EVRY-SO",
										"value": "<string>"
									},
									{
										"description": "Contains the Security Token used to authenticate the user when logging in to the REST ESB.\nThe REST ESB forwards the Security Token in that header on all requests to the REST Services. In the first version of the REST ESB, the Security Token is an EVRY SO.\nFor clients using IDP, this field is the ID Token (For clients that require SO, a claim within the ID Token contains an SO)",
										"key": "X-EVRY-ESB-SECURITYTOKEN",
										"value": "<string>"
									},
									{
										"description": "Hold the information about user like authentication level ,user Id,organisation ID",
										"key": "X-EVRY-ESB-USERSESSION",
										"value": "<string>"
									},
									{
										"description": "Client ip-address or dns-address from the machine sending the request. Used to separate requests from different physical machines.",
										"key": "X-EVRY-USER-IPADDRESS",
										"value": "<string>"
									},
									{
										"description": "Used to differentiate business logic based on which channel was the origin of the request.\nThe parameter should be set in selfservice use cases, and when a branch officer acts on behalf of the customer.\nValid values are:\n* INT = Online banking from Internet Bank\n* MOB = Online banking from Mobile Bank\n* WAP = Online banking from legacy WAP Mobile Bank\n* SMS = Online banking from SMS Bank\n* TLF = Online banking from Phone Bank\n* ITR = Online banking from office client\n* CEN = Online banking from Charge Engine\n* COR = Online banking from Core\n* BAX = Online banking from Bank Axess\n* BES = Online banking from Corporate Bank\n* OPB = Online banking from Open Banking Parties\n* PSD = Online banking from PSD2 Parties\n* SMW = Online banking from Smart Wealth\n* SPA = Online banking from Saving",
										"key": "X-EVRY-CHANNEL",
										"value": "TLF"
									},
									{
										"description": "Standard HTTP Accept Language. Can be used if textual information from the business systems should deviate from the default language for the organisation.\n",
										"key": "Accept-Language",
										"value": "<string>"
									},
									{
										"description": "Defines the Orgid that the X-EVRY-USERID belongs to.",
										"key": "X-EVRY-USERORGID",
										"value": "<string>"
									},
									{
										"description": "Contains the name of the Client JS Application stored on the user session. The REST ESB forwards the Client JS Application name in that header on all requests to the REST Services",
										"key": "X-EVRY-ESB-CLIENTNAME",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/wbrule?code=WARNING&itemValue=<string>&status=ACTIVE&currencyCode=WXI&countryUnionCode=PW&internalDescription=CkCG%Fs@!OoXra0m@o7oB}}%26^78!\\JtbQm9)0(!,SJMBVWld&direction=OUTWARD&intermediaryBankPresent=<boolean>&startDate=<date>&name=a\\3^d[i]1 zE`0ShAJ_o'x_:RxIl)>F}&page-token=1&page-size=500&order-by=START_DATE&order-in=asc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"wbrule"
									],
									"query": [
										{
											"key": "code",
											"value": "WARNING"
										},
										{
											"key": "itemValue",
											"value": "<string>"
										},
										{
											"key": "status",
											"value": "ACTIVE"
										},
										{
											"key": "currencyCode",
											"value": "WXI"
										},
										{
											"key": "countryUnionCode",
											"value": "PW"
										},
										{
											"key": "internalDescription",
											"value": "CkCG%Fs@!OoXra0m@o7oB}}&^78!\\JtbQm9)0(!,SJMBVWld"
										},
										{
											"key": "direction",
											"value": "OUTWARD"
										},
										{
											"key": "intermediaryBankPresent",
											"value": "<boolean>"
										},
										{
											"key": "startDate",
											"value": "<date>"
										},
										{
											"key": "name",
											"value": "a\\3^d[i]1 zE`0ShAJ_o'x_:RxIl)>F}"
										},
										{
											"description": "Describes the page number to give the records from. Default value is 1",
											"key": "page-token",
											"value": "1"
										},
										{
											"description": "Page size for the list of resources. Default value is 500. If zero (0) is passed default value is considered.",
											"key": "page-size",
											"value": "500"
										},
										{
											"description": "Name of the field to order the list to.",
											"key": "order-by",
											"value": "START_DATE"
										},
										{
											"description": "Direction for the sorting order of the list",
											"key": "order-in",
											"value": "asc"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"system\": \"<string>\",\n  \"code\": \"<string>\",\n  \"message\": \"<string>\",\n  \"params\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"applicationSpecific\": {\n    \"severity\": \"<string>\",\n    \"logref\": \"<string>\",\n    \"message\": \"<string>\",\n    \"validationErrors\": [\n      {\n        \"errorCode\": \"<string>\",\n        \"errorMessage\": \"<string>\"\n      },\n      {\n        \"errorCode\": \"<string>\",\n        \"errorMessage\": \"<string>\"\n      }\n    ],\n    \"cause\": \"<string>\",\n    \"stackTrace\": \"<string>\"\n  }\n}"
						},
						{
							"id": "27851672-7c220c62-e029-45a8-8bf8-f97bc464869f",
							"name": "List the WB Rule created in PBD.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-EVRY-DATAOWNERORGID",
										"value": "4201",
										"type": "text",
										"description": "(Required) Identifies the source sending the request. Used to separate different service consumers.\nName should identify customer (bank) and consumer 'application'. The format of the field is 'Organization name'-'Application name'.\n"
									},
									{
										"key": "x-evry-esb-usersession",
										"value": "{\"bankOrgID\": \"4201\",\"userID\": \"e220102\",\"client\": {\"ip\":\"10.10.10.10\"} }",
										"type": "text",
										"description": "(Required) Unique log reference, generated on the client, and must be unique across multiple sessions and days."
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text",
										"description": "If request origins from a mobile device, this is set to TRUE, else FALSE or not present"
									},
									{
										"key": "x-evry-esb-securitytoken",
										"value": "{\"tokenType\": \"EvrySo\", \"token\": \"03111012010400425kglPboRi3h1Q0wGJvxDnjLEmmmyjbdrfsSaabKNt2t%2BCqK3eX2EphONTCSUcmn1BsSaabKNt2t%2BxJppso23a37EmmmyjbdrfyqVfESZ%2BvdaEdNM4lOx0RzgSxAz1%2B8eEsSaabKNt2t%2FXzlyjxYnxhcG46wcbIKp%2FsSaabKNt2t9wBUG0SyIoqFfig80Gq4uXVBtimDzTiu3EfQIWD5xMfk2jSY2FGfvV26qFHJXpC08%3DRScZIBaF5rVbaSQXdfjW7qpDd%2Fx6Uv7yZLZhCUf3MZQpUdJt1NcsZDOjPzj%2FxNUr4iwU0MZPvSc40rnfiJVGhX6lz1BFMma9XVgKg5SRUqBh2Vd0hQRhPCN3LcKOZ%2B4Q6Kstjdn9Jtnmh7ILkD4X%2BB0RNu8YM7rIAPdQI5SLqyM%3D\"}",
										"type": "text",
										"description": "Defines the Signature in the request. Used in accordance with these [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/)\n"
									},
									{
										"key": "X-EVRY-ESB-CLIENTNAME",
										"value": "pen",
										"type": "text",
										"description": "Defines the Digest in the request. Used in accordance with [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/Digest),\nand is mandatory for all requests containing body.\n"
									},
									{
										"key": "X-EVRY-CLIENT-CLIENTNAME",
										"value": "pen",
										"type": "text",
										"description": "Identifies the organization, will in a banking context be the Financial Institution (Konsernnr) registered in the banking infrastructure.."
									},
									{
										"key": "X-EVRY-CLIENT-REQUESTID",
										"value": "${=java.util.UUID.randomUUID().toString()}",
										"type": "text",
										"description": "Identifies the person or system initiating the request.\nNormally this field is set equally to customerid, but should be set to the id of Employee/Agent/Retail/System if request is initiated on behalf of the customerid.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: SSN (Social Security Number) of the user\n* Branch bank employee accessing data of a customer: Logonid of the bank employee\n"
									},
									{
										"key": "content-language",
										"value": "en",
										"type": "text",
										"description": "Identifies the customer for which this request is initiated.\nShould be set equal to the SSN customer number 11 digits for private customers and the organization number 11 digits with leading zeroes for corporates.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: Organization Number (Foretaksnummer) of the corporate customer\n* Branch bank employee accessing data of a customer: SSN of the user if private customer, Organization Number (Foretaksnummer) if corporate customer\n"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text",
										"description": "If the backend soap service is requiring TietoEVRY security object (SO), the field can be set automatic on the TietoEVRY Rest-ESB,\nor the the initiating system can set this field when not integrating through Rest-ESB.\nAn automatic setting of the SO on Rest-ESB is based on an original valid authentication/signing of the request.\n"
									},
									{
										"key": "eTag",
										"value": "2",
										"type": "text",
										"description": "Contains the Security Token used to authenticate the user when logging in to the REST ESB.\nThe REST ESB forwards the Security Token in that header on all requests to the REST Services. In the first version of the REST ESB, the Security Token is an EVRY SO.\nFor clients using IDP, this field is the ID Token (For clients that require SO, a claim within the ID Token contains an SO)",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseUrl}}/wbrule?page-token=1&page-size=500&order-by=START_DATE&order-in=asc&wbRulesRequest={\"code\": \"WARNING\",\"status\": \"ACTIVE\"}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"wbrule"
									],
									"query": [
										{
											"key": "page-token",
											"value": "1"
										},
										{
											"key": "page-size",
											"value": "500"
										},
										{
											"key": "order-by",
											"value": "START_DATE"
										},
										{
											"key": "order-in",
											"value": "asc"
										},
										{
											"key": "wbRulesRequest",
											"value": "{\"code\": \"WARNING\",\"status\": \"ACTIVE\"}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Mon, 31 Jul 2023 06:13:13 GMT"
								},
								{
									"key": "X-sorp",
									"value": "e220102;4201;-;pen;http://10.246.89.245:10450/pbdsrv/api/v7;wbrule;-;${=java.util.UUID.randomUUID().toString()};-;-;false"
								},
								{
									"key": "Digest",
									"value": "SHA-256=5onLIrcSNxIBPMzpQpK8A8qS8o3K2XOQpHzu8XsCCfQ="
								},
								{
									"key": "Signature",
									"value": "keyId=\"dc2ccd1e2341ebd5cb34f007d23defe9f0605b7602e0e87a29d32252a4e23fb6\",algorithm=\"ecdsa-sha256\",headers=\"x-sorp digest date content-type\",signature=\"MEUCIEiiB0PtoDFURiS8VKrUg4FoN3LfxLMuTvCqt2j0bHxgAiEA+5SWIS8WzusflsjaYrO7YQVn4usqsjwqes+iKLDNIk4=\""
								},
								{
									"key": "Content-Length",
									"value": "7329"
								},
								{
									"key": "Server",
									"value": "Jetty(9.4.44.v20210927)"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"totalSize\": 14,\n    \"nextPageToken\": \"\",\n    \"wbRuleList\": [\n        {\n            \"pk\": 2366,\n            \"version\": 2,\n            \"wbRuleId\": 2363,\n            \"changeId\": 1200784,\n            \"isNewCreditorAccount\": false,\n            \"wbRuleIdentification\": {\n                \"code\": \"WARNING\",\n                \"showForEndUser\": true,\n                \"status\": \"ACTIVE\",\n                \"internalDescription\": \"Testaudit\"\n            },\n            \"businessArea\": \"PAYMENTS\",\n            \"startDate\": \"2021-01-11\",\n            \"sanction\": true,\n            \"minimumAmount\": 0,\n            \"validForMarket\": \"PM\",\n            \"externalDescription\": [\n                {\n                    \"language\": \"nb\",\n                    \"description\": \"Test\"\n                }\n            ]\n        },\n        {\n            \"pk\": 2423,\n            \"version\": 5,\n            \"wbRuleId\": 2368,\n            \"changeId\": 1201741,\n            \"isNewCreditorAccount\": false,\n            \"wbRuleIdentification\": {\n                \"code\": \"WARNING\",\n                \"showForEndUser\": false,\n                \"status\": \"ACTIVE\",\n                \"countryUnionCode\": \"AE\",\n                \"internalDescription\": \"Testaudit\",\n                \"direction\": \"OUTWARD\"\n            },\n            \"wbRuleType\": {\n                \"itemType\": \"CUSTOMER\",\n                \"itemValue\": \"873339616\"\n            },\n            \"businessArea\": \"PAYMENTS\",\n            \"startDate\": \"2021-03-18\",\n            \"sanction\": true,\n            \"minimumAmount\": 0,\n            \"validForMarket\": \"PM\",\n            \"externalDescription\": [\n                {\n                    \"language\": \"nb\",\n                    \"description\": \"Test\"\n                }\n            ]\n        },\n        {\n            \"pk\": 2483,\n            \"version\": 1,\n            \"wbRuleId\": 2483,\n            \"changeId\": 1203255,\n            \"isNewCreditorAccount\": false,\n            \"instructedCurrency\": true,\n            \"wbRuleIdentification\": {\n                \"code\": \"WARNING\",\n                \"showForEndUser\": false,\n                \"status\": \"ACTIVE\",\n                \"currencyCode\": \"AED\",\n                \"countryUnionCode\": \"AD\",\n                \"internalDescription\": \"Test PAP\",\n                \"direction\": \"OUTWARD\"\n            },\n            \"businessArea\": \"PAYMENTS\",\n            \"startDate\": \"2021-05-05\",\n            \"sanction\": false,\n            \"minimumAmount\": 4,\n            \"validForMarket\": \"PM\",\n            \"chargeBearer\": \"DEBT\",\n            \"paymentPriority\": \"HIGH\",\n            \"externalDescription\": [\n                {\n                    \"language\": \"nb\",\n                    \"description\": \"Test PAP\"\n                }\n            ]\n        },\n        {\n            \"pk\": 2543,\n            \"version\": 1,\n            \"wbRuleId\": 2543,\n            \"changeId\": 1203410,\n            \"isNewCreditorAccount\": false,\n            \"wbRuleIdentification\": {\n                \"code\": \"WARNING\",\n                \"showForEndUser\": true,\n                \"status\": \"ACTIVE\",\n                \"internalDescription\": \"das\",\n                \"direction\": \"INWARD\"\n            },\n            \"businessArea\": \"PAYMENTS\",\n            \"startDate\": \"2021-05-10\",\n            \"sanction\": false,\n            \"minimumAmount\": 0,\n            \"validForMarket\": \"ALL\",\n            \"externalDescription\": [\n                {\n                    \"language\": \"nb\",\n                    \"description\": \"dsa\"\n                }\n            ]\n        },\n        {\n            \"pk\": 2542,\n            \"version\": 1,\n            \"wbRuleId\": 2542,\n            \"changeId\": 1203409,\n            \"isNewCreditorAccount\": false,\n            \"wbRuleIdentification\": {\n                \"code\": \"WARNING\",\n                \"showForEndUser\": false,\n                \"status\": \"ACTIVE\",\n                \"internalDescription\": \"das\",\n                \"direction\": \"INWARD\"\n            },\n            \"businessArea\": \"PAYMENTS\",\n            \"startDate\": \"2021-05-10\",\n            \"sanction\": false,\n            \"minimumAmount\": 0,\n            \"validForMarket\": \"ALL\",\n            \"externalDescription\": [\n                {\n                    \"language\": \"nb\",\n                    \"description\": \"dsa\"\n                }\n            ]\n        },\n        {\n            \"pk\": 2559,\n            \"version\": 2,\n            \"wbRuleId\": 2558,\n            \"changeId\": 1203530,\n            \"isNewCreditorAccount\": false,\n            \"wbRuleIdentification\": {\n                \"code\": \"WARNING\",\n                \"showForEndUser\": false,\n                \"status\": \"ACTIVE\",\n                \"countryUnionCode\": \"DE\",\n                \"internalDescription\": \"Testing 123333\",\n                \"direction\": \"OUTWARD\"\n            },\n            \"businessArea\": \"PAYMENTS\",\n            \"startDate\": \"2021-05-27\",\n            \"sanction\": false,\n            \"minimumAmount\": 0,\n            \"validForMarket\": \"ALL\",\n            \"externalDescription\": [\n                {\n                    \"language\": \"nb\",\n                    \"description\": \"JKJKJGKGKU\"\n                }\n            ]\n        },\n        {\n            \"pk\": 2781,\n            \"version\": 9,\n            \"wbRuleId\": 2696,\n            \"changeId\": 1209407,\n            \"isNewCreditorAccount\": false,\n            \"instructedCurrency\": true,\n            \"wbRuleIdentification\": {\n                \"code\": \"WARNING\",\n                \"showForEndUser\": true,\n                \"status\": \"ACTIVE\",\n                \"currencyCode\": \"AED\",\n                \"countryUnionCode\": \"AE\",\n                \"internalDescription\": \"fssfsfsszss\",\n                \"direction\": \"OUTWARD\",\n                \"intermediaryBankPresent\": false\n            },\n            \"businessArea\": \"PAYMENTS\",\n            \"startDate\": \"2022-05-10\",\n            \"sanction\": false,\n            \"minimumAmount\": 33,\n            \"validForMarket\": \"PM\",\n            \"chargeBearer\": \"CRED\",\n            \"paymentPriority\": \"HIGH\",\n            \"externalDescription\": [\n                {\n                    \"language\": \"nb\",\n                    \"description\": \"dgasdggaergaerg\"\n                }\n            ]\n        },\n        {\n            \"pk\": 2784,\n            \"version\": 7,\n            \"wbRuleId\": 2655,\n            \"changeId\": 1209449,\n            \"isNewCreditorAccount\": false,\n            \"wbRuleIdentification\": {\n                \"code\": \"WARNING\",\n                \"showForEndUser\": true,\n                \"status\": \"ACTIVE\",\n                \"currencyCode\": \"NOK\",\n                \"internalDescription\": \"Nowarningrulehit\",\n                \"direction\": \"OUTWARD\",\n                \"intermediaryBankPresent\": false\n            },\n            \"wbRuleType\": {\n                \"itemType\": \"ACCOUNT\",\n                \"itemValue\": \"42022149452\"\n            },\n            \"businessArea\": \"PAYMENTS\",\n            \"startDate\": \"2022-05-11\",\n            \"sanction\": false,\n            \"minimumAmount\": 0,\n            \"validForMarket\": \"PM\",\n            \"chargeBearer\": \"CRED\",\n            \"externalDescription\": [\n                {\n                    \"language\": \"nb\",\n                    \"description\": \"dgsrgsst\"\n                }\n            ],\n            \"freeText\": \"Nowarningrule12\"\n        },\n        {\n            \"pk\": 2821,\n            \"version\": 2,\n            \"wbRuleId\": 2801,\n            \"changeId\": 1209644,\n            \"isNewCreditorAccount\": false,\n            \"wbRuleIdentification\": {\n                \"code\": \"WARNING\",\n                \"showForEndUser\": true,\n                \"status\": \"ACTIVE\",\n                \"internalDescription\": \"Warning for illegal payments\"\n            },\n            \"businessArea\": \"PAYMENTS\",\n            \"startDate\": \"2022-07-21\",\n            \"sanction\": false,\n            \"minimumAmount\": 10,\n            \"validForMarket\": \"ALL\",\n            \"externalDescription\": [\n                {\n                    \"language\": \"en_GB\",\n                    \"description\": \"Test the WnB\"\n                },\n                {\n                    \"language\": \"nb\",\n                    \"description\": \"Test_Update\"\n                }\n            ],\n            \"freeText\": \"Test WnB hit in S2\"\n        },\n        {\n            \"pk\": 2961,\n            \"version\": 11,\n            \"wbRuleId\": 2575,\n            \"changeId\": 1213746,\n            \"isNewCreditorAccount\": true,\n            \"futureValueDate\": true,\n            \"bicAndNationalIdValidate\": true,\n            \"instructedCurrency\": true,\n            \"wbRuleIdentification\": {\n                \"code\": \"WARNING\",\n                \"showForEndUser\": true,\n                \"status\": \"ACTIVE\",\n                \"currencyCode\": \"CAD\",\n                \"countryUnionCode\": \"AD\",\n                \"internalDescription\": \"Regression_4.2.0_Verifier\",\n                \"direction\": \"BTB\",\n                \"intermediaryBankPresent\": false\n            },\n            \"wbRuleType\": {\n                \"itemType\": \"BANK\",\n                \"itemValue\": \"VENR\"\n            },\n            \"businessArea\": \"PAYMENTS\",\n            \"bicIndicator\": \"4\",\n            \"startDate\": \"2023-05-25\",\n            \"sanction\": false,\n            \"minimumAmount\": 10,\n            \"validForMarket\": \"PM\",\n            \"chargeBearer\": \"SLEV\",\n            \"paymentPriority\": \"HIGH\",\n            \"paymentMethod\": \"SERIAL\",\n            \"externalDescription\": [\n                {\n                    \"language\": \"nb\",\n                    \"description\": \"External Regression_4.2.0\"\n                }\n            ],\n            \"name\": \"Regression_4.2.0\",\n            \"freeText\": \"Regression Free Text\"\n        },\n        {\n            \"pk\": 3070,\n            \"version\": 1,\n            \"wbRuleId\": 3070,\n            \"changeId\": 1213882,\n            \"isNewCreditorAccount\": true,\n            \"bicAndNationalIdValidate\": true,\n            \"instructedCurrency\": true,\n            \"wbRuleIdentification\": {\n                \"code\": \"WARNING\",\n                \"showForEndUser\": true,\n                \"status\": \"ACTIVE\",\n                \"countryUnionCode\": \"NO\",\n                \"internalDescription\": \"Internal Description testfdfdf\",\n                \"intermediaryBankPresent\": true\n            },\n            \"wbRuleType\": {\n                \"itemType\": \"ACCOUNT\",\n                \"itemValue\": \"42120248361\"\n            },\n            \"businessArea\": \"PAYMENTS\",\n            \"startDate\": \"2023-06-05\",\n            \"sanction\": false,\n            \"minimumAmount\": 0,\n            \"validForMarket\": \"PM\",\n            \"chargeBearer\": \"DEBT\",\n            \"paymentPriority\": \"NORMAL\",\n            \"paymentMethod\": \"SERIAL\",\n            \"externalDescription\": [\n                {\n                    \"language\": \"nb\",\n                    \"description\": \"efeedfdf\"\n                }\n            ],\n            \"name\": \"rtyu\",\n            \"freeText\": \"gfvfvfvfd\"\n        },\n        {\n            \"pk\": 3114,\n            \"version\": 3,\n            \"wbRuleId\": 3114,\n            \"changeId\": 1213924,\n            \"isNewCreditorAccount\": false,\n            \"wbRuleIdentification\": {\n                \"code\": \"WARNING\",\n                \"showForEndUser\": true,\n                \"status\": \"ACTIVE\",\n                \"countryUnionCode\": \"AF\",\n                \"internalDescription\": \"testing read\",\n                \"direction\": \"BTB\"\n            },\n            \"businessArea\": \"PAYMENTS\",\n            \"startDate\": \"2023-06-08\",\n            \"sanction\": true,\n            \"minimumAmount\": 12,\n            \"validForMarket\": \"PM\",\n            \"externalDescription\": [\n                {\n                    \"language\": \"da_DK\",\n                    \"description\": \"test\"\n                },\n                {\n                    \"language\": \"nb\",\n                    \"description\": \"testing read\"\n                }\n            ]\n        },\n        {\n            \"pk\": 3109,\n            \"version\": 3,\n            \"wbRuleId\": 3107,\n            \"changeId\": 1213910,\n            \"isNewCreditorAccount\": false,\n            \"bicAndNationalIdValidate\": true,\n            \"instructedCurrency\": true,\n            \"wbRuleIdentification\": {\n                \"code\": \"WARNING\",\n                \"showForEndUser\": true,\n                \"status\": \"ACTIVE\",\n                \"countryUnionCode\": \"NO\",\n                \"internalDescription\": \"testing read operation\",\n                \"intermediaryBankPresent\": true\n            },\n            \"wbRuleType\": {\n                \"itemType\": \"ACCOUNT\",\n                \"itemValue\": \"42120248361\"\n            },\n            \"businessArea\": \"PAYMENTS\",\n            \"startDate\": \"2023-06-08\",\n            \"sanction\": false,\n            \"minimumAmount\": 0,\n            \"validForMarket\": \"PM\",\n            \"chargeBearer\": \"DEBT\",\n            \"paymentPriority\": \"NORMAL\",\n            \"paymentMethod\": \"SERIAL\",\n            \"externalDescription\": [\n                {\n                    \"language\": \"nb\",\n                    \"description\": \"efeedfdf\"\n                }\n            ],\n            \"name\": \"rtyu\",\n            \"freeText\": \"gfvfvfvfd\"\n        },\n        {\n            \"pk\": 3113,\n            \"version\": 1,\n            \"wbRuleId\": 3113,\n            \"changeId\": 1213922,\n            \"isNewCreditorAccount\": false,\n            \"wbRuleIdentification\": {\n                \"code\": \"WARNING\",\n                \"showForEndUser\": true,\n                \"status\": \"ACTIVE\",\n                \"countryUnionCode\": \"AE\",\n                \"internalDescription\": \"testing read\"\n            },\n            \"businessArea\": \"PAYMENTS\",\n            \"startDate\": \"2023-06-09\",\n            \"sanction\": false,\n            \"minimumAmount\": 1,\n            \"validForMarket\": \"PM\",\n            \"externalDescription\": [\n                {\n                    \"language\": \"sv_SE\",\n                    \"description\": \"test\"\n                },\n                {\n                    \"language\": \"nb\",\n                    \"description\": \"test\"\n                }\n            ]\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Update a WB Rule record",
					"id": "27851672-957f4a09-5db4-4d3e-993d-67eddc701001",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-EVRY-DATAOWNERORGID",
								"value": "2544",
								"type": "text"
							},
							{
								"key": "x-evry-esb-usersession",
								"value": "{\"bankOrgID\": \"2544\",\"userID\": \"e211732\",\"client\": {\"ip\":\"10.10.10.10\"} }",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-evry-esb-securitytoken",
								"value": "{\"tokenType\": \"EvrySo\", \"token\": \"031110130104004250tu4YEEzPmBtrqnqspzaepmTJZQe+Fzz/RASphHZEo9Vo+zq0WRhPZ/P3hY9BTDejrSIpQnXuqKD/MjoNuGS8aWdNgXcNZ2RGWHRkYuvnsIrYeXKOfedSMwmatJhapUwPyX8iewyOYA19Dp2kOEGSVw9t5XJ2AbQIeuh+FQuo761gSbV8PL7TnEYVTVAJx4r68CQtGWcP1JJdSy2emkS38S6ttlfi7iwnCXHKCgpcD4=BMXnzOdeS3D1Bk6/WLYAl0TzOWUURQsuHC1sDTBI6WrUuZGxarwody3bqyclX/PBogtQYRz/M3QH4AJoE00SLjK/s2scr0Xk33Povkq3HeUO1JkBHeQ5PtNdb4MEZMDCEtBeUWSgzlLLhNCC8C7IGwzCFrw6PpeeB1pMB1weC3w=\"}",
								"type": "text"
							},
							{
								"key": "X-EVRY-ESB-CLIENTNAME",
								"value": "pen",
								"type": "text"
							},
							{
								"key": "X-EVRY-CLIENT-CLIENTNAME",
								"value": "pen",
								"type": "text"
							},
							{
								"key": "X-EVRY-CLIENT-REQUESTID",
								"value": "${=java.util.UUID.randomUUID().toString()}",
								"type": "text"
							},
							{
								"key": "content-language",
								"value": "en",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "eTag",
								"value": "2",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"pk\": 6674,\n    \"version\": 10,\n    \"wbRuleId\": 6143,\n    \"changeId\": 39320,\n    \"isNewCreditorAccount\": false,\n    \"wbRuleIdentification\": {\n        \"code\": \"WARNING\",\n        \"showForEndUser\": true,\n        \"status\": \"ACTIVE\",\n        \"internalDescription\": \"Warning\",\n        \"direction\": \"OUTWARD\"\n    },\n    \"businessArea\": \"PAYMENTS\",\n    \"startDate\": \"2025-03-21\",\n    \"sanction\": false,\n    \"minimumAmount\": 0.1,\n    \"validForMarket\": \"PM\",\n    \"chargeBearer\": \"DEBT\",\n    \"externalDescription\": [\n        {\n            \"language\": \"nb\",\n            \"description\": \"Warning\"\n        },\n        {\n            \"language\": \"en-US\",\n            \"description\": \"Warning\"\n        }\n    ]\n\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://10.246.89.103:20891/pbdsrv/api/v7/wbrule",
							"protocol": "http",
							"host": [
								"10",
								"246",
								"89",
								"103"
							],
							"port": "20891",
							"path": [
								"pbdsrv",
								"api",
								"v7",
								"wbrule"
							]
						},
						"description": "Endpoint to update a WB Rule for a particular bank.<br>\nA complete WB Rule schema is expected along with the proposed the changes.<br>\nThis endpoint is access restricted."
					},
					"response": [
						{
							"id": "27851672-cbdb3aad-180b-4d97-b173-2ba292d72b83",
							"name": "OK - Successfully updated the WB Rule.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "An entity-tag is an opaque validator for differentiating between multiple representations of the same resource,\nregardless of whether those multiple representations are due to resource state changes over time,\ncontent negotiation resulting in multiple representations being valid at the same time, or both.",
										"key": "ETag",
										"value": "<string>"
									},
									{
										"description": "(Required) Identifies the source sending the request. Used to separate different service consumers.\nName should identify customer (bank) and consumer 'application'. The format of the field is 'Organization name'-'Application name'.\n",
										"key": "X-EVRY-CLIENT-CLIENTNAME",
										"value": "<string>"
									},
									{
										"description": "(Required) Unique log reference, generated on the client, and must be unique across multiple sessions and days.",
										"key": "X-EVRY-CLIENT-REQUESTID",
										"value": "<string>"
									},
									{
										"description": "If request origins from a mobile device, this is set to TRUE, else FALSE or not present",
										"key": "X-EVRY-CLIENT-ISMOBILE",
										"value": "<string>"
									},
									{
										"description": "Defines the Signature in the request. Used in accordance with these [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/)\n",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "Defines the Digest in the request. Used in accordance with [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/Digest),\nand is mandatory for all requests containing body.\n",
										"key": "Digest",
										"value": "<string>"
									},
									{
										"description": "Identifies the organization, will in a banking context be the Financial Institution (Konsernnr) registered in the banking infrastructure..",
										"key": "X-EVRY-DATAOWNERORGID",
										"value": "<string>"
									},
									{
										"description": "Identifies the person or system initiating the request.\nNormally this field is set equally to customerid, but should be set to the id of Employee/Agent/Retail/System if request is initiated on behalf of the customerid.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: SSN (Social Security Number) of the user\n* Branch bank employee accessing data of a customer: Logonid of the bank employee\n",
										"key": "X-EVRY-USERID",
										"value": "<string>"
									},
									{
										"description": "Identifies the customer for which this request is initiated.\nShould be set equal to the SSN customer number 11 digits for private customers and the organization number 11 digits with leading zeroes for corporates.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: Organization Number (Foretaksnummer) of the corporate customer\n* Branch bank employee accessing data of a customer: SSN of the user if private customer, Organization Number (Foretaksnummer) if corporate customer\n",
										"key": "X-EVRY-CUSTOMERID",
										"value": "<string>"
									},
									{
										"description": "If the backend soap service is requiring TietoEVRY security object (SO), the field can be set automatic on the TietoEVRY Rest-ESB,\nor the the initiating system can set this field when not integrating through Rest-ESB.\nAn automatic setting of the SO on Rest-ESB is based on an original valid authentication/signing of the request.\n",
										"key": "X-EVRY-SO",
										"value": "<string>"
									},
									{
										"description": "Contains the Security Token used to authenticate the user when logging in to the REST ESB.\nThe REST ESB forwards the Security Token in that header on all requests to the REST Services. In the first version of the REST ESB, the Security Token is an EVRY SO.\nFor clients using IDP, this field is the ID Token (For clients that require SO, a claim within the ID Token contains an SO)",
										"key": "X-EVRY-ESB-SECURITYTOKEN",
										"value": "<string>"
									},
									{
										"description": "Hold the information about user like authentication level ,user Id,organisation ID",
										"key": "X-EVRY-ESB-USERSESSION",
										"value": "<string>"
									},
									{
										"description": "Client ip-address or dns-address from the machine sending the request. Used to separate requests from different physical machines.",
										"key": "X-EVRY-USER-IPADDRESS",
										"value": "<string>"
									},
									{
										"description": "Used to differentiate business logic based on which channel was the origin of the request.\nThe parameter should be set in selfservice use cases, and when a branch officer acts on behalf of the customer.\nValid values are:\n* INT = Online banking from Internet Bank\n* MOB = Online banking from Mobile Bank\n* WAP = Online banking from legacy WAP Mobile Bank\n* SMS = Online banking from SMS Bank\n* TLF = Online banking from Phone Bank\n* ITR = Online banking from office client\n* CEN = Online banking from Charge Engine\n* COR = Online banking from Core\n* BAX = Online banking from Bank Axess\n* BES = Online banking from Corporate Bank\n* OPB = Online banking from Open Banking Parties\n* PSD = Online banking from PSD2 Parties\n* SMW = Online banking from Smart Wealth\n* SPA = Online banking from Saving",
										"key": "X-EVRY-CHANNEL",
										"value": "TLF"
									},
									{
										"description": "Standard HTTP Accept Language. Can be used if textual information from the business systems should deviate from the default language for the organisation.\n",
										"key": "Accept-Language",
										"value": "<string>"
									},
									{
										"description": "Defines the Orgid that the X-EVRY-USERID belongs to.",
										"key": "X-EVRY-USERORGID",
										"value": "<string>"
									},
									{
										"description": "Contains the name of the Client JS Application stored on the user session. The REST ESB forwards the Client JS Application name in that header on all requests to the REST Services",
										"key": "X-EVRY-ESB-CLIENTNAME",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"isNewCreditorAccount\": \"<boolean>\",\n  \"pk\": \"<long>\",\n  \"version\": \"<long>\",\n  \"wbRuleId\": \"<long>\",\n  \"changeId\": \"<long>\",\n  \"futureValueDate\": \"<boolean>\",\n  \"bicAndNationalIdValidate\": \"<boolean>\",\n  \"instructedCurrency\": \"<boolean>\",\n  \"wbRuleIdentification\": {\n    \"code\": \"BLOCKING\",\n    \"showForEndUser\": \"<boolean>\",\n    \"status\": \"INACTIVE\",\n    \"currencyCode\": \"ODV\",\n    \"countryUnionCode\": \"QS\",\n    \"internalDescription\": \"e.*=W*@@zdvjHRkR2cjzML_o+,L6RD%++AHS}gDbp,gb#+k_BR,i-{FO7`gDc7(l //JN7,(cL%CVi=F~gaHLw0.1K>gW[w}D)].\",\n    \"direction\": \"BTB\",\n    \"intermediaryBankPresent\": \"<boolean>\",\n    \"startDate\": \"<date>\",\n    \"name\": \"zhDot `P+(hnIsk`G`6,6KKG-Zo-+ZBtzj7<X1w4Fj]SV|w/L -W1$lUT YXnm8\\\"?HgOMzlDl|^p3\\\"M9RYA_1~;1/AMZq_2E\"\n  },\n  \"wbRuleType\": {\n    \"itemType\": \"BANK\",\n    \"itemValue\": \"9*`YD08oP*>db<JQDX<4&<:tl6=$toQv\"\n  },\n  \"businessArea\": \"CHEQUES\",\n  \"bicIndicator\": \"4\",\n  \"startDate\": \"<date>\",\n  \"endDate\": \"<date>\",\n  \"sanction\": \"<boolean>\",\n  \"minimumAmount\": \"<number>\",\n  \"validForMarket\": \"PM\",\n  \"chargeBearer\": \"SLEV\",\n  \"paymentPriority\": \"HIGH\",\n  \"paymentMethod\": \"COVER\",\n  \"externalDescription\": [\n    {\n      \"description\": \"`FC,uXm%5tR0W9Q`Ve@#a5;5 *kqd({SNpLU;_='^}Yq#t/G@DTzY)\",\n      \"language\": \"BM\"\n    },\n    {\n      \"description\": \"%B;dctp.}ew\",\n      \"language\": \"yVVb\"\n    }\n  ],\n  \"customerName\": \"<string>\",\n  \"name\": \"F,\\\\pyao$wi5Rf8r#ojy!(Q&]p@r@#t.^fWRj_{Nd1jNI1AtSz))S>j~P-t]21 2q9zR_ZBUs5b[UUPTcugG4v{CDNBjHa99}^_>[;zC;fa7)CY^iIw.s0Z}_$)\",\n  \"freeText\": \"W gFo37TI]<KEx1WehU#j'/gy9uZg\\\"=hB^a&VKwXbecwL@8aE^M6RN+&}\\\\5x59AaKlNtbplG@Pt1ll\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/wbrule",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"wbrule"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "Defines the ETag value of this record.",
										"type": "text/plain"
									},
									"key": "ETag",
									"value": "<string>"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"isNewCreditorAccount\": \"<boolean>\",\n  \"pk\": \"<long>\",\n  \"version\": \"<long>\",\n  \"wbRuleId\": \"<long>\",\n  \"changeId\": \"<long>\",\n  \"futureValueDate\": \"<boolean>\",\n  \"bicAndNationalIdValidate\": \"<boolean>\",\n  \"instructedCurrency\": \"<boolean>\",\n  \"wbRuleIdentification\": {\n    \"code\": \"BLOCKING\",\n    \"showForEndUser\": \"<boolean>\",\n    \"status\": \"INACTIVE\",\n    \"currencyCode\": \"ODV\",\n    \"countryUnionCode\": \"QS\",\n    \"internalDescription\": \"e.*=W*@@zdvjHRkR2cjzML_o+,L6RD%++AHS}gDbp,gb#+k_BR,i-{FO7`gDc7(l //JN7,(cL%CVi=F~gaHLw0.1K>gW[w}D)].\",\n    \"direction\": \"BTB\",\n    \"intermediaryBankPresent\": \"<boolean>\",\n    \"startDate\": \"<date>\",\n    \"name\": \"zhDot `P+(hnIsk`G`6,6KKG-Zo-+ZBtzj7<X1w4Fj]SV|w/L -W1$lUT YXnm8\\\"?HgOMzlDl|^p3\\\"M9RYA_1~;1/AMZq_2E\"\n  },\n  \"wbRuleType\": {\n    \"itemType\": \"BANK\",\n    \"itemValue\": \"9*`YD08oP*>db<JQDX<4&<:tl6=$toQv\"\n  },\n  \"businessArea\": \"CHEQUES\",\n  \"bicIndicator\": \"4\",\n  \"startDate\": \"<date>\",\n  \"endDate\": \"<date>\",\n  \"sanction\": \"<boolean>\",\n  \"minimumAmount\": \"<number>\",\n  \"validForMarket\": \"PM\",\n  \"chargeBearer\": \"SLEV\",\n  \"paymentPriority\": \"HIGH\",\n  \"paymentMethod\": \"COVER\",\n  \"externalDescription\": [\n    {\n      \"description\": \"`FC,uXm%5tR0W9Q`Ve@#a5;5 *kqd({SNpLU;_='^}Yq#t/G@DTzY)\",\n      \"language\": \"BM\"\n    },\n    {\n      \"description\": \"%B;dctp.}ew\",\n      \"language\": \"yVVb\"\n    }\n  ],\n  \"customerName\": \"<string>\",\n  \"name\": \"F,\\\\pyao$wi5Rf8r#ojy!(Q&]p@r@#t.^fWRj_{Nd1jNI1AtSz))S>j~P-t]21 2q9zR_ZBUs5b[UUPTcugG4v{CDNBjHa99}^_>[;zC;fa7)CY^iIw.s0Z}_$)\",\n  \"freeText\": \"W gFo37TI]<KEx1WehU#j'/gy9uZg\\\"=hB^a&VKwXbecwL@8aE^M6RN+&}\\\\5x59AaKlNtbplG@Pt1ll\"\n}"
						},
						{
							"id": "27851672-96ffc597-35bb-4788-bb57-2bf4347349ff",
							"name": "Bad Request - If missing or badly formed parameters",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "An entity-tag is an opaque validator for differentiating between multiple representations of the same resource,\nregardless of whether those multiple representations are due to resource state changes over time,\ncontent negotiation resulting in multiple representations being valid at the same time, or both.",
										"key": "ETag",
										"value": "<string>"
									},
									{
										"description": "(Required) Identifies the source sending the request. Used to separate different service consumers.\nName should identify customer (bank) and consumer 'application'. The format of the field is 'Organization name'-'Application name'.\n",
										"key": "X-EVRY-CLIENT-CLIENTNAME",
										"value": "<string>"
									},
									{
										"description": "(Required) Unique log reference, generated on the client, and must be unique across multiple sessions and days.",
										"key": "X-EVRY-CLIENT-REQUESTID",
										"value": "<string>"
									},
									{
										"description": "If request origins from a mobile device, this is set to TRUE, else FALSE or not present",
										"key": "X-EVRY-CLIENT-ISMOBILE",
										"value": "<string>"
									},
									{
										"description": "Defines the Signature in the request. Used in accordance with these [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/)\n",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "Defines the Digest in the request. Used in accordance with [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/Digest),\nand is mandatory for all requests containing body.\n",
										"key": "Digest",
										"value": "<string>"
									},
									{
										"description": "Identifies the organization, will in a banking context be the Financial Institution (Konsernnr) registered in the banking infrastructure..",
										"key": "X-EVRY-DATAOWNERORGID",
										"value": "<string>"
									},
									{
										"description": "Identifies the person or system initiating the request.\nNormally this field is set equally to customerid, but should be set to the id of Employee/Agent/Retail/System if request is initiated on behalf of the customerid.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: SSN (Social Security Number) of the user\n* Branch bank employee accessing data of a customer: Logonid of the bank employee\n",
										"key": "X-EVRY-USERID",
										"value": "<string>"
									},
									{
										"description": "Identifies the customer for which this request is initiated.\nShould be set equal to the SSN customer number 11 digits for private customers and the organization number 11 digits with leading zeroes for corporates.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: Organization Number (Foretaksnummer) of the corporate customer\n* Branch bank employee accessing data of a customer: SSN of the user if private customer, Organization Number (Foretaksnummer) if corporate customer\n",
										"key": "X-EVRY-CUSTOMERID",
										"value": "<string>"
									},
									{
										"description": "If the backend soap service is requiring TietoEVRY security object (SO), the field can be set automatic on the TietoEVRY Rest-ESB,\nor the the initiating system can set this field when not integrating through Rest-ESB.\nAn automatic setting of the SO on Rest-ESB is based on an original valid authentication/signing of the request.\n",
										"key": "X-EVRY-SO",
										"value": "<string>"
									},
									{
										"description": "Contains the Security Token used to authenticate the user when logging in to the REST ESB.\nThe REST ESB forwards the Security Token in that header on all requests to the REST Services. In the first version of the REST ESB, the Security Token is an EVRY SO.\nFor clients using IDP, this field is the ID Token (For clients that require SO, a claim within the ID Token contains an SO)",
										"key": "X-EVRY-ESB-SECURITYTOKEN",
										"value": "<string>"
									},
									{
										"description": "Hold the information about user like authentication level ,user Id,organisation ID",
										"key": "X-EVRY-ESB-USERSESSION",
										"value": "<string>"
									},
									{
										"description": "Client ip-address or dns-address from the machine sending the request. Used to separate requests from different physical machines.",
										"key": "X-EVRY-USER-IPADDRESS",
										"value": "<string>"
									},
									{
										"description": "Used to differentiate business logic based on which channel was the origin of the request.\nThe parameter should be set in selfservice use cases, and when a branch officer acts on behalf of the customer.\nValid values are:\n* INT = Online banking from Internet Bank\n* MOB = Online banking from Mobile Bank\n* WAP = Online banking from legacy WAP Mobile Bank\n* SMS = Online banking from SMS Bank\n* TLF = Online banking from Phone Bank\n* ITR = Online banking from office client\n* CEN = Online banking from Charge Engine\n* COR = Online banking from Core\n* BAX = Online banking from Bank Axess\n* BES = Online banking from Corporate Bank\n* OPB = Online banking from Open Banking Parties\n* PSD = Online banking from PSD2 Parties\n* SMW = Online banking from Smart Wealth\n* SPA = Online banking from Saving",
										"key": "X-EVRY-CHANNEL",
										"value": "TLF"
									},
									{
										"description": "Standard HTTP Accept Language. Can be used if textual information from the business systems should deviate from the default language for the organisation.\n",
										"key": "Accept-Language",
										"value": "<string>"
									},
									{
										"description": "Defines the Orgid that the X-EVRY-USERID belongs to.",
										"key": "X-EVRY-USERORGID",
										"value": "<string>"
									},
									{
										"description": "Contains the name of the Client JS Application stored on the user session. The REST ESB forwards the Client JS Application name in that header on all requests to the REST Services",
										"key": "X-EVRY-ESB-CLIENTNAME",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"isNewCreditorAccount\": \"<boolean>\",\n  \"pk\": \"<long>\",\n  \"version\": \"<long>\",\n  \"wbRuleId\": \"<long>\",\n  \"changeId\": \"<long>\",\n  \"futureValueDate\": \"<boolean>\",\n  \"bicAndNationalIdValidate\": \"<boolean>\",\n  \"instructedCurrency\": \"<boolean>\",\n  \"wbRuleIdentification\": {\n    \"code\": \"BLOCKING\",\n    \"showForEndUser\": \"<boolean>\",\n    \"status\": \"INACTIVE\",\n    \"currencyCode\": \"ODV\",\n    \"countryUnionCode\": \"QS\",\n    \"internalDescription\": \"e.*=W*@@zdvjHRkR2cjzML_o+,L6RD%++AHS}gDbp,gb#+k_BR,i-{FO7`gDc7(l //JN7,(cL%CVi=F~gaHLw0.1K>gW[w}D)].\",\n    \"direction\": \"BTB\",\n    \"intermediaryBankPresent\": \"<boolean>\",\n    \"startDate\": \"<date>\",\n    \"name\": \"zhDot `P+(hnIsk`G`6,6KKG-Zo-+ZBtzj7<X1w4Fj]SV|w/L -W1$lUT YXnm8\\\"?HgOMzlDl|^p3\\\"M9RYA_1~;1/AMZq_2E\"\n  },\n  \"wbRuleType\": {\n    \"itemType\": \"BANK\",\n    \"itemValue\": \"9*`YD08oP*>db<JQDX<4&<:tl6=$toQv\"\n  },\n  \"businessArea\": \"CHEQUES\",\n  \"bicIndicator\": \"4\",\n  \"startDate\": \"<date>\",\n  \"endDate\": \"<date>\",\n  \"sanction\": \"<boolean>\",\n  \"minimumAmount\": \"<number>\",\n  \"validForMarket\": \"PM\",\n  \"chargeBearer\": \"SLEV\",\n  \"paymentPriority\": \"HIGH\",\n  \"paymentMethod\": \"COVER\",\n  \"externalDescription\": [\n    {\n      \"description\": \"`FC,uXm%5tR0W9Q`Ve@#a5;5 *kqd({SNpLU;_='^}Yq#t/G@DTzY)\",\n      \"language\": \"BM\"\n    },\n    {\n      \"description\": \"%B;dctp.}ew\",\n      \"language\": \"yVVb\"\n    }\n  ],\n  \"customerName\": \"<string>\",\n  \"name\": \"F,\\\\pyao$wi5Rf8r#ojy!(Q&]p@r@#t.^fWRj_{Nd1jNI1AtSz))S>j~P-t]21 2q9zR_ZBUs5b[UUPTcugG4v{CDNBjHa99}^_>[;zC;fa7)CY^iIw.s0Z}_$)\",\n  \"freeText\": \"W gFo37TI]<KEx1WehU#j'/gy9uZg\\\"=hB^a&VKwXbecwL@8aE^M6RN+&}\\\\5x59AaKlNtbplG@Pt1ll\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/wbrule",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"wbrule"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"system\": \"<string>\",\n  \"code\": \"<string>\",\n  \"message\": \"<string>\",\n  \"params\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"applicationSpecific\": {\n    \"severity\": \"<string>\",\n    \"logref\": \"<string>\",\n    \"message\": \"<string>\",\n    \"validationErrors\": [\n      {\n        \"errorCode\": \"<string>\",\n        \"errorMessage\": \"<string>\"\n      },\n      {\n        \"errorCode\": \"<string>\",\n        \"errorMessage\": \"<string>\"\n      }\n    ],\n    \"cause\": \"<string>\",\n    \"stackTrace\": \"<string>\"\n  }\n}"
						},
						{
							"id": "27851672-b67639c4-4dc3-42e8-9e4e-c38ad4dab04b",
							"name": "Unauthorized - In case user not authenticated",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "An entity-tag is an opaque validator for differentiating between multiple representations of the same resource,\nregardless of whether those multiple representations are due to resource state changes over time,\ncontent negotiation resulting in multiple representations being valid at the same time, or both.",
										"key": "ETag",
										"value": "<string>"
									},
									{
										"description": "(Required) Identifies the source sending the request. Used to separate different service consumers.\nName should identify customer (bank) and consumer 'application'. The format of the field is 'Organization name'-'Application name'.\n",
										"key": "X-EVRY-CLIENT-CLIENTNAME",
										"value": "<string>"
									},
									{
										"description": "(Required) Unique log reference, generated on the client, and must be unique across multiple sessions and days.",
										"key": "X-EVRY-CLIENT-REQUESTID",
										"value": "<string>"
									},
									{
										"description": "If request origins from a mobile device, this is set to TRUE, else FALSE or not present",
										"key": "X-EVRY-CLIENT-ISMOBILE",
										"value": "<string>"
									},
									{
										"description": "Defines the Signature in the request. Used in accordance with these [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/)\n",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "Defines the Digest in the request. Used in accordance with [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/Digest),\nand is mandatory for all requests containing body.\n",
										"key": "Digest",
										"value": "<string>"
									},
									{
										"description": "Identifies the organization, will in a banking context be the Financial Institution (Konsernnr) registered in the banking infrastructure..",
										"key": "X-EVRY-DATAOWNERORGID",
										"value": "<string>"
									},
									{
										"description": "Identifies the person or system initiating the request.\nNormally this field is set equally to customerid, but should be set to the id of Employee/Agent/Retail/System if request is initiated on behalf of the customerid.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: SSN (Social Security Number) of the user\n* Branch bank employee accessing data of a customer: Logonid of the bank employee\n",
										"key": "X-EVRY-USERID",
										"value": "<string>"
									},
									{
										"description": "Identifies the customer for which this request is initiated.\nShould be set equal to the SSN customer number 11 digits for private customers and the organization number 11 digits with leading zeroes for corporates.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: Organization Number (Foretaksnummer) of the corporate customer\n* Branch bank employee accessing data of a customer: SSN of the user if private customer, Organization Number (Foretaksnummer) if corporate customer\n",
										"key": "X-EVRY-CUSTOMERID",
										"value": "<string>"
									},
									{
										"description": "If the backend soap service is requiring TietoEVRY security object (SO), the field can be set automatic on the TietoEVRY Rest-ESB,\nor the the initiating system can set this field when not integrating through Rest-ESB.\nAn automatic setting of the SO on Rest-ESB is based on an original valid authentication/signing of the request.\n",
										"key": "X-EVRY-SO",
										"value": "<string>"
									},
									{
										"description": "Contains the Security Token used to authenticate the user when logging in to the REST ESB.\nThe REST ESB forwards the Security Token in that header on all requests to the REST Services. In the first version of the REST ESB, the Security Token is an EVRY SO.\nFor clients using IDP, this field is the ID Token (For clients that require SO, a claim within the ID Token contains an SO)",
										"key": "X-EVRY-ESB-SECURITYTOKEN",
										"value": "<string>"
									},
									{
										"description": "Hold the information about user like authentication level ,user Id,organisation ID",
										"key": "X-EVRY-ESB-USERSESSION",
										"value": "<string>"
									},
									{
										"description": "Client ip-address or dns-address from the machine sending the request. Used to separate requests from different physical machines.",
										"key": "X-EVRY-USER-IPADDRESS",
										"value": "<string>"
									},
									{
										"description": "Used to differentiate business logic based on which channel was the origin of the request.\nThe parameter should be set in selfservice use cases, and when a branch officer acts on behalf of the customer.\nValid values are:\n* INT = Online banking from Internet Bank\n* MOB = Online banking from Mobile Bank\n* WAP = Online banking from legacy WAP Mobile Bank\n* SMS = Online banking from SMS Bank\n* TLF = Online banking from Phone Bank\n* ITR = Online banking from office client\n* CEN = Online banking from Charge Engine\n* COR = Online banking from Core\n* BAX = Online banking from Bank Axess\n* BES = Online banking from Corporate Bank\n* OPB = Online banking from Open Banking Parties\n* PSD = Online banking from PSD2 Parties\n* SMW = Online banking from Smart Wealth\n* SPA = Online banking from Saving",
										"key": "X-EVRY-CHANNEL",
										"value": "TLF"
									},
									{
										"description": "Standard HTTP Accept Language. Can be used if textual information from the business systems should deviate from the default language for the organisation.\n",
										"key": "Accept-Language",
										"value": "<string>"
									},
									{
										"description": "Defines the Orgid that the X-EVRY-USERID belongs to.",
										"key": "X-EVRY-USERORGID",
										"value": "<string>"
									},
									{
										"description": "Contains the name of the Client JS Application stored on the user session. The REST ESB forwards the Client JS Application name in that header on all requests to the REST Services",
										"key": "X-EVRY-ESB-CLIENTNAME",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"isNewCreditorAccount\": \"<boolean>\",\n  \"pk\": \"<long>\",\n  \"version\": \"<long>\",\n  \"wbRuleId\": \"<long>\",\n  \"changeId\": \"<long>\",\n  \"futureValueDate\": \"<boolean>\",\n  \"bicAndNationalIdValidate\": \"<boolean>\",\n  \"instructedCurrency\": \"<boolean>\",\n  \"wbRuleIdentification\": {\n    \"code\": \"BLOCKING\",\n    \"showForEndUser\": \"<boolean>\",\n    \"status\": \"INACTIVE\",\n    \"currencyCode\": \"ODV\",\n    \"countryUnionCode\": \"QS\",\n    \"internalDescription\": \"e.*=W*@@zdvjHRkR2cjzML_o+,L6RD%++AHS}gDbp,gb#+k_BR,i-{FO7`gDc7(l //JN7,(cL%CVi=F~gaHLw0.1K>gW[w}D)].\",\n    \"direction\": \"BTB\",\n    \"intermediaryBankPresent\": \"<boolean>\",\n    \"startDate\": \"<date>\",\n    \"name\": \"zhDot `P+(hnIsk`G`6,6KKG-Zo-+ZBtzj7<X1w4Fj]SV|w/L -W1$lUT YXnm8\\\"?HgOMzlDl|^p3\\\"M9RYA_1~;1/AMZq_2E\"\n  },\n  \"wbRuleType\": {\n    \"itemType\": \"BANK\",\n    \"itemValue\": \"9*`YD08oP*>db<JQDX<4&<:tl6=$toQv\"\n  },\n  \"businessArea\": \"CHEQUES\",\n  \"bicIndicator\": \"4\",\n  \"startDate\": \"<date>\",\n  \"endDate\": \"<date>\",\n  \"sanction\": \"<boolean>\",\n  \"minimumAmount\": \"<number>\",\n  \"validForMarket\": \"PM\",\n  \"chargeBearer\": \"SLEV\",\n  \"paymentPriority\": \"HIGH\",\n  \"paymentMethod\": \"COVER\",\n  \"externalDescription\": [\n    {\n      \"description\": \"`FC,uXm%5tR0W9Q`Ve@#a5;5 *kqd({SNpLU;_='^}Yq#t/G@DTzY)\",\n      \"language\": \"BM\"\n    },\n    {\n      \"description\": \"%B;dctp.}ew\",\n      \"language\": \"yVVb\"\n    }\n  ],\n  \"customerName\": \"<string>\",\n  \"name\": \"F,\\\\pyao$wi5Rf8r#ojy!(Q&]p@r@#t.^fWRj_{Nd1jNI1AtSz))S>j~P-t]21 2q9zR_ZBUs5b[UUPTcugG4v{CDNBjHa99}^_>[;zC;fa7)CY^iIw.s0Z}_$)\",\n  \"freeText\": \"W gFo37TI]<KEx1WehU#j'/gy9uZg\\\"=hB^a&VKwXbecwL@8aE^M6RN+&}\\\\5x59AaKlNtbplG@Pt1ll\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/wbrule",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"wbrule"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"responseTime": null,
							"body": ""
						},
						{
							"id": "27851672-2be371ee-d049-4074-8eeb-3429bd62df0f",
							"name": "Forbidden - In case user not authorized",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "An entity-tag is an opaque validator for differentiating between multiple representations of the same resource,\nregardless of whether those multiple representations are due to resource state changes over time,\ncontent negotiation resulting in multiple representations being valid at the same time, or both.",
										"key": "ETag",
										"value": "<string>"
									},
									{
										"description": "(Required) Identifies the source sending the request. Used to separate different service consumers.\nName should identify customer (bank) and consumer 'application'. The format of the field is 'Organization name'-'Application name'.\n",
										"key": "X-EVRY-CLIENT-CLIENTNAME",
										"value": "<string>"
									},
									{
										"description": "(Required) Unique log reference, generated on the client, and must be unique across multiple sessions and days.",
										"key": "X-EVRY-CLIENT-REQUESTID",
										"value": "<string>"
									},
									{
										"description": "If request origins from a mobile device, this is set to TRUE, else FALSE or not present",
										"key": "X-EVRY-CLIENT-ISMOBILE",
										"value": "<string>"
									},
									{
										"description": "Defines the Signature in the request. Used in accordance with these [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/)\n",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "Defines the Digest in the request. Used in accordance with [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/Digest),\nand is mandatory for all requests containing body.\n",
										"key": "Digest",
										"value": "<string>"
									},
									{
										"description": "Identifies the organization, will in a banking context be the Financial Institution (Konsernnr) registered in the banking infrastructure..",
										"key": "X-EVRY-DATAOWNERORGID",
										"value": "<string>"
									},
									{
										"description": "Identifies the person or system initiating the request.\nNormally this field is set equally to customerid, but should be set to the id of Employee/Agent/Retail/System if request is initiated on behalf of the customerid.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: SSN (Social Security Number) of the user\n* Branch bank employee accessing data of a customer: Logonid of the bank employee\n",
										"key": "X-EVRY-USERID",
										"value": "<string>"
									},
									{
										"description": "Identifies the customer for which this request is initiated.\nShould be set equal to the SSN customer number 11 digits for private customers and the organization number 11 digits with leading zeroes for corporates.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: Organization Number (Foretaksnummer) of the corporate customer\n* Branch bank employee accessing data of a customer: SSN of the user if private customer, Organization Number (Foretaksnummer) if corporate customer\n",
										"key": "X-EVRY-CUSTOMERID",
										"value": "<string>"
									},
									{
										"description": "If the backend soap service is requiring TietoEVRY security object (SO), the field can be set automatic on the TietoEVRY Rest-ESB,\nor the the initiating system can set this field when not integrating through Rest-ESB.\nAn automatic setting of the SO on Rest-ESB is based on an original valid authentication/signing of the request.\n",
										"key": "X-EVRY-SO",
										"value": "<string>"
									},
									{
										"description": "Contains the Security Token used to authenticate the user when logging in to the REST ESB.\nThe REST ESB forwards the Security Token in that header on all requests to the REST Services. In the first version of the REST ESB, the Security Token is an EVRY SO.\nFor clients using IDP, this field is the ID Token (For clients that require SO, a claim within the ID Token contains an SO)",
										"key": "X-EVRY-ESB-SECURITYTOKEN",
										"value": "<string>"
									},
									{
										"description": "Hold the information about user like authentication level ,user Id,organisation ID",
										"key": "X-EVRY-ESB-USERSESSION",
										"value": "<string>"
									},
									{
										"description": "Client ip-address or dns-address from the machine sending the request. Used to separate requests from different physical machines.",
										"key": "X-EVRY-USER-IPADDRESS",
										"value": "<string>"
									},
									{
										"description": "Used to differentiate business logic based on which channel was the origin of the request.\nThe parameter should be set in selfservice use cases, and when a branch officer acts on behalf of the customer.\nValid values are:\n* INT = Online banking from Internet Bank\n* MOB = Online banking from Mobile Bank\n* WAP = Online banking from legacy WAP Mobile Bank\n* SMS = Online banking from SMS Bank\n* TLF = Online banking from Phone Bank\n* ITR = Online banking from office client\n* CEN = Online banking from Charge Engine\n* COR = Online banking from Core\n* BAX = Online banking from Bank Axess\n* BES = Online banking from Corporate Bank\n* OPB = Online banking from Open Banking Parties\n* PSD = Online banking from PSD2 Parties\n* SMW = Online banking from Smart Wealth\n* SPA = Online banking from Saving",
										"key": "X-EVRY-CHANNEL",
										"value": "TLF"
									},
									{
										"description": "Standard HTTP Accept Language. Can be used if textual information from the business systems should deviate from the default language for the organisation.\n",
										"key": "Accept-Language",
										"value": "<string>"
									},
									{
										"description": "Defines the Orgid that the X-EVRY-USERID belongs to.",
										"key": "X-EVRY-USERORGID",
										"value": "<string>"
									},
									{
										"description": "Contains the name of the Client JS Application stored on the user session. The REST ESB forwards the Client JS Application name in that header on all requests to the REST Services",
										"key": "X-EVRY-ESB-CLIENTNAME",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"isNewCreditorAccount\": \"<boolean>\",\n  \"pk\": \"<long>\",\n  \"version\": \"<long>\",\n  \"wbRuleId\": \"<long>\",\n  \"changeId\": \"<long>\",\n  \"futureValueDate\": \"<boolean>\",\n  \"bicAndNationalIdValidate\": \"<boolean>\",\n  \"instructedCurrency\": \"<boolean>\",\n  \"wbRuleIdentification\": {\n    \"code\": \"BLOCKING\",\n    \"showForEndUser\": \"<boolean>\",\n    \"status\": \"INACTIVE\",\n    \"currencyCode\": \"ODV\",\n    \"countryUnionCode\": \"QS\",\n    \"internalDescription\": \"e.*=W*@@zdvjHRkR2cjzML_o+,L6RD%++AHS}gDbp,gb#+k_BR,i-{FO7`gDc7(l //JN7,(cL%CVi=F~gaHLw0.1K>gW[w}D)].\",\n    \"direction\": \"BTB\",\n    \"intermediaryBankPresent\": \"<boolean>\",\n    \"startDate\": \"<date>\",\n    \"name\": \"zhDot `P+(hnIsk`G`6,6KKG-Zo-+ZBtzj7<X1w4Fj]SV|w/L -W1$lUT YXnm8\\\"?HgOMzlDl|^p3\\\"M9RYA_1~;1/AMZq_2E\"\n  },\n  \"wbRuleType\": {\n    \"itemType\": \"BANK\",\n    \"itemValue\": \"9*`YD08oP*>db<JQDX<4&<:tl6=$toQv\"\n  },\n  \"businessArea\": \"CHEQUES\",\n  \"bicIndicator\": \"4\",\n  \"startDate\": \"<date>\",\n  \"endDate\": \"<date>\",\n  \"sanction\": \"<boolean>\",\n  \"minimumAmount\": \"<number>\",\n  \"validForMarket\": \"PM\",\n  \"chargeBearer\": \"SLEV\",\n  \"paymentPriority\": \"HIGH\",\n  \"paymentMethod\": \"COVER\",\n  \"externalDescription\": [\n    {\n      \"description\": \"`FC,uXm%5tR0W9Q`Ve@#a5;5 *kqd({SNpLU;_='^}Yq#t/G@DTzY)\",\n      \"language\": \"BM\"\n    },\n    {\n      \"description\": \"%B;dctp.}ew\",\n      \"language\": \"yVVb\"\n    }\n  ],\n  \"customerName\": \"<string>\",\n  \"name\": \"F,\\\\pyao$wi5Rf8r#ojy!(Q&]p@r@#t.^fWRj_{Nd1jNI1AtSz))S>j~P-t]21 2q9zR_ZBUs5b[UUPTcugG4v{CDNBjHa99}^_>[;zC;fa7)CY^iIw.s0Z}_$)\",\n  \"freeText\": \"W gFo37TI]<KEx1WehU#j'/gy9uZg\\\"=hB^a&VKwXbecwL@8aE^M6RN+&}\\\\5x59AaKlNtbplG@Pt1ll\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/wbrule",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"wbrule"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"responseTime": null,
							"body": ""
						},
						{
							"id": "27851672-53e5192a-e647-4f60-a019-68224418a7b0",
							"name": "Not found - resource being updated is not found.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "An entity-tag is an opaque validator for differentiating between multiple representations of the same resource,\nregardless of whether those multiple representations are due to resource state changes over time,\ncontent negotiation resulting in multiple representations being valid at the same time, or both.",
										"key": "ETag",
										"value": "<string>"
									},
									{
										"description": "(Required) Identifies the source sending the request. Used to separate different service consumers.\nName should identify customer (bank) and consumer 'application'. The format of the field is 'Organization name'-'Application name'.\n",
										"key": "X-EVRY-CLIENT-CLIENTNAME",
										"value": "<string>"
									},
									{
										"description": "(Required) Unique log reference, generated on the client, and must be unique across multiple sessions and days.",
										"key": "X-EVRY-CLIENT-REQUESTID",
										"value": "<string>"
									},
									{
										"description": "If request origins from a mobile device, this is set to TRUE, else FALSE or not present",
										"key": "X-EVRY-CLIENT-ISMOBILE",
										"value": "<string>"
									},
									{
										"description": "Defines the Signature in the request. Used in accordance with these [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/)\n",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "Defines the Digest in the request. Used in accordance with [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/Digest),\nand is mandatory for all requests containing body.\n",
										"key": "Digest",
										"value": "<string>"
									},
									{
										"description": "Identifies the organization, will in a banking context be the Financial Institution (Konsernnr) registered in the banking infrastructure..",
										"key": "X-EVRY-DATAOWNERORGID",
										"value": "<string>"
									},
									{
										"description": "Identifies the person or system initiating the request.\nNormally this field is set equally to customerid, but should be set to the id of Employee/Agent/Retail/System if request is initiated on behalf of the customerid.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: SSN (Social Security Number) of the user\n* Branch bank employee accessing data of a customer: Logonid of the bank employee\n",
										"key": "X-EVRY-USERID",
										"value": "<string>"
									},
									{
										"description": "Identifies the customer for which this request is initiated.\nShould be set equal to the SSN customer number 11 digits for private customers and the organization number 11 digits with leading zeroes for corporates.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: Organization Number (Foretaksnummer) of the corporate customer\n* Branch bank employee accessing data of a customer: SSN of the user if private customer, Organization Number (Foretaksnummer) if corporate customer\n",
										"key": "X-EVRY-CUSTOMERID",
										"value": "<string>"
									},
									{
										"description": "If the backend soap service is requiring TietoEVRY security object (SO), the field can be set automatic on the TietoEVRY Rest-ESB,\nor the the initiating system can set this field when not integrating through Rest-ESB.\nAn automatic setting of the SO on Rest-ESB is based on an original valid authentication/signing of the request.\n",
										"key": "X-EVRY-SO",
										"value": "<string>"
									},
									{
										"description": "Contains the Security Token used to authenticate the user when logging in to the REST ESB.\nThe REST ESB forwards the Security Token in that header on all requests to the REST Services. In the first version of the REST ESB, the Security Token is an EVRY SO.\nFor clients using IDP, this field is the ID Token (For clients that require SO, a claim within the ID Token contains an SO)",
										"key": "X-EVRY-ESB-SECURITYTOKEN",
										"value": "<string>"
									},
									{
										"description": "Hold the information about user like authentication level ,user Id,organisation ID",
										"key": "X-EVRY-ESB-USERSESSION",
										"value": "<string>"
									},
									{
										"description": "Client ip-address or dns-address from the machine sending the request. Used to separate requests from different physical machines.",
										"key": "X-EVRY-USER-IPADDRESS",
										"value": "<string>"
									},
									{
										"description": "Used to differentiate business logic based on which channel was the origin of the request.\nThe parameter should be set in selfservice use cases, and when a branch officer acts on behalf of the customer.\nValid values are:\n* INT = Online banking from Internet Bank\n* MOB = Online banking from Mobile Bank\n* WAP = Online banking from legacy WAP Mobile Bank\n* SMS = Online banking from SMS Bank\n* TLF = Online banking from Phone Bank\n* ITR = Online banking from office client\n* CEN = Online banking from Charge Engine\n* COR = Online banking from Core\n* BAX = Online banking from Bank Axess\n* BES = Online banking from Corporate Bank\n* OPB = Online banking from Open Banking Parties\n* PSD = Online banking from PSD2 Parties\n* SMW = Online banking from Smart Wealth\n* SPA = Online banking from Saving",
										"key": "X-EVRY-CHANNEL",
										"value": "TLF"
									},
									{
										"description": "Standard HTTP Accept Language. Can be used if textual information from the business systems should deviate from the default language for the organisation.\n",
										"key": "Accept-Language",
										"value": "<string>"
									},
									{
										"description": "Defines the Orgid that the X-EVRY-USERID belongs to.",
										"key": "X-EVRY-USERORGID",
										"value": "<string>"
									},
									{
										"description": "Contains the name of the Client JS Application stored on the user session. The REST ESB forwards the Client JS Application name in that header on all requests to the REST Services",
										"key": "X-EVRY-ESB-CLIENTNAME",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"isNewCreditorAccount\": \"<boolean>\",\n  \"pk\": \"<long>\",\n  \"version\": \"<long>\",\n  \"wbRuleId\": \"<long>\",\n  \"changeId\": \"<long>\",\n  \"futureValueDate\": \"<boolean>\",\n  \"bicAndNationalIdValidate\": \"<boolean>\",\n  \"instructedCurrency\": \"<boolean>\",\n  \"wbRuleIdentification\": {\n    \"code\": \"BLOCKING\",\n    \"showForEndUser\": \"<boolean>\",\n    \"status\": \"INACTIVE\",\n    \"currencyCode\": \"ODV\",\n    \"countryUnionCode\": \"QS\",\n    \"internalDescription\": \"e.*=W*@@zdvjHRkR2cjzML_o+,L6RD%++AHS}gDbp,gb#+k_BR,i-{FO7`gDc7(l //JN7,(cL%CVi=F~gaHLw0.1K>gW[w}D)].\",\n    \"direction\": \"BTB\",\n    \"intermediaryBankPresent\": \"<boolean>\",\n    \"startDate\": \"<date>\",\n    \"name\": \"zhDot `P+(hnIsk`G`6,6KKG-Zo-+ZBtzj7<X1w4Fj]SV|w/L -W1$lUT YXnm8\\\"?HgOMzlDl|^p3\\\"M9RYA_1~;1/AMZq_2E\"\n  },\n  \"wbRuleType\": {\n    \"itemType\": \"BANK\",\n    \"itemValue\": \"9*`YD08oP*>db<JQDX<4&<:tl6=$toQv\"\n  },\n  \"businessArea\": \"CHEQUES\",\n  \"bicIndicator\": \"4\",\n  \"startDate\": \"<date>\",\n  \"endDate\": \"<date>\",\n  \"sanction\": \"<boolean>\",\n  \"minimumAmount\": \"<number>\",\n  \"validForMarket\": \"PM\",\n  \"chargeBearer\": \"SLEV\",\n  \"paymentPriority\": \"HIGH\",\n  \"paymentMethod\": \"COVER\",\n  \"externalDescription\": [\n    {\n      \"description\": \"`FC,uXm%5tR0W9Q`Ve@#a5;5 *kqd({SNpLU;_='^}Yq#t/G@DTzY)\",\n      \"language\": \"BM\"\n    },\n    {\n      \"description\": \"%B;dctp.}ew\",\n      \"language\": \"yVVb\"\n    }\n  ],\n  \"customerName\": \"<string>\",\n  \"name\": \"F,\\\\pyao$wi5Rf8r#ojy!(Q&]p@r@#t.^fWRj_{Nd1jNI1AtSz))S>j~P-t]21 2q9zR_ZBUs5b[UUPTcugG4v{CDNBjHa99}^_>[;zC;fa7)CY^iIw.s0Z}_$)\",\n  \"freeText\": \"W gFo37TI]<KEx1WehU#j'/gy9uZg\\\"=hB^a&VKwXbecwL@8aE^M6RN+&}\\\\5x59AaKlNtbplG@Pt1ll\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/wbrule",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"wbrule"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"system\": \"<string>\",\n  \"code\": \"<string>\",\n  \"message\": \"<string>\",\n  \"params\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"applicationSpecific\": {\n    \"severity\": \"<string>\",\n    \"logref\": \"<string>\",\n    \"message\": \"<string>\",\n    \"validationErrors\": [\n      {\n        \"errorCode\": \"<string>\",\n        \"errorMessage\": \"<string>\"\n      },\n      {\n        \"errorCode\": \"<string>\",\n        \"errorMessage\": \"<string>\"\n      }\n    ],\n    \"cause\": \"<string>\",\n    \"stackTrace\": \"<string>\"\n  }\n}"
						},
						{
							"id": "27851672-285c12ed-6cfc-431f-ade4-8bf4d5b0e1a6",
							"name": "Internal server error - technical error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "An entity-tag is an opaque validator for differentiating between multiple representations of the same resource,\nregardless of whether those multiple representations are due to resource state changes over time,\ncontent negotiation resulting in multiple representations being valid at the same time, or both.",
										"key": "ETag",
										"value": "<string>"
									},
									{
										"description": "(Required) Identifies the source sending the request. Used to separate different service consumers.\nName should identify customer (bank) and consumer 'application'. The format of the field is 'Organization name'-'Application name'.\n",
										"key": "X-EVRY-CLIENT-CLIENTNAME",
										"value": "<string>"
									},
									{
										"description": "(Required) Unique log reference, generated on the client, and must be unique across multiple sessions and days.",
										"key": "X-EVRY-CLIENT-REQUESTID",
										"value": "<string>"
									},
									{
										"description": "If request origins from a mobile device, this is set to TRUE, else FALSE or not present",
										"key": "X-EVRY-CLIENT-ISMOBILE",
										"value": "<string>"
									},
									{
										"description": "Defines the Signature in the request. Used in accordance with these [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/)\n",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "Defines the Digest in the request. Used in accordance with [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/Digest),\nand is mandatory for all requests containing body.\n",
										"key": "Digest",
										"value": "<string>"
									},
									{
										"description": "Identifies the organization, will in a banking context be the Financial Institution (Konsernnr) registered in the banking infrastructure..",
										"key": "X-EVRY-DATAOWNERORGID",
										"value": "<string>"
									},
									{
										"description": "Identifies the person or system initiating the request.\nNormally this field is set equally to customerid, but should be set to the id of Employee/Agent/Retail/System if request is initiated on behalf of the customerid.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: SSN (Social Security Number) of the user\n* Branch bank employee accessing data of a customer: Logonid of the bank employee\n",
										"key": "X-EVRY-USERID",
										"value": "<string>"
									},
									{
										"description": "Identifies the customer for which this request is initiated.\nShould be set equal to the SSN customer number 11 digits for private customers and the organization number 11 digits with leading zeroes for corporates.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: Organization Number (Foretaksnummer) of the corporate customer\n* Branch bank employee accessing data of a customer: SSN of the user if private customer, Organization Number (Foretaksnummer) if corporate customer\n",
										"key": "X-EVRY-CUSTOMERID",
										"value": "<string>"
									},
									{
										"description": "If the backend soap service is requiring TietoEVRY security object (SO), the field can be set automatic on the TietoEVRY Rest-ESB,\nor the the initiating system can set this field when not integrating through Rest-ESB.\nAn automatic setting of the SO on Rest-ESB is based on an original valid authentication/signing of the request.\n",
										"key": "X-EVRY-SO",
										"value": "<string>"
									},
									{
										"description": "Contains the Security Token used to authenticate the user when logging in to the REST ESB.\nThe REST ESB forwards the Security Token in that header on all requests to the REST Services. In the first version of the REST ESB, the Security Token is an EVRY SO.\nFor clients using IDP, this field is the ID Token (For clients that require SO, a claim within the ID Token contains an SO)",
										"key": "X-EVRY-ESB-SECURITYTOKEN",
										"value": "<string>"
									},
									{
										"description": "Hold the information about user like authentication level ,user Id,organisation ID",
										"key": "X-EVRY-ESB-USERSESSION",
										"value": "<string>"
									},
									{
										"description": "Client ip-address or dns-address from the machine sending the request. Used to separate requests from different physical machines.",
										"key": "X-EVRY-USER-IPADDRESS",
										"value": "<string>"
									},
									{
										"description": "Used to differentiate business logic based on which channel was the origin of the request.\nThe parameter should be set in selfservice use cases, and when a branch officer acts on behalf of the customer.\nValid values are:\n* INT = Online banking from Internet Bank\n* MOB = Online banking from Mobile Bank\n* WAP = Online banking from legacy WAP Mobile Bank\n* SMS = Online banking from SMS Bank\n* TLF = Online banking from Phone Bank\n* ITR = Online banking from office client\n* CEN = Online banking from Charge Engine\n* COR = Online banking from Core\n* BAX = Online banking from Bank Axess\n* BES = Online banking from Corporate Bank\n* OPB = Online banking from Open Banking Parties\n* PSD = Online banking from PSD2 Parties\n* SMW = Online banking from Smart Wealth\n* SPA = Online banking from Saving",
										"key": "X-EVRY-CHANNEL",
										"value": "TLF"
									},
									{
										"description": "Standard HTTP Accept Language. Can be used if textual information from the business systems should deviate from the default language for the organisation.\n",
										"key": "Accept-Language",
										"value": "<string>"
									},
									{
										"description": "Defines the Orgid that the X-EVRY-USERID belongs to.",
										"key": "X-EVRY-USERORGID",
										"value": "<string>"
									},
									{
										"description": "Contains the name of the Client JS Application stored on the user session. The REST ESB forwards the Client JS Application name in that header on all requests to the REST Services",
										"key": "X-EVRY-ESB-CLIENTNAME",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"isNewCreditorAccount\": \"<boolean>\",\n  \"pk\": \"<long>\",\n  \"version\": \"<long>\",\n  \"wbRuleId\": \"<long>\",\n  \"changeId\": \"<long>\",\n  \"futureValueDate\": \"<boolean>\",\n  \"bicAndNationalIdValidate\": \"<boolean>\",\n  \"instructedCurrency\": \"<boolean>\",\n  \"wbRuleIdentification\": {\n    \"code\": \"BLOCKING\",\n    \"showForEndUser\": \"<boolean>\",\n    \"status\": \"INACTIVE\",\n    \"currencyCode\": \"ODV\",\n    \"countryUnionCode\": \"QS\",\n    \"internalDescription\": \"e.*=W*@@zdvjHRkR2cjzML_o+,L6RD%++AHS}gDbp,gb#+k_BR,i-{FO7`gDc7(l //JN7,(cL%CVi=F~gaHLw0.1K>gW[w}D)].\",\n    \"direction\": \"BTB\",\n    \"intermediaryBankPresent\": \"<boolean>\",\n    \"startDate\": \"<date>\",\n    \"name\": \"zhDot `P+(hnIsk`G`6,6KKG-Zo-+ZBtzj7<X1w4Fj]SV|w/L -W1$lUT YXnm8\\\"?HgOMzlDl|^p3\\\"M9RYA_1~;1/AMZq_2E\"\n  },\n  \"wbRuleType\": {\n    \"itemType\": \"BANK\",\n    \"itemValue\": \"9*`YD08oP*>db<JQDX<4&<:tl6=$toQv\"\n  },\n  \"businessArea\": \"CHEQUES\",\n  \"bicIndicator\": \"4\",\n  \"startDate\": \"<date>\",\n  \"endDate\": \"<date>\",\n  \"sanction\": \"<boolean>\",\n  \"minimumAmount\": \"<number>\",\n  \"validForMarket\": \"PM\",\n  \"chargeBearer\": \"SLEV\",\n  \"paymentPriority\": \"HIGH\",\n  \"paymentMethod\": \"COVER\",\n  \"externalDescription\": [\n    {\n      \"description\": \"`FC,uXm%5tR0W9Q`Ve@#a5;5 *kqd({SNpLU;_='^}Yq#t/G@DTzY)\",\n      \"language\": \"BM\"\n    },\n    {\n      \"description\": \"%B;dctp.}ew\",\n      \"language\": \"yVVb\"\n    }\n  ],\n  \"customerName\": \"<string>\",\n  \"name\": \"F,\\\\pyao$wi5Rf8r#ojy!(Q&]p@r@#t.^fWRj_{Nd1jNI1AtSz))S>j~P-t]21 2q9zR_ZBUs5b[UUPTcugG4v{CDNBjHa99}^_>[;zC;fa7)CY^iIw.s0Z}_$)\",\n  \"freeText\": \"W gFo37TI]<KEx1WehU#j'/gy9uZg\\\"=hB^a&VKwXbecwL@8aE^M6RN+&}\\\\5x59AaKlNtbplG@Pt1ll\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/wbrule",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"wbrule"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"system\": \"<string>\",\n  \"code\": \"<string>\",\n  \"message\": \"<string>\",\n  \"params\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"applicationSpecific\": {\n    \"severity\": \"<string>\",\n    \"logref\": \"<string>\",\n    \"message\": \"<string>\",\n    \"validationErrors\": [\n      {\n        \"errorCode\": \"<string>\",\n        \"errorMessage\": \"<string>\"\n      },\n      {\n        \"errorCode\": \"<string>\",\n        \"errorMessage\": \"<string>\"\n      }\n    ],\n    \"cause\": \"<string>\",\n    \"stackTrace\": \"<string>\"\n  }\n}"
						},
						{
							"id": "27851672-bd54d311-09f5-4a58-a0d7-25c789ec0b86",
							"name": "Update a WB Rule record",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "X-EVRY-DATAOWNERORGID",
										"value": "4201",
										"type": "text"
									},
									{
										"key": "x-evry-esb-usersession",
										"value": "{\"bankOrgID\": \"4201\",\"userID\": \"e220102\",\"client\": {\"ip\":\"10.10.10.10\"} }",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-evry-esb-securitytoken",
										"value": "{\"tokenType\": \"EvrySo\", \"token\": \"03111012010400425kglPboRi3h1Q0wGJvxDnjLEmmmyjbdrfsSaabKNt2t%2BCqK3eX2EphONTCSUcmn1BsSaabKNt2t%2BxJppso23a37EmmmyjbdrfyqVfESZ%2BvdaEdNM4lOx0RzgSxAz1%2B8eEsSaabKNt2t%2FXzlyjxYnxhcG46wcbIKp%2FsSaabKNt2t9wBUG0SyIoqFfig80Gq4uXVBtimDzTiu3EfQIWD5xMfk2jSY2FGfvV26qFHJXpC08%3DRScZIBaF5rVbaSQXdfjW7qpDd%2Fx6Uv7yZLZhCUf3MZQpUdJt1NcsZDOjPzj%2FxNUr4iwU0MZPvSc40rnfiJVGhX6lz1BFMma9XVgKg5SRUqBh2Vd0hQRhPCN3LcKOZ%2B4Q6Kstjdn9Jtnmh7ILkD4X%2BB0RNu8YM7rIAPdQI5SLqyM%3D\"}",
										"type": "text"
									},
									{
										"key": "X-EVRY-ESB-CLIENTNAME",
										"value": "pen",
										"type": "text"
									},
									{
										"key": "X-EVRY-CLIENT-CLIENTNAME",
										"value": "pen",
										"type": "text"
									},
									{
										"key": "X-EVRY-CLIENT-REQUESTID",
										"value": "${=java.util.UUID.randomUUID().toString()}",
										"type": "text"
									},
									{
										"key": "content-language",
										"value": "en",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "eTag",
										"value": "9",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"pk\": 3159,\n// \"version\":7,\n    \"wbRuleId\": 2760,\n    \"changeId\": 1210279,\n    \"isNewCreditorAccount\": false,\n    \"wbRuleIdentification\": {\n        \"code\": \"BLOCKING\",\n        \"showForEndUser\": true,\n        \"status\": \"ACTIVE\",\n        \"currencyCode\": \"BYN\",\n        \"internalDescription\": \"For ALL Countries\",\n           \"intermediaryBankPresent\": true,\n        \"direction\": \"INWARD\"\n    },\n    \"businessArea\": \"PAYMENTS\",\n    \"startDate\": \"2023-08-01\",\n    \"sanction\": false,\n    \"minimumAmount\": 5,\n    \"validForMarket\": \"BM\",\n    \"chargeBearer\": \"DEBT\",\n    \"paymentPriority\": \"NORMAL\",\n    \"externalDescription\": [\n        {\n            \"language\": \"en_GB\",\n            \"description\": \"Hi\"\n        },\n        {\n            \"language\": \"nb\",\n            \"description\": \"hiii\"\n        }\n    ],\n    \"freeText\": \"Test Demo\",\n     \"wbRuleType\": {\n        \"itemType\": \"BANK\",\n        \"itemValue\": \"SNOMSG\"\n    },\n      \"bicIndicator\": \"6\"\n\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/wbrule",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"wbrule"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "ETag",
									"value": "10"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Mon, 31 Jul 2023 06:55:27 GMT"
								},
								{
									"key": "X-sorp",
									"value": "e220102;4201;-;pen;http://10.246.89.245:10450/pbdsrv/api/v7;wbrule;-;${=java.util.UUID.randomUUID().toString()};-;-;false"
								},
								{
									"key": "Digest",
									"value": "SHA-256=jOdhM7+VwbJ1iZWG+NNtv5xZfjqDYhMhReIziTu5+Ak="
								},
								{
									"key": "Signature",
									"value": "keyId=\"dc2ccd1e2341ebd5cb34f007d23defe9f0605b7602e0e87a29d32252a4e23fb6\",algorithm=\"ecdsa-sha256\",headers=\"etag x-sorp digest date content-type\",signature=\"MEYCIQCDTciFVGFGUEJStLAYl9sThFOoAR06GrI12fFqojDDWwIhAKAy97NuGpr/DDamsGhZvztN+0nodd/bBmnAH1AwPQ+D\""
								},
								{
									"key": "Content-Length",
									"value": "644"
								},
								{
									"key": "Server",
									"value": "Jetty(9.4.44.v20210927)"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"pk\": 3159,\n    \"version\": 10,\n    \"wbRuleId\": 2760,\n    \"changeId\": 1214824,\n    \"isNewCreditorAccount\": false,\n    \"wbRuleIdentification\": {\n        \"code\": \"BLOCKING\",\n        \"showForEndUser\": true,\n        \"status\": \"VERIFIED\",\n        \"currencyCode\": \"BYN\",\n        \"internalDescription\": \"For ALL Countries\",\n        \"direction\": \"INWARD\",\n        \"intermediaryBankPresent\": true\n    },\n    \"wbRuleType\": {\n        \"itemType\": \"BANK\",\n        \"itemValue\": \"SNOMSG\"\n    },\n    \"businessArea\": \"PAYMENTS\",\n    \"bicIndicator\": \"6\",\n    \"startDate\": \"2023-08-01\",\n    \"sanction\": false,\n    \"minimumAmount\": 5,\n    \"validForMarket\": \"BM\",\n    \"chargeBearer\": \"DEBT\",\n    \"paymentPriority\": \"NORMAL\",\n    \"externalDescription\": [\n        {\n            \"language\": \"en_GB\",\n            \"description\": \"Hi\"\n        },\n        {\n            \"language\": \"nb\",\n            \"description\": \"hiii\"\n        }\n    ],\n    \"freeText\": \"Test Demo\"\n}"
						}
					]
				},
				{
					"name": "Create a WB Rule.",
					"id": "27851672-57ac44b2-c02c-4152-9cbf-c55d5ef233c3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-EVRY-DATAOWNERORGID",
								"value": "4201",
								"type": "text"
							},
							{
								"key": "x-evry-esb-usersession",
								"value": "{\"bankOrgID\": \"4201\",\"userID\": \"e220102\",\"client\": {\"ip\":\"10.10.10.10\"} }",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-evry-esb-securitytoken",
								"value": "{\"tokenType\": \"EvrySo\", \"token\": \"03111012010400425kglPboRi3h1Q0wGJvxDnjLEmmmyjbdrfsSaabKNt2t%2BCqK3eX2EphONTCSUcmn1BsSaabKNt2t%2BxJppso23a37EmmmyjbdrfyqVfESZ%2BvdaEdNM4lOx0RzgSxAz1%2B8eEsSaabKNt2t%2FXzlyjxYnxhcG46wcbIKp%2FsSaabKNt2t9wBUG0SyIoqFfig80Gq4uXVBtimDzTiu3EfQIWD5xMfk2jSY2FGfvV26qFHJXpC08%3DRScZIBaF5rVbaSQXdfjW7qpDd%2Fx6Uv7yZLZhCUf3MZQpUdJt1NcsZDOjPzj%2FxNUr4iwU0MZPvSc40rnfiJVGhX6lz1BFMma9XVgKg5SRUqBh2Vd0hQRhPCN3LcKOZ%2B4Q6Kstjdn9Jtnmh7ILkD4X%2BB0RNu8YM7rIAPdQI5SLqyM%3D\"}",
								"type": "text"
							},
							{
								"key": "X-EVRY-ESB-CLIENTNAME",
								"value": "pen",
								"type": "text"
							},
							{
								"key": "X-EVRY-CLIENT-CLIENTNAME",
								"value": "pen",
								"type": "text"
							},
							{
								"key": "X-EVRY-CLIENT-REQUESTID",
								"value": "${=java.util.UUID.randomUUID().toString()}",
								"type": "text"
							},
							{
								"key": "content-language",
								"value": "en",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "eTag",
								"value": "2",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"isNewCreditorAccount\": true,\n\n  \"bicAndNationalIdValidate\":true,\n  \"instructedCurrency\": true,\n  \"wbRuleIdentification\": {\n    \"code\": \"BLOCKING\",\n    \"showForEndUser\": true,\n    \"currencyCode\": \"EUR\",\n    \"countryUnionCode\": \"US\",\n    \"internalDescription\": \"e.*=W*@@zdvjHRkR2cjzML_o+,L6RD%++AHS}gDbp,gb#+k_BR,i-{FO7`gDc7(l //JN7,(cL%CVi=F~gaHLw0.1K>gW[w}D)].\",\n    \"direction\": \"BTB\",\n    \"intermediaryBankPresent\": true,\n    \"startDate\": \"2023-08-01\",\n    \"name\": \"zhDot `P+(hnIsk`G`6,6KKG-Zo-+ZBtzj7<X1w4Fj]SV|w/L -W1$lUT YXnm8\\\"?HgOMzlDl|^p3\\\"M9RYA_1~;1/AMZq_2E\"\n  },\n  \"wbRuleType\": {\n   \"itemType\": \"BANK\",\n    \"itemValue\": \"VENR\"\n  },\n  \"businessArea\": \"CHEQUES\",\n  \"bicIndicator\": \"4\",\n    \"startDate\": \"2023-08-01\",\n  \"sanction\": false,\n  \"minimumAmount\": 6,\n  \"validForMarket\": \"PM\",\n  \"chargeBearer\": \"SLEV\",\n  \"paymentPriority\": \"HIGH\",\n  \"paymentMethod\": \"COVER\",\n  \"externalDescription\": [\n    {\n      \"description\": \"`FC,uXm%5tR0W9Q`Ve@#a5;5 *kqd({SNpLU;_='^}Yq#t/G@DTzY)\",\n      \"language\": \"nb\"\n    }\n  ],\n  \"customerName\": \"Nidhish\",\n  \"name\": \"F,\\\\pyao$wi5Rf8r#ojy!(Q&]p@r@#t.^fWRj_{Nd1jNI1AtSz))S>j~P-t]21 2q9zR_ZBUs5b[UUPTcugG4v{CDNBjHa99}^_>[;zC;fa7)CY^iIw.s0Z}_$)\",\n  \"freeText\": \"W gFo37TI]<KEx1WehU#j'/gy9uZg\\\"=hB^a&VKwXbecwL@8aE^M6RN+&}\\\\5x59AaKlNtbplG@Pt1ll\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/wbrule",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"wbrule"
							]
						},
						"description": "Endpoint to create a WB Rule for a particular bank with some details.<br>\nWB Rule can be created and request body input varies depending on the details.<br>\nThis endpoint is access restricted."
					},
					"response": [
						{
							"id": "27851672-4d579e8f-8469-4ee4-b64b-bae37358dab8",
							"name": "CREATED - Successfully created WB Rule.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) Identifies the source sending the request. Used to separate different service consumers.\nName should identify customer (bank) and consumer 'application'. The format of the field is 'Organization name'-'Application name'.\n",
										"key": "X-EVRY-CLIENT-CLIENTNAME",
										"value": "<string>"
									},
									{
										"description": "(Required) Unique log reference, generated on the client, and must be unique across multiple sessions and days.",
										"key": "X-EVRY-CLIENT-REQUESTID",
										"value": "<string>"
									},
									{
										"description": "If request origins from a mobile device, this is set to TRUE, else FALSE or not present",
										"key": "X-EVRY-CLIENT-ISMOBILE",
										"value": "<string>"
									},
									{
										"description": "Defines the Signature in the request. Used in accordance with these [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/)\n",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "Defines the Digest in the request. Used in accordance with [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/Digest),\nand is mandatory for all requests containing body.\n",
										"key": "Digest",
										"value": "<string>"
									},
									{
										"description": "Identifies the organization, will in a banking context be the Financial Institution (Konsernnr) registered in the banking infrastructure..",
										"key": "X-EVRY-DATAOWNERORGID",
										"value": "<string>"
									},
									{
										"description": "Identifies the person or system initiating the request.\nNormally this field is set equally to customerid, but should be set to the id of Employee/Agent/Retail/System if request is initiated on behalf of the customerid.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: SSN (Social Security Number) of the user\n* Branch bank employee accessing data of a customer: Logonid of the bank employee\n",
										"key": "X-EVRY-USERID",
										"value": "<string>"
									},
									{
										"description": "Identifies the customer for which this request is initiated.\nShould be set equal to the SSN customer number 11 digits for private customers and the organization number 11 digits with leading zeroes for corporates.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: Organization Number (Foretaksnummer) of the corporate customer\n* Branch bank employee accessing data of a customer: SSN of the user if private customer, Organization Number (Foretaksnummer) if corporate customer\n",
										"key": "X-EVRY-CUSTOMERID",
										"value": "<string>"
									},
									{
										"description": "If the backend soap service is requiring TietoEVRY security object (SO), the field can be set automatic on the TietoEVRY Rest-ESB,\nor the the initiating system can set this field when not integrating through Rest-ESB.\nAn automatic setting of the SO on Rest-ESB is based on an original valid authentication/signing of the request.\n",
										"key": "X-EVRY-SO",
										"value": "<string>"
									},
									{
										"description": "Contains the Security Token used to authenticate the user when logging in to the REST ESB.\nThe REST ESB forwards the Security Token in that header on all requests to the REST Services. In the first version of the REST ESB, the Security Token is an EVRY SO.\nFor clients using IDP, this field is the ID Token (For clients that require SO, a claim within the ID Token contains an SO)",
										"key": "X-EVRY-ESB-SECURITYTOKEN",
										"value": "<string>"
									},
									{
										"description": "Hold the information about user like authentication level ,user Id,organisation ID",
										"key": "X-EVRY-ESB-USERSESSION",
										"value": "<string>"
									},
									{
										"description": "Client ip-address or dns-address from the machine sending the request. Used to separate requests from different physical machines.",
										"key": "X-EVRY-USER-IPADDRESS",
										"value": "<string>"
									},
									{
										"description": "Used to differentiate business logic based on which channel was the origin of the request.\nThe parameter should be set in selfservice use cases, and when a branch officer acts on behalf of the customer.\nValid values are:\n* INT = Online banking from Internet Bank\n* MOB = Online banking from Mobile Bank\n* WAP = Online banking from legacy WAP Mobile Bank\n* SMS = Online banking from SMS Bank\n* TLF = Online banking from Phone Bank\n* ITR = Online banking from office client\n* CEN = Online banking from Charge Engine\n* COR = Online banking from Core\n* BAX = Online banking from Bank Axess\n* BES = Online banking from Corporate Bank\n* OPB = Online banking from Open Banking Parties\n* PSD = Online banking from PSD2 Parties\n* SMW = Online banking from Smart Wealth\n* SPA = Online banking from Saving",
										"key": "X-EVRY-CHANNEL",
										"value": "TLF"
									},
									{
										"description": "Standard HTTP Accept Language. Can be used if textual information from the business systems should deviate from the default language for the organisation.\n",
										"key": "Accept-Language",
										"value": "<string>"
									},
									{
										"description": "Defines the Orgid that the X-EVRY-USERID belongs to.",
										"key": "X-EVRY-USERORGID",
										"value": "<string>"
									},
									{
										"description": "Contains the name of the Client JS Application stored on the user session. The REST ESB forwards the Client JS Application name in that header on all requests to the REST Services",
										"key": "X-EVRY-ESB-CLIENTNAME",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"isNewCreditorAccount\": \"<boolean>\",\n  \"pk\": \"<long>\",\n  \"version\": \"<long>\",\n  \"wbRuleId\": \"<long>\",\n  \"changeId\": \"<long>\",\n  \"futureValueDate\": \"<boolean>\",\n  \"bicAndNationalIdValidate\": \"<boolean>\",\n  \"instructedCurrency\": \"<boolean>\",\n  \"wbRuleIdentification\": {\n    \"code\": \"BLOCKING\",\n    \"showForEndUser\": \"<boolean>\",\n    \"status\": \"INACTIVE\",\n    \"currencyCode\": \"ODV\",\n    \"countryUnionCode\": \"QS\",\n    \"internalDescription\": \"e.*=W*@@zdvjHRkR2cjzML_o+,L6RD%++AHS}gDbp,gb#+k_BR,i-{FO7`gDc7(l //JN7,(cL%CVi=F~gaHLw0.1K>gW[w}D)].\",\n    \"direction\": \"BTB\",\n    \"intermediaryBankPresent\": \"<boolean>\",\n    \"startDate\": \"<date>\",\n    \"name\": \"zhDot `P+(hnIsk`G`6,6KKG-Zo-+ZBtzj7<X1w4Fj]SV|w/L -W1$lUT YXnm8\\\"?HgOMzlDl|^p3\\\"M9RYA_1~;1/AMZq_2E\"\n  },\n  \"wbRuleType\": {\n    \"itemType\": \"BANK\",\n    \"itemValue\": \"9*`YD08oP*>db<JQDX<4&<:tl6=$toQv\"\n  },\n  \"businessArea\": \"CHEQUES\",\n  \"bicIndicator\": \"4\",\n  \"startDate\": \"<date>\",\n  \"endDate\": \"<date>\",\n  \"sanction\": \"<boolean>\",\n  \"minimumAmount\": \"<number>\",\n  \"validForMarket\": \"PM\",\n  \"chargeBearer\": \"SLEV\",\n  \"paymentPriority\": \"HIGH\",\n  \"paymentMethod\": \"COVER\",\n  \"externalDescription\": [\n    {\n      \"description\": \"`FC,uXm%5tR0W9Q`Ve@#a5;5 *kqd({SNpLU;_='^}Yq#t/G@DTzY)\",\n      \"language\": \"BM\"\n    },\n    {\n      \"description\": \"%B;dctp.}ew\",\n      \"language\": \"yVVb\"\n    }\n  ],\n  \"customerName\": \"<string>\",\n  \"name\": \"F,\\\\pyao$wi5Rf8r#ojy!(Q&]p@r@#t.^fWRj_{Nd1jNI1AtSz))S>j~P-t]21 2q9zR_ZBUs5b[UUPTcugG4v{CDNBjHa99}^_>[;zC;fa7)CY^iIw.s0Z}_$)\",\n  \"freeText\": \"W gFo37TI]<KEx1WehU#j'/gy9uZg\\\"=hB^a&VKwXbecwL@8aE^M6RN+&}\\\\5x59AaKlNtbplG@Pt1ll\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/wbrule",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"wbrule"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"disabled": false,
									"description": {
										"content": "Defines the ETag value of this record.",
										"type": "text/plain"
									},
									"key": "ETag",
									"value": "<string>"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"isNewCreditorAccount\": \"<boolean>\",\n  \"pk\": \"<long>\",\n  \"version\": \"<long>\",\n  \"wbRuleId\": \"<long>\",\n  \"changeId\": \"<long>\",\n  \"futureValueDate\": \"<boolean>\",\n  \"bicAndNationalIdValidate\": \"<boolean>\",\n  \"instructedCurrency\": \"<boolean>\",\n  \"wbRuleIdentification\": {\n    \"code\": \"BLOCKING\",\n    \"showForEndUser\": \"<boolean>\",\n    \"status\": \"INACTIVE\",\n    \"currencyCode\": \"ODV\",\n    \"countryUnionCode\": \"QS\",\n    \"internalDescription\": \"e.*=W*@@zdvjHRkR2cjzML_o+,L6RD%++AHS}gDbp,gb#+k_BR,i-{FO7`gDc7(l //JN7,(cL%CVi=F~gaHLw0.1K>gW[w}D)].\",\n    \"direction\": \"BTB\",\n    \"intermediaryBankPresent\": \"<boolean>\",\n    \"startDate\": \"<date>\",\n    \"name\": \"zhDot `P+(hnIsk`G`6,6KKG-Zo-+ZBtzj7<X1w4Fj]SV|w/L -W1$lUT YXnm8\\\"?HgOMzlDl|^p3\\\"M9RYA_1~;1/AMZq_2E\"\n  },\n  \"wbRuleType\": {\n    \"itemType\": \"BANK\",\n    \"itemValue\": \"9*`YD08oP*>db<JQDX<4&<:tl6=$toQv\"\n  },\n  \"businessArea\": \"CHEQUES\",\n  \"bicIndicator\": \"4\",\n  \"startDate\": \"<date>\",\n  \"endDate\": \"<date>\",\n  \"sanction\": \"<boolean>\",\n  \"minimumAmount\": \"<number>\",\n  \"validForMarket\": \"PM\",\n  \"chargeBearer\": \"SLEV\",\n  \"paymentPriority\": \"HIGH\",\n  \"paymentMethod\": \"COVER\",\n  \"externalDescription\": [\n    {\n      \"description\": \"`FC,uXm%5tR0W9Q`Ve@#a5;5 *kqd({SNpLU;_='^}Yq#t/G@DTzY)\",\n      \"language\": \"BM\"\n    },\n    {\n      \"description\": \"%B;dctp.}ew\",\n      \"language\": \"yVVb\"\n    }\n  ],\n  \"customerName\": \"<string>\",\n  \"name\": \"F,\\\\pyao$wi5Rf8r#ojy!(Q&]p@r@#t.^fWRj_{Nd1jNI1AtSz))S>j~P-t]21 2q9zR_ZBUs5b[UUPTcugG4v{CDNBjHa99}^_>[;zC;fa7)CY^iIw.s0Z}_$)\",\n  \"freeText\": \"W gFo37TI]<KEx1WehU#j'/gy9uZg\\\"=hB^a&VKwXbecwL@8aE^M6RN+&}\\\\5x59AaKlNtbplG@Pt1ll\"\n}"
						},
						{
							"id": "27851672-6950774f-cf0c-47a7-bdb6-4fa563af6d26",
							"name": "Bad Request - If missing or badly formed parameters",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) Identifies the source sending the request. Used to separate different service consumers.\nName should identify customer (bank) and consumer 'application'. The format of the field is 'Organization name'-'Application name'.\n",
										"key": "X-EVRY-CLIENT-CLIENTNAME",
										"value": "<string>"
									},
									{
										"description": "(Required) Unique log reference, generated on the client, and must be unique across multiple sessions and days.",
										"key": "X-EVRY-CLIENT-REQUESTID",
										"value": "<string>"
									},
									{
										"description": "If request origins from a mobile device, this is set to TRUE, else FALSE or not present",
										"key": "X-EVRY-CLIENT-ISMOBILE",
										"value": "<string>"
									},
									{
										"description": "Defines the Signature in the request. Used in accordance with these [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/)\n",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "Defines the Digest in the request. Used in accordance with [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/Digest),\nand is mandatory for all requests containing body.\n",
										"key": "Digest",
										"value": "<string>"
									},
									{
										"description": "Identifies the organization, will in a banking context be the Financial Institution (Konsernnr) registered in the banking infrastructure..",
										"key": "X-EVRY-DATAOWNERORGID",
										"value": "<string>"
									},
									{
										"description": "Identifies the person or system initiating the request.\nNormally this field is set equally to customerid, but should be set to the id of Employee/Agent/Retail/System if request is initiated on behalf of the customerid.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: SSN (Social Security Number) of the user\n* Branch bank employee accessing data of a customer: Logonid of the bank employee\n",
										"key": "X-EVRY-USERID",
										"value": "<string>"
									},
									{
										"description": "Identifies the customer for which this request is initiated.\nShould be set equal to the SSN customer number 11 digits for private customers and the organization number 11 digits with leading zeroes for corporates.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: Organization Number (Foretaksnummer) of the corporate customer\n* Branch bank employee accessing data of a customer: SSN of the user if private customer, Organization Number (Foretaksnummer) if corporate customer\n",
										"key": "X-EVRY-CUSTOMERID",
										"value": "<string>"
									},
									{
										"description": "If the backend soap service is requiring TietoEVRY security object (SO), the field can be set automatic on the TietoEVRY Rest-ESB,\nor the the initiating system can set this field when not integrating through Rest-ESB.\nAn automatic setting of the SO on Rest-ESB is based on an original valid authentication/signing of the request.\n",
										"key": "X-EVRY-SO",
										"value": "<string>"
									},
									{
										"description": "Contains the Security Token used to authenticate the user when logging in to the REST ESB.\nThe REST ESB forwards the Security Token in that header on all requests to the REST Services. In the first version of the REST ESB, the Security Token is an EVRY SO.\nFor clients using IDP, this field is the ID Token (For clients that require SO, a claim within the ID Token contains an SO)",
										"key": "X-EVRY-ESB-SECURITYTOKEN",
										"value": "<string>"
									},
									{
										"description": "Hold the information about user like authentication level ,user Id,organisation ID",
										"key": "X-EVRY-ESB-USERSESSION",
										"value": "<string>"
									},
									{
										"description": "Client ip-address or dns-address from the machine sending the request. Used to separate requests from different physical machines.",
										"key": "X-EVRY-USER-IPADDRESS",
										"value": "<string>"
									},
									{
										"description": "Used to differentiate business logic based on which channel was the origin of the request.\nThe parameter should be set in selfservice use cases, and when a branch officer acts on behalf of the customer.\nValid values are:\n* INT = Online banking from Internet Bank\n* MOB = Online banking from Mobile Bank\n* WAP = Online banking from legacy WAP Mobile Bank\n* SMS = Online banking from SMS Bank\n* TLF = Online banking from Phone Bank\n* ITR = Online banking from office client\n* CEN = Online banking from Charge Engine\n* COR = Online banking from Core\n* BAX = Online banking from Bank Axess\n* BES = Online banking from Corporate Bank\n* OPB = Online banking from Open Banking Parties\n* PSD = Online banking from PSD2 Parties\n* SMW = Online banking from Smart Wealth\n* SPA = Online banking from Saving",
										"key": "X-EVRY-CHANNEL",
										"value": "TLF"
									},
									{
										"description": "Standard HTTP Accept Language. Can be used if textual information from the business systems should deviate from the default language for the organisation.\n",
										"key": "Accept-Language",
										"value": "<string>"
									},
									{
										"description": "Defines the Orgid that the X-EVRY-USERID belongs to.",
										"key": "X-EVRY-USERORGID",
										"value": "<string>"
									},
									{
										"description": "Contains the name of the Client JS Application stored on the user session. The REST ESB forwards the Client JS Application name in that header on all requests to the REST Services",
										"key": "X-EVRY-ESB-CLIENTNAME",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"isNewCreditorAccount\": \"<boolean>\",\n  \"pk\": \"<long>\",\n  \"version\": \"<long>\",\n  \"wbRuleId\": \"<long>\",\n  \"changeId\": \"<long>\",\n  \"futureValueDate\": \"<boolean>\",\n  \"bicAndNationalIdValidate\": \"<boolean>\",\n  \"instructedCurrency\": \"<boolean>\",\n  \"wbRuleIdentification\": {\n    \"code\": \"BLOCKING\",\n    \"showForEndUser\": \"<boolean>\",\n    \"status\": \"INACTIVE\",\n    \"currencyCode\": \"ODV\",\n    \"countryUnionCode\": \"QS\",\n    \"internalDescription\": \"e.*=W*@@zdvjHRkR2cjzML_o+,L6RD%++AHS}gDbp,gb#+k_BR,i-{FO7`gDc7(l //JN7,(cL%CVi=F~gaHLw0.1K>gW[w}D)].\",\n    \"direction\": \"BTB\",\n    \"intermediaryBankPresent\": \"<boolean>\",\n    \"startDate\": \"<date>\",\n    \"name\": \"zhDot `P+(hnIsk`G`6,6KKG-Zo-+ZBtzj7<X1w4Fj]SV|w/L -W1$lUT YXnm8\\\"?HgOMzlDl|^p3\\\"M9RYA_1~;1/AMZq_2E\"\n  },\n  \"wbRuleType\": {\n    \"itemType\": \"BANK\",\n    \"itemValue\": \"9*`YD08oP*>db<JQDX<4&<:tl6=$toQv\"\n  },\n  \"businessArea\": \"CHEQUES\",\n  \"bicIndicator\": \"4\",\n  \"startDate\": \"<date>\",\n  \"endDate\": \"<date>\",\n  \"sanction\": \"<boolean>\",\n  \"minimumAmount\": \"<number>\",\n  \"validForMarket\": \"PM\",\n  \"chargeBearer\": \"SLEV\",\n  \"paymentPriority\": \"HIGH\",\n  \"paymentMethod\": \"COVER\",\n  \"externalDescription\": [\n    {\n      \"description\": \"`FC,uXm%5tR0W9Q`Ve@#a5;5 *kqd({SNpLU;_='^}Yq#t/G@DTzY)\",\n      \"language\": \"BM\"\n    },\n    {\n      \"description\": \"%B;dctp.}ew\",\n      \"language\": \"yVVb\"\n    }\n  ],\n  \"customerName\": \"<string>\",\n  \"name\": \"F,\\\\pyao$wi5Rf8r#ojy!(Q&]p@r@#t.^fWRj_{Nd1jNI1AtSz))S>j~P-t]21 2q9zR_ZBUs5b[UUPTcugG4v{CDNBjHa99}^_>[;zC;fa7)CY^iIw.s0Z}_$)\",\n  \"freeText\": \"W gFo37TI]<KEx1WehU#j'/gy9uZg\\\"=hB^a&VKwXbecwL@8aE^M6RN+&}\\\\5x59AaKlNtbplG@Pt1ll\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/wbrule",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"wbrule"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"system\": \"<string>\",\n  \"code\": \"<string>\",\n  \"message\": \"<string>\",\n  \"params\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"applicationSpecific\": {\n    \"severity\": \"<string>\",\n    \"logref\": \"<string>\",\n    \"message\": \"<string>\",\n    \"validationErrors\": [\n      {\n        \"errorCode\": \"<string>\",\n        \"errorMessage\": \"<string>\"\n      },\n      {\n        \"errorCode\": \"<string>\",\n        \"errorMessage\": \"<string>\"\n      }\n    ],\n    \"cause\": \"<string>\",\n    \"stackTrace\": \"<string>\"\n  }\n}"
						},
						{
							"id": "27851672-b7d06603-0aeb-4005-9070-9a77376270c8",
							"name": "Unauthorized - In case user not authenticated",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) Identifies the source sending the request. Used to separate different service consumers.\nName should identify customer (bank) and consumer 'application'. The format of the field is 'Organization name'-'Application name'.\n",
										"key": "X-EVRY-CLIENT-CLIENTNAME",
										"value": "<string>"
									},
									{
										"description": "(Required) Unique log reference, generated on the client, and must be unique across multiple sessions and days.",
										"key": "X-EVRY-CLIENT-REQUESTID",
										"value": "<string>"
									},
									{
										"description": "If request origins from a mobile device, this is set to TRUE, else FALSE or not present",
										"key": "X-EVRY-CLIENT-ISMOBILE",
										"value": "<string>"
									},
									{
										"description": "Defines the Signature in the request. Used in accordance with these [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/)\n",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "Defines the Digest in the request. Used in accordance with [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/Digest),\nand is mandatory for all requests containing body.\n",
										"key": "Digest",
										"value": "<string>"
									},
									{
										"description": "Identifies the organization, will in a banking context be the Financial Institution (Konsernnr) registered in the banking infrastructure..",
										"key": "X-EVRY-DATAOWNERORGID",
										"value": "<string>"
									},
									{
										"description": "Identifies the person or system initiating the request.\nNormally this field is set equally to customerid, but should be set to the id of Employee/Agent/Retail/System if request is initiated on behalf of the customerid.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: SSN (Social Security Number) of the user\n* Branch bank employee accessing data of a customer: Logonid of the bank employee\n",
										"key": "X-EVRY-USERID",
										"value": "<string>"
									},
									{
										"description": "Identifies the customer for which this request is initiated.\nShould be set equal to the SSN customer number 11 digits for private customers and the organization number 11 digits with leading zeroes for corporates.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: Organization Number (Foretaksnummer) of the corporate customer\n* Branch bank employee accessing data of a customer: SSN of the user if private customer, Organization Number (Foretaksnummer) if corporate customer\n",
										"key": "X-EVRY-CUSTOMERID",
										"value": "<string>"
									},
									{
										"description": "If the backend soap service is requiring TietoEVRY security object (SO), the field can be set automatic on the TietoEVRY Rest-ESB,\nor the the initiating system can set this field when not integrating through Rest-ESB.\nAn automatic setting of the SO on Rest-ESB is based on an original valid authentication/signing of the request.\n",
										"key": "X-EVRY-SO",
										"value": "<string>"
									},
									{
										"description": "Contains the Security Token used to authenticate the user when logging in to the REST ESB.\nThe REST ESB forwards the Security Token in that header on all requests to the REST Services. In the first version of the REST ESB, the Security Token is an EVRY SO.\nFor clients using IDP, this field is the ID Token (For clients that require SO, a claim within the ID Token contains an SO)",
										"key": "X-EVRY-ESB-SECURITYTOKEN",
										"value": "<string>"
									},
									{
										"description": "Hold the information about user like authentication level ,user Id,organisation ID",
										"key": "X-EVRY-ESB-USERSESSION",
										"value": "<string>"
									},
									{
										"description": "Client ip-address or dns-address from the machine sending the request. Used to separate requests from different physical machines.",
										"key": "X-EVRY-USER-IPADDRESS",
										"value": "<string>"
									},
									{
										"description": "Used to differentiate business logic based on which channel was the origin of the request.\nThe parameter should be set in selfservice use cases, and when a branch officer acts on behalf of the customer.\nValid values are:\n* INT = Online banking from Internet Bank\n* MOB = Online banking from Mobile Bank\n* WAP = Online banking from legacy WAP Mobile Bank\n* SMS = Online banking from SMS Bank\n* TLF = Online banking from Phone Bank\n* ITR = Online banking from office client\n* CEN = Online banking from Charge Engine\n* COR = Online banking from Core\n* BAX = Online banking from Bank Axess\n* BES = Online banking from Corporate Bank\n* OPB = Online banking from Open Banking Parties\n* PSD = Online banking from PSD2 Parties\n* SMW = Online banking from Smart Wealth\n* SPA = Online banking from Saving",
										"key": "X-EVRY-CHANNEL",
										"value": "TLF"
									},
									{
										"description": "Standard HTTP Accept Language. Can be used if textual information from the business systems should deviate from the default language for the organisation.\n",
										"key": "Accept-Language",
										"value": "<string>"
									},
									{
										"description": "Defines the Orgid that the X-EVRY-USERID belongs to.",
										"key": "X-EVRY-USERORGID",
										"value": "<string>"
									},
									{
										"description": "Contains the name of the Client JS Application stored on the user session. The REST ESB forwards the Client JS Application name in that header on all requests to the REST Services",
										"key": "X-EVRY-ESB-CLIENTNAME",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"isNewCreditorAccount\": \"<boolean>\",\n  \"pk\": \"<long>\",\n  \"version\": \"<long>\",\n  \"wbRuleId\": \"<long>\",\n  \"changeId\": \"<long>\",\n  \"futureValueDate\": \"<boolean>\",\n  \"bicAndNationalIdValidate\": \"<boolean>\",\n  \"instructedCurrency\": \"<boolean>\",\n  \"wbRuleIdentification\": {\n    \"code\": \"BLOCKING\",\n    \"showForEndUser\": \"<boolean>\",\n    \"status\": \"INACTIVE\",\n    \"currencyCode\": \"ODV\",\n    \"countryUnionCode\": \"QS\",\n    \"internalDescription\": \"e.*=W*@@zdvjHRkR2cjzML_o+,L6RD%++AHS}gDbp,gb#+k_BR,i-{FO7`gDc7(l //JN7,(cL%CVi=F~gaHLw0.1K>gW[w}D)].\",\n    \"direction\": \"BTB\",\n    \"intermediaryBankPresent\": \"<boolean>\",\n    \"startDate\": \"<date>\",\n    \"name\": \"zhDot `P+(hnIsk`G`6,6KKG-Zo-+ZBtzj7<X1w4Fj]SV|w/L -W1$lUT YXnm8\\\"?HgOMzlDl|^p3\\\"M9RYA_1~;1/AMZq_2E\"\n  },\n  \"wbRuleType\": {\n    \"itemType\": \"BANK\",\n    \"itemValue\": \"9*`YD08oP*>db<JQDX<4&<:tl6=$toQv\"\n  },\n  \"businessArea\": \"CHEQUES\",\n  \"bicIndicator\": \"4\",\n  \"startDate\": \"<date>\",\n  \"endDate\": \"<date>\",\n  \"sanction\": \"<boolean>\",\n  \"minimumAmount\": \"<number>\",\n  \"validForMarket\": \"PM\",\n  \"chargeBearer\": \"SLEV\",\n  \"paymentPriority\": \"HIGH\",\n  \"paymentMethod\": \"COVER\",\n  \"externalDescription\": [\n    {\n      \"description\": \"`FC,uXm%5tR0W9Q`Ve@#a5;5 *kqd({SNpLU;_='^}Yq#t/G@DTzY)\",\n      \"language\": \"BM\"\n    },\n    {\n      \"description\": \"%B;dctp.}ew\",\n      \"language\": \"yVVb\"\n    }\n  ],\n  \"customerName\": \"<string>\",\n  \"name\": \"F,\\\\pyao$wi5Rf8r#ojy!(Q&]p@r@#t.^fWRj_{Nd1jNI1AtSz))S>j~P-t]21 2q9zR_ZBUs5b[UUPTcugG4v{CDNBjHa99}^_>[;zC;fa7)CY^iIw.s0Z}_$)\",\n  \"freeText\": \"W gFo37TI]<KEx1WehU#j'/gy9uZg\\\"=hB^a&VKwXbecwL@8aE^M6RN+&}\\\\5x59AaKlNtbplG@Pt1ll\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/wbrule",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"wbrule"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"responseTime": null,
							"body": ""
						},
						{
							"id": "27851672-98d5c65e-c2b3-4995-b082-5b56a94b1347",
							"name": "Forbidden - In case user not authorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) Identifies the source sending the request. Used to separate different service consumers.\nName should identify customer (bank) and consumer 'application'. The format of the field is 'Organization name'-'Application name'.\n",
										"key": "X-EVRY-CLIENT-CLIENTNAME",
										"value": "<string>"
									},
									{
										"description": "(Required) Unique log reference, generated on the client, and must be unique across multiple sessions and days.",
										"key": "X-EVRY-CLIENT-REQUESTID",
										"value": "<string>"
									},
									{
										"description": "If request origins from a mobile device, this is set to TRUE, else FALSE or not present",
										"key": "X-EVRY-CLIENT-ISMOBILE",
										"value": "<string>"
									},
									{
										"description": "Defines the Signature in the request. Used in accordance with these [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/)\n",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "Defines the Digest in the request. Used in accordance with [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/Digest),\nand is mandatory for all requests containing body.\n",
										"key": "Digest",
										"value": "<string>"
									},
									{
										"description": "Identifies the organization, will in a banking context be the Financial Institution (Konsernnr) registered in the banking infrastructure..",
										"key": "X-EVRY-DATAOWNERORGID",
										"value": "<string>"
									},
									{
										"description": "Identifies the person or system initiating the request.\nNormally this field is set equally to customerid, but should be set to the id of Employee/Agent/Retail/System if request is initiated on behalf of the customerid.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: SSN (Social Security Number) of the user\n* Branch bank employee accessing data of a customer: Logonid of the bank employee\n",
										"key": "X-EVRY-USERID",
										"value": "<string>"
									},
									{
										"description": "Identifies the customer for which this request is initiated.\nShould be set equal to the SSN customer number 11 digits for private customers and the organization number 11 digits with leading zeroes for corporates.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: Organization Number (Foretaksnummer) of the corporate customer\n* Branch bank employee accessing data of a customer: SSN of the user if private customer, Organization Number (Foretaksnummer) if corporate customer\n",
										"key": "X-EVRY-CUSTOMERID",
										"value": "<string>"
									},
									{
										"description": "If the backend soap service is requiring TietoEVRY security object (SO), the field can be set automatic on the TietoEVRY Rest-ESB,\nor the the initiating system can set this field when not integrating through Rest-ESB.\nAn automatic setting of the SO on Rest-ESB is based on an original valid authentication/signing of the request.\n",
										"key": "X-EVRY-SO",
										"value": "<string>"
									},
									{
										"description": "Contains the Security Token used to authenticate the user when logging in to the REST ESB.\nThe REST ESB forwards the Security Token in that header on all requests to the REST Services. In the first version of the REST ESB, the Security Token is an EVRY SO.\nFor clients using IDP, this field is the ID Token (For clients that require SO, a claim within the ID Token contains an SO)",
										"key": "X-EVRY-ESB-SECURITYTOKEN",
										"value": "<string>"
									},
									{
										"description": "Hold the information about user like authentication level ,user Id,organisation ID",
										"key": "X-EVRY-ESB-USERSESSION",
										"value": "<string>"
									},
									{
										"description": "Client ip-address or dns-address from the machine sending the request. Used to separate requests from different physical machines.",
										"key": "X-EVRY-USER-IPADDRESS",
										"value": "<string>"
									},
									{
										"description": "Used to differentiate business logic based on which channel was the origin of the request.\nThe parameter should be set in selfservice use cases, and when a branch officer acts on behalf of the customer.\nValid values are:\n* INT = Online banking from Internet Bank\n* MOB = Online banking from Mobile Bank\n* WAP = Online banking from legacy WAP Mobile Bank\n* SMS = Online banking from SMS Bank\n* TLF = Online banking from Phone Bank\n* ITR = Online banking from office client\n* CEN = Online banking from Charge Engine\n* COR = Online banking from Core\n* BAX = Online banking from Bank Axess\n* BES = Online banking from Corporate Bank\n* OPB = Online banking from Open Banking Parties\n* PSD = Online banking from PSD2 Parties\n* SMW = Online banking from Smart Wealth\n* SPA = Online banking from Saving",
										"key": "X-EVRY-CHANNEL",
										"value": "TLF"
									},
									{
										"description": "Standard HTTP Accept Language. Can be used if textual information from the business systems should deviate from the default language for the organisation.\n",
										"key": "Accept-Language",
										"value": "<string>"
									},
									{
										"description": "Defines the Orgid that the X-EVRY-USERID belongs to.",
										"key": "X-EVRY-USERORGID",
										"value": "<string>"
									},
									{
										"description": "Contains the name of the Client JS Application stored on the user session. The REST ESB forwards the Client JS Application name in that header on all requests to the REST Services",
										"key": "X-EVRY-ESB-CLIENTNAME",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"isNewCreditorAccount\": \"<boolean>\",\n  \"pk\": \"<long>\",\n  \"version\": \"<long>\",\n  \"wbRuleId\": \"<long>\",\n  \"changeId\": \"<long>\",\n  \"futureValueDate\": \"<boolean>\",\n  \"bicAndNationalIdValidate\": \"<boolean>\",\n  \"instructedCurrency\": \"<boolean>\",\n  \"wbRuleIdentification\": {\n    \"code\": \"BLOCKING\",\n    \"showForEndUser\": \"<boolean>\",\n    \"status\": \"INACTIVE\",\n    \"currencyCode\": \"ODV\",\n    \"countryUnionCode\": \"QS\",\n    \"internalDescription\": \"e.*=W*@@zdvjHRkR2cjzML_o+,L6RD%++AHS}gDbp,gb#+k_BR,i-{FO7`gDc7(l //JN7,(cL%CVi=F~gaHLw0.1K>gW[w}D)].\",\n    \"direction\": \"BTB\",\n    \"intermediaryBankPresent\": \"<boolean>\",\n    \"startDate\": \"<date>\",\n    \"name\": \"zhDot `P+(hnIsk`G`6,6KKG-Zo-+ZBtzj7<X1w4Fj]SV|w/L -W1$lUT YXnm8\\\"?HgOMzlDl|^p3\\\"M9RYA_1~;1/AMZq_2E\"\n  },\n  \"wbRuleType\": {\n    \"itemType\": \"BANK\",\n    \"itemValue\": \"9*`YD08oP*>db<JQDX<4&<:tl6=$toQv\"\n  },\n  \"businessArea\": \"CHEQUES\",\n  \"bicIndicator\": \"4\",\n  \"startDate\": \"<date>\",\n  \"endDate\": \"<date>\",\n  \"sanction\": \"<boolean>\",\n  \"minimumAmount\": \"<number>\",\n  \"validForMarket\": \"PM\",\n  \"chargeBearer\": \"SLEV\",\n  \"paymentPriority\": \"HIGH\",\n  \"paymentMethod\": \"COVER\",\n  \"externalDescription\": [\n    {\n      \"description\": \"`FC,uXm%5tR0W9Q`Ve@#a5;5 *kqd({SNpLU;_='^}Yq#t/G@DTzY)\",\n      \"language\": \"BM\"\n    },\n    {\n      \"description\": \"%B;dctp.}ew\",\n      \"language\": \"yVVb\"\n    }\n  ],\n  \"customerName\": \"<string>\",\n  \"name\": \"F,\\\\pyao$wi5Rf8r#ojy!(Q&]p@r@#t.^fWRj_{Nd1jNI1AtSz))S>j~P-t]21 2q9zR_ZBUs5b[UUPTcugG4v{CDNBjHa99}^_>[;zC;fa7)CY^iIw.s0Z}_$)\",\n  \"freeText\": \"W gFo37TI]<KEx1WehU#j'/gy9uZg\\\"=hB^a&VKwXbecwL@8aE^M6RN+&}\\\\5x59AaKlNtbplG@Pt1ll\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/wbrule",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"wbrule"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"responseTime": null,
							"body": ""
						},
						{
							"id": "27851672-f807b2b9-15b6-400a-add4-9dcb5e517581",
							"name": "Internal server error - technical error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) Identifies the source sending the request. Used to separate different service consumers.\nName should identify customer (bank) and consumer 'application'. The format of the field is 'Organization name'-'Application name'.\n",
										"key": "X-EVRY-CLIENT-CLIENTNAME",
										"value": "<string>"
									},
									{
										"description": "(Required) Unique log reference, generated on the client, and must be unique across multiple sessions and days.",
										"key": "X-EVRY-CLIENT-REQUESTID",
										"value": "<string>"
									},
									{
										"description": "If request origins from a mobile device, this is set to TRUE, else FALSE or not present",
										"key": "X-EVRY-CLIENT-ISMOBILE",
										"value": "<string>"
									},
									{
										"description": "Defines the Signature in the request. Used in accordance with these [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/)\n",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "Defines the Digest in the request. Used in accordance with [specifications](https://datatracker.ietf.org/doc/draft-cavage-http-signatures/Digest),\nand is mandatory for all requests containing body.\n",
										"key": "Digest",
										"value": "<string>"
									},
									{
										"description": "Identifies the organization, will in a banking context be the Financial Institution (Konsernnr) registered in the banking infrastructure..",
										"key": "X-EVRY-DATAOWNERORGID",
										"value": "<string>"
									},
									{
										"description": "Identifies the person or system initiating the request.\nNormally this field is set equally to customerid, but should be set to the id of Employee/Agent/Retail/System if request is initiated on behalf of the customerid.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: SSN (Social Security Number) of the user\n* Branch bank employee accessing data of a customer: Logonid of the bank employee\n",
										"key": "X-EVRY-USERID",
										"value": "<string>"
									},
									{
										"description": "Identifies the customer for which this request is initiated.\nShould be set equal to the SSN customer number 11 digits for private customers and the organization number 11 digits with leading zeroes for corporates.\n* Private user accessing his own data: SSN (Social Security Number) of the user\n* Corporate user accessing data of a corporate customer: Organization Number (Foretaksnummer) of the corporate customer\n* Branch bank employee accessing data of a customer: SSN of the user if private customer, Organization Number (Foretaksnummer) if corporate customer\n",
										"key": "X-EVRY-CUSTOMERID",
										"value": "<string>"
									},
									{
										"description": "If the backend soap service is requiring TietoEVRY security object (SO), the field can be set automatic on the TietoEVRY Rest-ESB,\nor the the initiating system can set this field when not integrating through Rest-ESB.\nAn automatic setting of the SO on Rest-ESB is based on an original valid authentication/signing of the request.\n",
										"key": "X-EVRY-SO",
										"value": "<string>"
									},
									{
										"description": "Contains the Security Token used to authenticate the user when logging in to the REST ESB.\nThe REST ESB forwards the Security Token in that header on all requests to the REST Services. In the first version of the REST ESB, the Security Token is an EVRY SO.\nFor clients using IDP, this field is the ID Token (For clients that require SO, a claim within the ID Token contains an SO)",
										"key": "X-EVRY-ESB-SECURITYTOKEN",
										"value": "<string>"
									},
									{
										"description": "Hold the information about user like authentication level ,user Id,organisation ID",
										"key": "X-EVRY-ESB-USERSESSION",
										"value": "<string>"
									},
									{
										"description": "Client ip-address or dns-address from the machine sending the request. Used to separate requests from different physical machines.",
										"key": "X-EVRY-USER-IPADDRESS",
										"value": "<string>"
									},
									{
										"description": "Used to differentiate business logic based on which channel was the origin of the request.\nThe parameter should be set in selfservice use cases, and when a branch officer acts on behalf of the customer.\nValid values are:\n* INT = Online banking from Internet Bank\n* MOB = Online banking from Mobile Bank\n* WAP = Online banking from legacy WAP Mobile Bank\n* SMS = Online banking from SMS Bank\n* TLF = Online banking from Phone Bank\n* ITR = Online banking from office client\n* CEN = Online banking from Charge Engine\n* COR = Online banking from Core\n* BAX = Online banking from Bank Axess\n* BES = Online banking from Corporate Bank\n* OPB = Online banking from Open Banking Parties\n* PSD = Online banking from PSD2 Parties\n* SMW = Online banking from Smart Wealth\n* SPA = Online banking from Saving",
										"key": "X-EVRY-CHANNEL",
										"value": "TLF"
									},
									{
										"description": "Standard HTTP Accept Language. Can be used if textual information from the business systems should deviate from the default language for the organisation.\n",
										"key": "Accept-Language",
										"value": "<string>"
									},
									{
										"description": "Defines the Orgid that the X-EVRY-USERID belongs to.",
										"key": "X-EVRY-USERORGID",
										"value": "<string>"
									},
									{
										"description": "Contains the name of the Client JS Application stored on the user session. The REST ESB forwards the Client JS Application name in that header on all requests to the REST Services",
										"key": "X-EVRY-ESB-CLIENTNAME",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"isNewCreditorAccount\": \"<boolean>\",\n  \"pk\": \"<long>\",\n  \"version\": \"<long>\",\n  \"wbRuleId\": \"<long>\",\n  \"changeId\": \"<long>\",\n  \"futureValueDate\": \"<boolean>\",\n  \"bicAndNationalIdValidate\": \"<boolean>\",\n  \"instructedCurrency\": \"<boolean>\",\n  \"wbRuleIdentification\": {\n    \"code\": \"BLOCKING\",\n    \"showForEndUser\": \"<boolean>\",\n    \"status\": \"INACTIVE\",\n    \"currencyCode\": \"ODV\",\n    \"countryUnionCode\": \"QS\",\n    \"internalDescription\": \"e.*=W*@@zdvjHRkR2cjzML_o+,L6RD%++AHS}gDbp,gb#+k_BR,i-{FO7`gDc7(l //JN7,(cL%CVi=F~gaHLw0.1K>gW[w}D)].\",\n    \"direction\": \"BTB\",\n    \"intermediaryBankPresent\": \"<boolean>\",\n    \"startDate\": \"<date>\",\n    \"name\": \"zhDot `P+(hnIsk`G`6,6KKG-Zo-+ZBtzj7<X1w4Fj]SV|w/L -W1$lUT YXnm8\\\"?HgOMzlDl|^p3\\\"M9RYA_1~;1/AMZq_2E\"\n  },\n  \"wbRuleType\": {\n    \"itemType\": \"BANK\",\n    \"itemValue\": \"9*`YD08oP*>db<JQDX<4&<:tl6=$toQv\"\n  },\n  \"businessArea\": \"CHEQUES\",\n  \"bicIndicator\": \"4\",\n  \"startDate\": \"<date>\",\n  \"endDate\": \"<date>\",\n  \"sanction\": \"<boolean>\",\n  \"minimumAmount\": \"<number>\",\n  \"validForMarket\": \"PM\",\n  \"chargeBearer\": \"SLEV\",\n  \"paymentPriority\": \"HIGH\",\n  \"paymentMethod\": \"COVER\",\n  \"externalDescription\": [\n    {\n      \"description\": \"`FC,uXm%5tR0W9Q`Ve@#a5;5 *kqd({SNpLU;_='^}Yq#t/G@DTzY)\",\n      \"language\": \"BM\"\n    },\n    {\n      \"description\": \"%B;dctp.}ew\",\n      \"language\": \"yVVb\"\n    }\n  ],\n  \"customerName\": \"<string>\",\n  \"name\": \"F,\\\\pyao$wi5Rf8r#ojy!(Q&]p@r@#t.^fWRj_{Nd1jNI1AtSz))S>j~P-t]21 2q9zR_ZBUs5b[UUPTcugG4v{CDNBjHa99}^_>[;zC;fa7)CY^iIw.s0Z}_$)\",\n  \"freeText\": \"W gFo37TI]<KEx1WehU#j'/gy9uZg\\\"=hB^a&VKwXbecwL@8aE^M6RN+&}\\\\5x59AaKlNtbplG@Pt1ll\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/wbrule",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"wbrule"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"system\": \"<string>\",\n  \"code\": \"<string>\",\n  \"message\": \"<string>\",\n  \"params\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"applicationSpecific\": {\n    \"severity\": \"<string>\",\n    \"logref\": \"<string>\",\n    \"message\": \"<string>\",\n    \"validationErrors\": [\n      {\n        \"errorCode\": \"<string>\",\n        \"errorMessage\": \"<string>\"\n      },\n      {\n        \"errorCode\": \"<string>\",\n        \"errorMessage\": \"<string>\"\n      }\n    ],\n    \"cause\": \"<string>\",\n    \"stackTrace\": \"<string>\"\n  }\n}"
						},
						{
							"id": "27851672-4ff29dc7-41ec-4f5a-8d1e-8728cefc256c",
							"name": "Create a WB Rule.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-EVRY-DATAOWNERORGID",
										"value": "4201",
										"type": "text"
									},
									{
										"key": "x-evry-esb-usersession",
										"value": "{\"bankOrgID\": \"4201\",\"userID\": \"e220102\",\"client\": {\"ip\":\"10.10.10.10\"} }",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-evry-esb-securitytoken",
										"value": "{\"tokenType\": \"EvrySo\", \"token\": \"03111012010400425kglPboRi3h1Q0wGJvxDnjLEmmmyjbdrfsSaabKNt2t%2BCqK3eX2EphONTCSUcmn1BsSaabKNt2t%2BxJppso23a37EmmmyjbdrfyqVfESZ%2BvdaEdNM4lOx0RzgSxAz1%2B8eEsSaabKNt2t%2FXzlyjxYnxhcG46wcbIKp%2FsSaabKNt2t9wBUG0SyIoqFfig80Gq4uXVBtimDzTiu3EfQIWD5xMfk2jSY2FGfvV26qFHJXpC08%3DRScZIBaF5rVbaSQXdfjW7qpDd%2Fx6Uv7yZLZhCUf3MZQpUdJt1NcsZDOjPzj%2FxNUr4iwU0MZPvSc40rnfiJVGhX6lz1BFMma9XVgKg5SRUqBh2Vd0hQRhPCN3LcKOZ%2B4Q6Kstjdn9Jtnmh7ILkD4X%2BB0RNu8YM7rIAPdQI5SLqyM%3D\"}",
										"type": "text"
									},
									{
										"key": "X-EVRY-ESB-CLIENTNAME",
										"value": "pen",
										"type": "text"
									},
									{
										"key": "X-EVRY-CLIENT-CLIENTNAME",
										"value": "pen",
										"type": "text"
									},
									{
										"key": "X-EVRY-CLIENT-REQUESTID",
										"value": "${=java.util.UUID.randomUUID().toString()}",
										"type": "text"
									},
									{
										"key": "content-language",
										"value": "en",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "eTag",
										"value": "2",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"isNewCreditorAccount\": true,\n\n  \"bicAndNationalIdValidate\":true,\n  \"instructedCurrency\": true,\n  \"wbRuleIdentification\": {\n    \"code\": \"BLOCKING\",\n    \"showForEndUser\": true,\n    \"currencyCode\": \"EUR\",\n    \"countryUnionCode\": \"US\",\n    \"internalDescription\": \"e.*=W*@@zdvjHRkR2cjzML_o+,L6RD%++AHS}gDbp,gb#+k_BR,i-{FO7`gDc7(l //JN7,(cL%CVi=F~gaHLw0.1K>gW[w}D)].\",\n    \"direction\": \"BTB\",\n    \"intermediaryBankPresent\": true,\n    \"startDate\": \"2023-08-01\",\n    \"name\": \"zhDot `P+(hnIsk`G`6,6KKG-Zo-+ZBtzj7<X1w4Fj]SV|w/L -W1$lUT YXnm8\\\"?HgOMzlDl|^p3\\\"M9RYA_1~;1/AMZq_2E\"\n  },\n  \"wbRuleType\": {\n   \"itemType\": \"BANK\",\n    \"itemValue\": \"VENR\"\n  },\n  \"businessArea\": \"CHEQUES\",\n  \"bicIndicator\": \"4\",\n    \"startDate\": \"2023-08-01\",\n  \"sanction\": false,\n  \"minimumAmount\": 6,\n  \"validForMarket\": \"PM\",\n  \"chargeBearer\": \"SLEV\",\n  \"paymentPriority\": \"HIGH\",\n  \"paymentMethod\": \"COVER\",\n  \"externalDescription\": [\n    {\n      \"description\": \"`FC,uXm%5tR0W9Q`Ve@#a5;5 *kqd({SNpLU;_='^}Yq#t/G@DTzY)\",\n      \"language\": \"nb\"\n    }\n  ],\n  \"customerName\": \"Nidhish\",\n  \"name\": \"F,\\\\pyao$wi5Rf8r#ojy!(Q&]p@r@#t.^fWRj_{Nd1jNI1AtSz))S>j~P-t]21 2q9zR_ZBUs5b[UUPTcugG4v{CDNBjHa99}^_>[;zC;fa7)CY^iIw.s0Z}_$)\",\n  \"freeText\": \"W gFo37TI]<KEx1WehU#j'/gy9uZg\\\"=hB^a&VKwXbecwL@8aE^M6RN+&}\\\\5x59AaKlNtbplG@Pt1ll\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/wbrule",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"wbrule"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "ETag",
									"value": "0"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Mon, 31 Jul 2023 07:01:56 GMT"
								},
								{
									"key": "X-sorp",
									"value": "e220102;4201;-;pen;http://10.246.89.245:10450/pbdsrv/api/v7;wbrule;-;${=java.util.UUID.randomUUID().toString()};-;-;false"
								},
								{
									"key": "Digest",
									"value": "SHA-256=85HEZ2pH/luZMRl4Hml16JDz/55IQ42YY/+04AgY1P4="
								},
								{
									"key": "Signature",
									"value": "keyId=\"dc2ccd1e2341ebd5cb34f007d23defe9f0605b7602e0e87a29d32252a4e23fb6\",algorithm=\"ecdsa-sha256\",headers=\"etag x-sorp digest date content-type\",signature=\"MEQCIEGIrwNBKWCCYLMX1IEXg8CHGKYFWyejSwF3tRB6YOKgAiBsq18m6NjthER98u887MkH24qzBywhNDluk14oUE6SBw==\""
								},
								{
									"key": "Content-Length",
									"value": "1037"
								},
								{
									"key": "Server",
									"value": "Jetty(9.4.44.v20210927)"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"pk\": 3160,\n    \"version\": 0,\n    \"wbRuleId\": 3160,\n    \"changeId\": 1214825,\n    \"isNewCreditorAccount\": true,\n    \"bicAndNationalIdValidate\": true,\n    \"instructedCurrency\": true,\n    \"wbRuleIdentification\": {\n        \"code\": \"BLOCKING\",\n        \"showForEndUser\": true,\n        \"status\": \"VERIFIED\",\n        \"currencyCode\": \"EUR\",\n        \"countryUnionCode\": \"US\",\n        \"internalDescription\": \"e.*=W*@@zdvjHRkR2cjzML_o+,L6RD%++AHS}gDbp,gb#+k_BR,i-{FO7`gDc7(l //JN7,(cL%CVi=F~gaHLw0.1K>gW[w}D)].\",\n        \"direction\": \"BTB\",\n        \"intermediaryBankPresent\": true\n    },\n    \"wbRuleType\": {\n        \"itemType\": \"BANK\",\n        \"itemValue\": \"VENR\"\n    },\n    \"businessArea\": \"CHEQUES\",\n    \"bicIndicator\": \"4\",\n    \"startDate\": \"2023-08-01\",\n    \"sanction\": false,\n    \"minimumAmount\": 6,\n    \"validForMarket\": \"PM\",\n    \"chargeBearer\": \"SLEV\",\n    \"paymentPriority\": \"HIGH\",\n    \"paymentMethod\": \"COVER\",\n    \"externalDescription\": [\n        {\n            \"language\": \"nb\",\n            \"description\": \"`FC,uXm%5tR0W9Q`Ve@#a5;5 *kqd({SNpLU;_='^}Yq#t/G@DTzY)\"\n        }\n    ],\n    \"name\": \"F,\\\\pyao$wi5Rf8r#ojy!(Q&]p@r@#t.^fWRj_{Nd1jNI1AtSz))S>j~P-t]21 2q9zR_ZBUs5b[UUPTcugG4v{CDNBjHa99}^_>[;zC;fa7)CY^iIw.s0Z}_$)\",\n    \"freeText\": \"W gFo37TI]<KEx1WehU#j'/gy9uZg\\\"=hB^a&VKwXbecwL@8aE^M6RN+&}\\\\5x59AaKlNtbplG@Pt1ll\"\n}"
						}
					]
				}
			],
			"id": "27851672-6734e135-b1c6-41f0-9750-fc0f1259599b"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "391efa11-8cb7-4ec1-bc6a-d47aba0738ba",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "be246a76-4b65-4d8b-98ea-23b8a8cc02c0",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:2002/pbdsrv/api/v7"
		},
		{
			"key": "ref-value",
			"value": "<string>"
		}
	]
}